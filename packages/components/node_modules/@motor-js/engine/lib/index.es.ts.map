{"version":3,"file":"index.es.ts","sources":["../src/contexts/EngineProvider.jsx","../src/components/Login/StyledLogin.jsx","../src/components/Login/Login.jsx","../src/components/NotConnected/StyledNotConnected.jsx","../src/hooks/useEngine.jsx","../src/components/NotConnected/NotConnected.jsx","../src/components/Motor/Motor.jsx","../src/components/License/LicenseCheck.js","../src/utils/object.js","../src/hooks/useHyperCube.jsx","../src/hooks/useList.jsx","../src/utils/hyperCubeUtilities.js","../src/hooks/useData.jsx","../src/utils/createHCDef.js","../src/hooks/useTable.jsx","../src/hooks/useGlobal.jsx","../src/hooks/useButton.jsx","../src/hooks/useCapability.jsx","../src/hooks/useSearch.jsx","../src/hooks/useSelections.jsx","../src/utils/CapApiUtils/index.js","../src/utils/CapApiUtils/Uid.js","../src/hooks/useApp.jsx","../src/hooks/useLayout.jsx","../src/hooks/useVariable.jsx","../src/hooks/useBookmark.jsx"],"sourcesContent":["import React from 'react'\n\nexport const EngineContext = React.createContext()\n","import React from \"react\";\n\nconst StyledLogin = ({\n  config,\n  header,\n  body,\n  bodySub,\n  size,\n  buttonText,\n  backgroundColor,\n  buttonFontColor,\n  buttonColor,\n  logo,\n  logoHeight,\n  logoWidth,\n  loginfontFamily,\n}) => {\n  const tenantUri = config.host;\n  const webIntegrationId = config.webIntId;\n\n  const goToLogin = () => {\n    const loginUrl = new URL(`https://${tenantUri}/login`);\n    loginUrl.searchParams.append(\"returnto\", window.location.href);\n    loginUrl.searchParams.append(\"qlik-web-integration-id\", webIntegrationId);\n    window.location.href = loginUrl;\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: 1040,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundColor: \"rgba(105, 105, 105, 0.8)\",\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          position: \"relative\",\n          margin: 0.2,\n          padding: \"5px\",\n          backgroundColor,\n          border: \"1px solid gray\",\n          borderRadius: \"8px\",\n          width: \"30%\",\n          minWidth: \"350px\",\n          top: \"30%\",\n          left: \"35%\",\n          alignSelf: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: \"-webkit-box\",\n            // display: \"-webkit-flex\",\n            // display: \"-ms-flexbox\",\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            borderBottom: \"solid 1px #ced4da\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"row\",\n            msFlexDirection: \"row\",\n            flexDirection: \"row\",\n            WebkitFlex: \"0 0 auto\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div size={size} style={{ padding: \"0.6rem\", fontSize: \"18px\" }}>\n            {logo ? (\n              <img\n                src={logo}\n                height={logoHeight}\n                width={logoWidth}\n                alt=\"Logo\"\n              ></img>\n            ) : (\n              header\n            )}\n          </div>\n        </div>\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: -webkit-box;\n            // display: -webkit-flex;\n            // display: -ms-flexbox;\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            padding: \"0.8rem\",\n            WebkitAlignItems: \"center\",\n            WebkitBoxAlign: \"center\",\n            msFlexAlign: \"center\",\n            alignItems: \"center\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"column\",\n            msFlexDirection: \"column\",\n            flexDirection: \"column\",\n            WebkitFlex: \"column\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div style={{ padding: \"0.6rem\", fontSize: \"14px\" }}>{body}</div>\n          <div style={{ padding: \"0.6rem\", fontSize: \"14px\" }}>{bodySub}</div>\n          <button\n            style={{\n              fontFamily: loginfontFamily,\n              fontSize: \"14px\",\n              cursor: \"pointer\",\n              position: \"relative\",\n              margin: \"5px\",\n              backgroundColor: buttonColor,\n              borderRadius: \"8px\",\n              color: buttonFontColor,\n              border: 0,\n              outline: \"none\",\n              WebkitTransition: \"none\",\n              transition: \"none\",\n              padding: \"0.7em 1.7em\",\n            }}\n            onClick={goToLogin}\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledLogin;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledLogin from \"./StyledLogin\";\nimport { EngineContext } from \"../../contexts/EngineProvider\";\n\nconst Login = ({ config, ...rest }) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const { errorCode } = useContext(EngineContext);\n\n  return (\n    <div style={{ display: errorCode === -1 ? \"\" : \"none\" }}>\n      {config && errorCode && <StyledLogin config={config} {...rest} />}\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  config: PropTypes.object,\n  header: PropTypes.string,\n  body: PropTypes.string,\n  bodySub: PropTypes.string,\n  size: PropTypes.oneOf([\"tiny\", \"small\", \"medium\", \"large\", \"xlarge\"]),\n  buttonText: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  buttonFontColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  logo: PropTypes.string,\n  logoHeight: PropTypes.string,\n  logoWidth: PropTypes.string,\n  header: PropTypes.string,\n  loginfontFamily: PropTypes.string,\n};\n\nLogin.defaultProps = {\n  config: null,\n  logo: null,\n  logoHeight: null,\n  logoWidth: null,\n  header: \"Welcome to your motor js mashup\",\n  body: \"Please log on to access your application\",\n  bodySub: \"\",\n  size: \"medium\",\n  buttonText: \"Login\",\n  backgroundColor: \"white\",\n  buttonFontColor: \"white\",\n  buttonColor: \"#ff6961\",\n  loginfontFamily: \"Inter,sans-serif\",\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst StyledNotConnected = ({\n  header,\n  body,\n  size,\n  buttonText,\n  backgroundColor,\n  buttonFontColor,\n  buttonColor,\n  loginfontFamily,\n}) => {\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: 1040,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundColor: \"rgba(105, 105, 105, 0.8)\",\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          position: \"relative\",\n          margin: 0.2,\n          padding: \"5px\",\n          backgroundColor,\n          border: \"1px solid gray\",\n          borderRadius: \"8px\",\n          width: \"30%\",\n          minWidth: \"350px\",\n          top: \"30%\",\n          left: \"35%\",\n          alignSelf: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: \"-webkit-box\",\n            // display: \"-webkit-flex\",\n            // display: \"-ms-flexbox\",\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            borderBottom: \"solid 1px #ced4da\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"row\",\n            msFlexDirection: \"row\",\n            flexDirection: \"row\",\n            WebkitFlex: \"0 0 auto\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div size={size} style={{ padding: \"0.8rem\", fontSize: \"16px\" }}>\n            {header}\n          </div>\n        </div>\n        <div\n          focusable={false}\n          width=\"100%\"\n          // justifyContent=\"center\"\n          align=\"center\"\n          direction=\"column\"\n          padding=\"0.8rem\"\n        >\n          <div\n            size={size}\n            style={{\n              padding: \"0.6rem\",\n              fontSize: \"14px\",\n              fontFamily: loginfontFamily,\n            }}\n          >\n            {body}\n          </div>\n          <button\n            style={{\n              fontFamily: loginfontFamily,\n              fontSize: \"14px\",\n              cursor: \"pointer\",\n              position: \"relative\",\n              margin: \"5px\",\n              backgroundColor: buttonColor,\n              borderRadius: \"8px\",\n              color: buttonFontColor,\n              border: 0,\n              outline: \"none\",\n              WebkitTransition: \"none\",\n              transition: \"none\",\n              padding: \"0.7em 1.7em\",\n            }}\n            // eslint-disable-next-line  no-restricted-globals\n            onClick={() => location.reload()}\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledNotConnected;\n","import { useState } from \"react\";\nconst enigma = require(\"enigma.js\");\nconst schema = require(\"enigma.js/schemas/12.170.2.json\");\nconst SenseUtilities = require(\"enigma.js/sense-utilities\");\n\nconst MAX_RETRIES = 3;\n\nfunction useEngine(config) {\n  const responseInterceptors = [\n    {\n      // We only want to handle failed responses from QIX Engine:\n      onRejected: function retryAbortedError(sessionReference, request, error) {\n        console.warn(\n          \"Captured Request: Rejected\",\n          `Error Code: ${error.code} : ${error}`\n        );\n        // We only want to handle aborted QIX errors:\n        if (\n          error.code === schema.enums.LocalizedErrorCode.LOCERR_GENERIC_ABORTED\n        ) {\n          // We keep track of how many consecutive times we have tried to do this call:\n          request.tries = (request.tries || 0) + 1;\n          console.warn(`Captured Request: Retry #${request.tries}`);\n          // We do not want to get stuck in an infinite loop here if something has gone\n          // awry, so we only retry until we have reached MAX_RETRIES:\n          if (request.tries <= MAX_RETRIES) {\n            return request.retry();\n          }\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_GENERIC_INVALID_PARAMETERS\n        ) {\n          return error.code;\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_HC_MODAL_OBJECT_ERROR\n        ) {\n          return error.code;\n        }\n        // If it was not an aborted QIX call, or if we reached MAX_RETRIES, we let the error\n        // trickle down to potential other interceptors, and finally down to resolving/rejecting\n        // the initial promise that the user got when invoking the QIX method:\n        console.warn(error);\n\n        return this.Promise.reject(error);\n      },\n    },\n  ];\n\n  const [engineError, setEngineError] = useState(false);\n  const [errorCode, seErrorCode] = useState(null);\n  const [engine, setEngine] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const tenantUri = config.host;\n        const webIntegrationId = config.webIntId;\n\n        const fetchResult = await fetch(\n          `https://${tenantUri}/api/v1/csrf-token`,\n          {\n            mode: \"cors\", // cors must be enabled\n            credentials: \"include\", // credentials must be included\n            headers: {\n              \"qlik-web-integration-id\": webIntegrationId,\n              \"content-type\": \"application/json\",\n            },\n          }\n        ).catch((error) => {\n          console.log(\"caught failed fetch\", error);\n        });\n\n        const csrfToken = fetchResult.headers.get(\"qlik-csrf-token\");\n        if (csrfToken == null) {\n          console.log(\"Not logged in\");\n          seErrorCode(-1);\n\n          return -1;\n        }\n        const session = enigma.create({\n          schema,\n          url: `wss://${tenantUri}/app/${config.appId}?qlik-web-integration-id=${webIntegrationId}&qlik-csrf-token=${csrfToken}`,\n          createSocket: (url) => new WebSocket(url),\n          responseInterceptors,\n        });\n        session.on(\"suspended\", () => {\n          console.warn(\"Captured session suspended\");\n        });\n        session.on(\"error\", () => {\n          console.warn(\"Captured session error\");\n        });\n        session.on(\"closed\", () => {\n          console.warn(\"Session was closed\");\n          seErrorCode(-3);\n\n          return -3;\n        });\n        const _global = await session.open();\n        const _doc = await _global.openDoc(config.appId);\n        setEngine(_doc);\n        seErrorCode(1);\n\n        return 1;\n      }\n      if (config) {\n        const myConfig = config;\n        const url = SenseUtilities.buildUrl(myConfig);\n        try {\n          const session = enigma.create({\n            schema,\n            url,\n            responseInterceptors,\n          });\n          session.on(\"suspended\", () => {\n            console.warn(\"Captured session suspended\");\n          });\n          session.on(\"error\", () => {\n            console.warn(\"Captured session error\");\n          });\n          session.on(\"closed\", () => {\n            console.warn(\"Session was closed\");\n            seErrorCode(-3);\n\n            return -3;\n          });\n          const _global = await session.open();\n          const _doc = await _global.openDoc(config.appId);\n          setEngine(_doc);\n          seErrorCode(1);\n\n          return 1;\n        } catch (err) {\n          console.warn(\"Captured Error\", err);\n          if (err.code === 1003) {\n            setEngineError(\"No engine. App Not found.\");\n          }\n          seErrorCode(-2);\n\n          return -2;\n        }\n      }\n    })();\n  }, []);\n\n  return { engine, engineError, errorCode };\n}\n\nexport default useEngine;","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledNotConnected from \"./StyledNotConnected\";\nimport { EngineContext } from \"../../contexts/EngineProvider\";\nimport useEngine from \"../../hooks/useEngine\";\n\nconst NotConnected = ({ config, ...rest }) => {\n  // const { errorCode } = useContext(EngineContext) || useEngine(myConfig);\n  const engineContext = useContext(EngineContext);\n  const engineConfigContext = useEngine(config);\n  const { errorCode } = engineContext || engineConfigContext;\n\n  return (\n    <div\n      // errorCode={errorCode}\n      style={{ display: errorCode === -3 ? \"\" : \"none\" }}\n    >\n      {config && errorCode && <StyledNotConnected {...rest} />}\n    </div>\n  );\n};\n\nNotConnected.propTypes = {\n  header: PropTypes.string,\n  body: PropTypes.string,\n  size: PropTypes.oneOf([\"tiny\", \"small\", \"medium\", \"large\", \"xlarge\"]),\n  buttonText: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  buttonFontColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  loginfontFamily: PropTypes.string,\n};\n\nNotConnected.defaultProps = {\n  header: \"Connection to server lost\",\n  body: \"Please reload the page to refresh the dashboard\",\n  size: \"medium\",\n  buttonText: \"Reload Page\",\n  backgroundColor: \"white\",\n  buttonFontColor: \"white\",\n  buttonColor: \"#ff6961\",\n  loginfontFamily: \"Inter,sans-serif\",\n};\n\nexport default NotConnected;\n","import React, { useEffect, useState } from \"react\";\nimport ReactWaterMark from \"react-watermark-component\"\nimport { EngineContext } from \"../../contexts/EngineProvider\";\nimport Login from \"../Login\";\nimport NotConnected from \"../NotConnected\";\nimport useEngine from \"../../hooks/useEngine\";\nimport { LicenseCheck } from \"../License/LicenseCheck\"\n\nfunction Motor({\n  engine,\n  children,\n  licenseKey,\n  config,\n  logo,\n  logoWidth,\n  logoHeight,\n  header,\n  body,\n  bodySub,\n  size,\n  buttonText,\n  buttonFontColor,\n  buttonColor,\n  backgroundColor,\n  loginfontFamily,\n  NotConnectedheader,\n  NotConnectedBody,\n  NotConnectedButtonText,\n}) {\n\n  //const [myTheme, setMyTheme] = useState(defaultTheme)\n  const [myConfig, setMyConfig] = useState(config);\n  const [validLicense, setValidLicense] = useState(true)\n  const newEngine =  engine ? { engine: engine, engineError: null, errorCode: null } :  useEngine(myConfig)\n\n  // check license key\n  const userKey = licenseKey ? LicenseCheck(licenseKey) : []\n\n  // check if license key is valid\n  useEffect(() => {\n    userKey.length > 0 ? setValidLicense(true) : setValidLicense(false)\n  },[licenseKey])\n  \n  const text = `Powered by Motor`;\n  const beginAlarm = function() { console.error('start alarm!'); };\n  \n  const options = {\n    chunkWidth: 200,\n    chunkHeight: 90,\n    textAlign: \"left\",\n    textBaseline: \"bottom\",\n    globalAlpha: 0.27,\n    font: \"16px Roboto sans-serif\",\n    rotateAngle: -0.19,\n    fillStyle: \"#666\",\n  };\n\n  return (\n    <EngineContext.Provider value={newEngine}>\n        <Login\n          config={myConfig}\n          logo={logo}\n          logoHeight={logoHeight}\n          logoWidth={logoWidth}\n          header={header}\n          body={body}\n          bodySub={bodySub}\n          size={size}\n          backgroundColor={backgroundColor}\n          buttonText={buttonText}\n          buttonFontColor={buttonFontColor}\n          buttonColor={buttonColor}\n          loginfontFamily={loginfontFamily}\n        />\n        <NotConnected\n          config={myConfig}\n          header={NotConnectedheader}\n          body={NotConnectedBody}\n          size={size}\n          buttonText={NotConnectedButtonText}\n          backgroundColor={backgroundColor}\n          buttonFontColor={buttonFontColor}\n          buttonColor={buttonColor}\n          loginfontFamily={loginfontFamily}\n        />\n        { !validLicense ? \n            <ReactWaterMark\n              waterMarkText={text}\n              openSecurityDefense\n              securityAlarm={beginAlarm}\n              options={options}\n            >\n            {children}\n           </ReactWaterMark>\n           :\n           <div>\n            {children}\n           </div>\n        }\n    </EngineContext.Provider>\n  );\n}\n\nexport default Motor;\n","import CryptoAES from 'crypto-js/aes'\nimport CryptoENC from 'crypto-js/enc-utf8'\n\nexport function LicenseCheck (userInput) {\n  \n  var i;\n  const licenses = []\n\n  //Create array of unencrypted licernses\n  for (i = 1; i < 101; i++) {\n    licenses.push(\"MotorLicense-\"+i)\n  }\n\n  var decrypt = CryptoAES.decrypt(userInput, \"S@few/M0t0r\");\n  var input = decrypt.toString(CryptoENC)\n\n  //filter license\n  var licenseExists = licenses.filter(lic => { return lic == input } );\n\n  return licenseExists\n}\n\n  /*\n  //Encrypt all the licenses\n  licenses.map(data => {\n    var encrypt = CryptoAES.encrypt(data, \"S@few/M0t0r\");\n    var key = encrypt.toString()\n    encryptedList.push(key)\n  })\n  */\n\n\n  //var encrypt = CryptoAES.encrypt(\"MotorLicense-1\", \"S@few/M0t0r\");\n  //var decrypt = CryptoAES.decrypt(encrypt.toString(), \"S@few/M0t0r\");\n  \n  //var decrypt = CryptoAES.decrypt('U2FsdGVkX18F0eIS4Rkz49TnlMpqP3Yfos8sRJ/GvNY=', \"S@few/M0t0r\");\n  //console.log(decrypt.toString(CryptoENC))\n  //console.log(decrypt.toString(CryptoJS.enc.Hex))\n","export const isObject = (item) =>\n  item && typeof item === \"object\" && !Array.isArray(item);\n\nexport const deepFreeze = (obj) => {\n  Object.keys(obj).forEach(\n    (key) => key && isObject(obj[key]) && Object.freeze(obj[key])\n  );\n\n  return Object.freeze(obj);\n};\n\nexport const deepMerge = (target, ...sources) => {\n  if (!sources.length) {\n    return target;\n  }\n  // making sure to not change target (immutable)\n  const output = { ...target };\n  sources.forEach((source) => {\n    if (isObject(source)) {\n      Object.keys(source).forEach((key) => {\n        if (isObject(source[key])) {\n          if (!output[key]) {\n            output[key] = { ...source[key] };\n          } else {\n            output[key] = deepMerge(output[key], source[key]);\n          }\n        } else {\n          output[key] = source[key];\n        }\n      });\n    }\n  });\n\n  return output;\n};\n","import { useCallback, useRef, useReducer, useEffect, useContext } from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: { qData, qRData, qLayout, selections },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        qData,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: null,\n  qHyperCubeDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 1000,\n  },\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  qInterColumnSortOrder: [],\n  qSuppressZero: false,\n  qSortByExpression: 0,\n  qSuppressMissing: true,\n  qExpression: null,\n  getQRData: false,\n  qSortByNumeric: -1,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qOtherTotalSpec: \"\",\n};\n\nconst useHyperCube = (props) => {\n  const {\n    cols,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSortByNumeric,\n    qSortByExpression,\n    qSuppressMissing,\n    qExpression,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { qData, qRData, qLayout, selections } = state;\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const qObject = useRef(null);\n\n  const qPage = useRef(qPageProp);\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = {\n      qInfo: { qType: \"visualization\" },\n    };\n\n    if (qHyperCubeDef) {\n      const _qHyperCubeDef = qHyperCubeDef;\n      if (cols && cols[1]) {\n        _qHyperCubeDef.qMeasures[0].qDef = {\n          qDef: cols[1],\n        };\n      }\n      if (cols && cols[0])\n        _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n      qProp.qInfo.qType = \"HyperCube\";\n      qProp.qHyperCubeDef = _qHyperCubeDef;\n\n      return qProp;\n    }\n    const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n    const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n    let sortIndex = 0;\n\n    const qDimensions = cols\n      .filter((col, i) => {\n        const isDimension =\n          (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n          (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"dimension\") ||\n          (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n        if (isDimension && !qInterColumnSortOrderSet) {\n          myqInterColumnSortOrder[i] = sortIndex;\n          sortIndex += 1;\n        }\n\n        return isDimension;\n      })\n      .map((col) => {\n        if (typeof col === \"string\") {\n          return {\n            qDef: {\n              qFieldDefs: [col],\n              qSortCriterias: [\n                {\n                  qSortByAscii,\n                  qSortByLoadOrder,\n                },\n              ],\n            },\n            qNullSuppression: true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n        if (typeof col === \"object\" && !col.qLibraryId) {\n          return {\n            qDef: {\n              qFieldDefs: [col.qField],\n              qFieldLabels: [col.qLabel],\n              qSortCriterias: col.qSortCriterias\n                ? [col.qSortCriterias]\n                : [\n                    {\n                      qSortByLoadOrder,\n                      qSortByAscii,\n                    },\n                  ],\n            },\n            qOtherTotalSpec: totalSpec,\n            qOtherLabel:\n              qOtherTotalSpec !== undefined\n                ? qOtherTotalSpec.qOtherLabel\n                : \"Others\",\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qNullSuppression: col.qNullSuppression\n              ? col.qNullSuppression\n              : true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n        if (typeof col === \"object\" && col.qLibraryId) {\n          return {\n            qLibraryId: col.qLibraryId,\n            qType: col.qType,\n            qOtherTotalSpec: totalSpec,\n            qOtherLabel:\n              qOtherTotalSpec !== undefined\n                ? qOtherTotalSpec.qOtherLabel\n                : \"Others\",\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qNullSuppression: col.qNullSuppression\n              ? col.qNullSuppression\n              : true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n\n        return col;\n      });\n\n    const qMeasures = cols\n      .filter((col, i) => {\n        const isMeasure =\n          (typeof col === \"string\" && col.startsWith(\"=\")) ||\n          (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"measure\") ||\n          (typeof col === \"object\" && col.qField.startsWith(\"=\"));\n        if (isMeasure && !qInterColumnSortOrderSet) {\n          myqInterColumnSortOrder[i] = sortIndex;\n          sortIndex += 1;\n        }\n\n        return isMeasure;\n      })\n      .map((col) => {\n        if (typeof col === \"string\") {\n          return {\n            qDef: {\n              qDef: col,\n              qNumFormat: col.qNumFormat,\n            },\n            qSortBy: {\n              qSortByNumeric,\n              qSortByExpression,\n              qExpression,\n              qSuppressMissing,\n            },\n          };\n        }\n        if (typeof col === \"object\") {\n          return {\n            qDef: {\n              qDef: col.qField,\n              qLabel: col.qLabel,\n              qNumFormat: {\n                qType: col.qNumType || \"U\",\n                qUseThou: 1,\n                qFmt: col.qNumFmt,\n                qDec: \".\",\n                qThou: \",\",\n              },\n            },\n            qSortBy: {\n              qSortByNumeric,\n              qSortByExpression,\n              qExpression,\n              qSuppressMissing,\n            },\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qChartType: col.qChartType,\n            qShowPoints: col.qShowPoints,\n            qCurve: col.qCurve,\n            qFillStyle: col.qFillStyle,\n            qLegendShape: col.qLegendShape,\n          };\n        }\n\n        return col;\n      });\n\n    qProp.qHyperCubeDef = {\n      qDimensions,\n      qMeasures,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSuppressMissing,\n      qColumnOrder,\n      qCalcCondition,\n    };\n\n    return qProp;\n  }, [\n    cols,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    const qDataPages = await qObject.current.getHyperCubeData(\n      \"/qHyperCubeDef\",\n      [qPage.current]\n    );\n\n    return qDataPages[0];\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const update = useCallback(\n    async (measureInfo) => {\n      const _qLayout = await getLayout();\n      const _qData = await getData();\n      if (_qData && _isMounted.current) {\n        const _selections = _qData.qMatrix.filter(\n          (row) => row[0].qState === \"S\"\n        );\n\n        if (measureInfo) {\n          measureInfo.map((d, i) => {\n            if (_qLayout.qHyperCube.qMeasureInfo[i]) {\n              _qLayout.qHyperCube.qMeasureInfo[i].qChartType = d.qChartType;\n              _qLayout.qHyperCube.qMeasureInfo[i].qShowPoints = d.qShowPoints;\n              _qLayout.qHyperCube.qMeasureInfo[i].qCurve = d.qCurve;\n              _qLayout.qHyperCube.qMeasureInfo[i].qFillStyle = d.qFillStyle;\n              _qLayout.qHyperCube.qMeasureInfo[i].qLegendShape = d.qLegendShape;\n              // _qLayout.qHyperCube.qMeasureInfo[i].qLegendShape =\n              //   d.qLegendShape === \"dashed\" ? \"5,2\" : null;\n            }\n          });\n        }\n\n        dispatch({\n          type: \"update\",\n          payload: {\n            qData: _qData,\n            qLayout: _qLayout,\n            selections: _selections,\n          },\n        });\n      } else if (_isMounted.current) {\n        dispatch({\n          type: \"update\",\n          payload: {\n            qData: _qData,\n            qLayout: _qLayout,\n          },\n        });\n      }\n      if (getQRData) {\n        const _qRData = await getReducedData();\n        if (_isMounted.current) {\n          dispatch({\n            type: \"updateReducedData\",\n            payload: { qRData: _qRData },\n          });\n        }\n      }\n    },\n    [getData, getLayout, getQRData, getReducedData]\n  );\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (qElemNumber, _selections, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        qElemNumber,\n        _selections,\n        toggle\n      ),\n    []\n  );\n  // const select = useCallback(\n  //   (qElemNumber, _selections, toggle = true) =>\n  //     qObject.current.selectHyperCubeValues(\n  //       '/qHyperCubeDef',\n  //       qElemNumber,\n  //       _selections,\n  //       toggle\n  //     ),\n  //   []\n  // );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    beginSelections,\n    endSelections,\n    qLayout,\n    qData,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n  };\n};\n\nexport default useHyperCube;\n","import { useCallback, useRef, useReducer, useEffect, useContext } from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst initialState = {\n  qDoc: null,\n  qObject: null,\n  qData: null,\n  listData: null,\n  selections: null,\n  selectionsId: null,\n};\n\nfunction reducer(state, action) {\n  const {\n    payload: { qData, listData, selections, selectionsId, qDoc },\n    type,\n  } = action;\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        qData,\n        listData,\n        selections,\n        selectionsId\n      };\n    case \"init\":\n      return {\n        ...state,\n        qDoc,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  autoSortByState: 1,\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  dimension: null,\n  label: null,\n  qListObjectDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 1,\n    qHeight: 10000,\n  },\n};\n\nconst useList = (props) => {\n  const {\n    qPage: qPageProp,\n    dimension,\n    qListObjectDef,\n    qSortByAscii,\n    qSortByLoadOrder,\n    autoSortByState,\n  } = deepMerge(initialProps, props);\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { listData, selections, selectionsId } = state;\n\n  const qObject = useRef(null);\n  const qPage = useRef(qPageProp);\n\n  /** Generate the Definition file */\n  const generateQProp = useCallback(\n    (currentColumn = 0) => {\n      const qProp = { qInfo: { qType: \"visualization\" } };\n      if (qListObjectDef) {\n        qProp.qListObjectDef = qListObjectDef;\n      } else {\n        const qDimensions = dimension\n          .filter(\n            (col) =>\n              (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n              (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n              (typeof col === \"object\" &&\n                col.qLibraryId &&\n                col.qType &&\n                col.qType === \"dimension\")\n          )\n          .map((col) => {\n            if (typeof col === \"string\") {\n              return {\n                qDef: {\n                  qFieldDefs: [col],\n                  qSortCriterias: [{ qSortByLoadOrder, qSortByAscii }],\n                },\n              };\n            }\n\n            return col;\n          });\n        const qLibraryId = {\n          qLibraryId:\n            typeof dimension[0] === \"object\" && dimension[0].qLibraryId\n              ? dimension[0].qLibraryId\n              : \"\",\n        };\n        const qDef = qDimensions[currentColumn];\n        qProp.qListObjectDef = {\n          ...qLibraryId,\n          ...qDef,\n          qShowAlternatives: true,\n          qAutoSortByState: { qDisplayNumberOfRows: autoSortByState },\n        };\n      }\n\n      return qProp;\n    },\n    [autoSortByState, dimension, qListObjectDef, qSortByAscii, qSortByLoadOrder]\n  );\n\n  // Edit to extract all data\n  const getData = useCallback(async () => {\n    const qDataPages = await qObject.current.getListObjectData(\n      \"/qListObjectDef\",\n      [qPage.current]\n    );\n    return qDataPages[0];\n  }, []);\n\n  const structureData = useCallback(async (_qData) => {\n    if (!listData) {\n      \n      if (!_qData) return null;\n      let _listData = []\n      _qData.qMatrix.map((d, i) => {\n        _listData.push({\n          key: d[0].qElemNumber,\n          text: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n          number: d[0].qNumber,\n          state: d[0].qState,\n          value: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n          label: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        });\n      });\n      // Get Selections\n      const _selections = _listData && _listData.filter(row => row.state === \"S\");\n      // Get Selection ID\n      const _selId = _selections && _selections.map(d => d.key);\n\n      return { _selId, _selections, _listData };\n    }\n  }, [listData]);\n\n  /*const getSelections = (data) => {\n    console.log('GET SEL')\n    const sel = data.qMatrix.filter((row) => row[0].qState === \"S\");\n    const arr = [];\n    sel.map((d) => {\n      arr.push({\n        key: d[0].qElemNumber,\n        text: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        number: d[0].qNumber,\n        state: d[0].qState,\n        value: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        label: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n      });\n    });\n    return arr;\n  };\n\n  const getSelectionsId = (data) => {\n    const sel = data.qMatrix.filter((row) => row[0].qState === \"S\");\n    const arr = [];\n    sel.map((d) => {\n      arr.push(d[0].qElemNumber);\n    });\n    return arr;\n  };\n  */\n\n  const update = useCallback(async () => {\n    const _qData = await getData();\n    const { _selId, _selections, _listData } = await structureData(_qData);\n    if (_qData && _isMounted.current) {\n     // const _selections = await getSelections(_qData);\n     // const _selId = await getSelectionsId(_qData);\n      dispatch({\n        type: \"update\",\n        payload: {\n          listData: _listData,\n          selections: _selections,\n          selectionsId: _selId\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          listData: _listData,\n        },\n      });\n    }\n  }, [getData, structureData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = { ...qPage.current, ...newPage };\n\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = async () => {\n    // Make sure we close all other open selections. We usually get that when we have morethan one dropDown in the same page and while one is open, we click on the second one\n    await state.qDoc.abortModal(true);\n    await qObject.current.beginSelections([\"/qListObjectDef\"]);\n  };\n\n  const endSelections = async (qAccept) => {\n    // await state.qEngine.abortModal(true)\n    await qObject.current.endSelections(qAccept);\n  };\n\n  const select = useCallback(\n    (qElemNumber, toggle = true, ignoreLock = false) =>\n      qObject.current.selectListObjectValues(\n        \"/qListObjectDef\",\n        qElemNumber,\n        toggle,\n        ignoreLock\n      ),\n    []\n  );\n\n  const searchListObjectFor = useCallback(\n    (string) => qObject.current.searchListObjectFor(\"/qListObjectDef\", string),\n    []\n  );\n\n  const acceptListObjectSearch = useCallback(\n    (ignoreLock = false) =>\n      qObject.current.acceptListObjectSearch(\n        \"/qListObjectDef\",\n        true,\n        ignoreLock\n      ),\n    []\n  );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  const clearSelections = useCallback(\n    () => qObject.current.clearSelections(\"/qListObjectDef\"),\n    []\n  );\n\n  useEffect(() => {\n    if (!engine || qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      // ToDo: make sure init is not called on every render - convert qDoc to qEngine\n      if (_isMounted.current) dispatch({ type: \"init\", payload: { qDoc } });\n      qObject.current.on(\"changed\", () => {\n        update();\n      });\n      update();\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    listData,\n    changePage,\n    select,\n    beginSelections,\n    endSelections,\n    searchListObjectFor,\n    acceptListObjectSearch,\n    applyPatches,\n    selections,\n    selectionsId,\n    clearSelections,\n    motorListProps: {\n      clearSelections,\n      selections,\n      select,\n    }\n  };\n};\n\nexport default useList;\n","export function hyperCubeChartTransform(\n  qData,\n  qHyperCube,\n  // useNumonFirstDim = false,\n  cols\n) {\n  const qNoOfDiemnsions =\n    qHyperCube !== undefined ? qHyperCube.qDimensionInfo.length : 1;\n  const qNoOfMeasures =\n    qHyperCube !== undefined ? qHyperCube.qMeasureInfo.length : 1;\n\n  const measureNames = getMeasureNames(qHyperCube);\n  const dimensionNames = getDimensionNames(qHyperCube);\n\n  const transformedData = qData.qMatrix.map((d, i) => {\n    let data = {};\n    let attrExpItems = {};\n    d.forEach((item, index) => {\n      if (index < qNoOfDiemnsions) {\n        const attrExp = d[index].qAttrExps;\n        if (typeof attrExp !== \"undefined\") {\n          const items = attrExp.qValues;\n\n          items.forEach((qAttrExprInfoItem, itemIndex) => {\n            if (qAttrExprInfoItem.qText !== undefined)\n              attrExpItems[\n                qHyperCube.qDimensionInfo[index].qAttrExprInfo[itemIndex].id\n              ] =\n                qAttrExprInfoItem.qNum !== \"NaN\"\n                  ? qAttrExprInfoItem.qNum\n                  : qAttrExprInfoItem.qText;\n          });\n        }\n      } else {\n        const attrExp = d[index].qAttrExps;\n        if (typeof attrExp !== \"undefined\") {\n          const items = attrExp.qValues;\n\n          items.forEach((qAttrExprInfoItem, itemIndex) => {\n            if (qAttrExprInfoItem.qText !== undefined)\n              attrExpItems[\n                qHyperCube.qMeasureInfo[index - -qNoOfDiemnsions].qAttrExprInfo[\n                  itemIndex\n                ].id\n              ] =\n                qAttrExprInfoItem.qNum !== \"NaN\"\n                  ? qAttrExprInfoItem.qNum\n                  : qAttrExprInfoItem.qText;\n          });\n        }\n      }\n\n      const pair =\n        index < qNoOfDiemnsions\n          ? {\n              [dimensionNames[index]]: d[index].qText,\n              [`elemNumber${index !== 0 ? index : \"\"}`]: d[index].qElemNumber,\n              key: i,\n\n              label: d[index].qText,\n            }\n          : {\n              [measureNames[index - qNoOfDiemnsions]]:\n                cols[index].qNumFormat ||\n                cols[index].qNumType ||\n                cols[index].qNumFmt\n                  ? d[index].qText\n                  : d[index].qNum !== \"NaN\"\n                  ? d[index].qNum\n                  : 0,\n              key: i,\n            };\n\n      data = { ...data, ...pair, ...attrExpItems };\n    });\n    return data;\n  });\n\n  return transformedData;\n}\n\nexport function hyperCubeTransform(\n  qData,\n  qHyperCube,\n  // useNumonFirstDim = false,\n  cols\n) {\n  const transformedData = qData.qMatrix.map((d, i) => {\n    let data = {};\n    d.forEach((item, index) => {\n      const name = cols[index].dataKey;\n      const pair = {\n        [name]: {\n          text: d[index].qText,\n          number: d[index].qNum,\n          elemNumber: d[index].qElemNumber,\n          state: d[index].qState,\n          attrExp: d[index].qAttrExps,\n          columnId: index,\n        },\n        key: i,\n      };\n      data = { ...data, ...pair };\n    });\n    return data;\n  });\n\n  return transformedData;\n}\n\nexport function multiDimHyperCubeTransform(qData, qHyperCube) {\n  const qNoOfDimensions =\n    qHyperCube !== undefined ? qHyperCube.qDimensionInfo.length : 1;\n\n  const measureNames = getMeasureNames(qHyperCube);\n  const dimensionNames = getDimensionNames(qHyperCube);\n\n  let parentText = qData.qMatrix[0][0].qText;\n  let transformedData = [];\n  let series = {};\n\n  qData.qMatrix.map((d, i) => {\n    let key = null;\n    let value = null;\n    let elemNumber = null;\n\n    d.forEach((item, index) => {\n      if (index < qNoOfDimensions && index !== 0) {\n        key = d[index].qText;\n        elemNumber = d[index].qElemNumber;\n      } else if (index !== 0) {\n        value = d[index].qNum;\n      }\n    });\n\n    if (parentText !== d[0].qText) {\n      if (Object.keys(series).length === 0) {\n        series[dimensionNames[0]] = d[0].qText;\n        series[\"qElemNumber\"] = d[0].qElemNumber;\n        series[key] = value;\n        series[`${key}-qElemNumber`] = elemNumber;\n      }\n      transformedData.push(series);\n      series = {};\n    } else {\n      series[dimensionNames[0]] = d[0].qText;\n      series[\"qElemNumber\"] = d[0].qElemNumber;\n      series[key] = value;\n      series[`${key}-qElemNumber`] = elemNumber;\n      series[\"label\"] = d[0].qText;\n    }\n    parentText = d[0].qText;\n  });\n  transformedData.push(series);\n  return transformedData;\n}\n\nexport const getMeasureNames = (qHyperCube) =>\n  qHyperCube.qMeasureInfo.map((d, i) => {\n    const qMeasurePosition = i !== 0 ? i : \"\";\n\n    return d.qFallbackTitle;\n    /*.startsWith(\"=\")\n      ? `value${qMeasurePosition}`\n      : d.qFallbackTitle;*/\n  });\n\nexport const getDimensionNames = (qHyperCube) =>\n  qHyperCube.qDimensionInfo.map((d, i) => d.qFallbackTitle);\n\nexport const getDimensionCategories = (data) => [\n  ...new Set(\n    Array.prototype.concat(\n      ...data.map((d) => d[Object.keys(d)[2]].map((d) => d[Object.keys(d)[0]]))\n    )\n  ),\n];\n\nexport const validData = (qLayout) => {\n  let isValid = true;\n  let dataError = \"\";\n  const { qDimensionInfo, qMeasureInfo } =\n    qLayout.qHyperCube || qLayout.qListObject;\n\n  const DimCheck = () => {\n    //check if an array, to work with HyperCube & ListObject\n    let _qDimensionInfo = Array.isArray(qDimensionInfo)\n      ? qDimensionInfo\n      : [qDimensionInfo];\n    _qDimensionInfo.forEach((qData) => {\n        if (qData.qError) {\n          console.error('There is an issue with your dimension. Please fix this in order to receive the correct data. ', qData.qError)\n        }\n    });\n  };\n\n  const MeasCheck = () => {\n    qMeasureInfo.forEach((qData) => {\n      if (\n        (isNaN(qData.qMax) && isNaN(qData.qMin)) \n      ) {\n        console.error('There is an issue with your measure. It is not returning any data.')\n      }\n    });\n  };\n  \n  if (qDimensionInfo && qMeasureInfo) {\n    DimCheck();\n    MeasCheck();\n  } else if (qDimensionInfo && !qMeasureInfo) {\n    DimCheck();\n  } else if (!qDimensionInfo && qMeasureInfo) {\n    MeasCheck();\n  } else { }\n\n};\n\nexport const numericSortDirection = (sortDirection, defaultSetting = 0) => {\n  let direction;\n  switch (sortDirection.toUpperCase()) {\n    case \"ASC\" || \"ASCENDING\":\n      direction = 1;\n      break;\n    case \"DESC\" || \"DESCENDING\":\n      direction = -1;\n      break;\n    default:\n      direction = defaultSetting;\n  }\n\n  return direction;\n};\n\nexport const orderCols = (cols) => {\n  let dim = [];\n  let meas = [];\n\n  const getDims = (cols) => {\n    cols\n      .filter((col, i) => {\n        const isDimension =\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"dimension\") ||\n          Array.isArray(col.qField) ||\n          (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n        return isDimension;\n      })\n      .map((col) => {\n        dim.push(col);\n        return col;\n      });\n  };\n\n  const getMeas = (cols) => {\n    cols\n      .filter((col, i) => {\n        const isMeasure =\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"measure\") ||\n          (typeof col === \"object\" &&\n            !Array.isArray(col.qField) &&\n            col.qField.startsWith(\"=\"));\n\n        return isMeasure;\n      })\n      .map((col) => {\n        meas.push(col);\n        return col;\n      });\n  };\n\n  //get dimensions\n  getDims(cols);\n  // get measures\n  getMeas(cols);\n  //concatenate dimensions and measures\n  const orderedCols = dim.concat(meas);\n\n  return orderedCols;\n};\n\nexport const getHeader = (qLayout, cols, data) => {\n  if (qLayout) {\n    return [\n      ...qLayout.qHyperCube.qDimensionInfo.map((col, index) => ({\n        title: col.qFallbackTitle,\n        dataIndex: cols[index].dataKey,\n        dataKey: cols[index].dataKey,\n        render: cols[index].render,\n        defaultSortDesc: col.qSortIndicator === \"D\",\n        qInterColumnIndex: index,\n        qPath: `/qHyperCubeDef/qDimensions/${index}`,\n        qSortIndicator: col.qSortIndicator,\n        qReverseSort: col.qReverseSort,\n        qGrandTotals: { qText: null, qNum: null },\n        qColumnType: \"dim\",\n      })),\n      ...qLayout.qHyperCube.qMeasureInfo.map((col, index) => ({\n        title: col.qFallbackTitle,\n        dataIndex:\n          cols[qLayout.qHyperCube.qDimensionInfo.length + index].dataKey,\n        dataKey: cols[qLayout.qHyperCube.qDimensionInfo.length + index].dataKey,\n        render: cols[qLayout.qHyperCube.qDimensionInfo.length + index].render,\n        defaultSortDesc: col.qSortIndicator === \"D\",\n        qInterColumnIndex: index + qLayout.qHyperCube.qDimensionInfo.length,\n        qPath: `/qHyperCubeDef/qMeasures/${index}`,\n        qSortIndicator: col.qSortIndicator,\n        qReverseSort: col.qReverseSort,\n        qGrandTotals: qLayout.qHyperCube.qGrandTotalRow[index],\n        qColumnType: \"meas\",\n      })),\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport default hyperCubeTransform;\n","import {\n  useCallback,\n  useRef,\n  useReducer,\n  useEffect,\n  useContext,\n  useState,\n} from \"react\";\nimport { deepMerge } from \"../utils/object\";\n\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport {\n  hyperCubeChartTransform,\n  multiDimHyperCubeTransform,\n  validData,\n} from \"../utils/hyperCubeUtilities\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: {\n      title,\n      subTitle,\n      metrics,\n      qData,\n      mData,\n      nameKey,\n      valueKey,\n      qListData,\n      dataList,\n      dataKeys,\n      qRData,\n      qLayout,\n      selections,\n    },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        title,\n        subTitle,\n        metrics,\n        qData,\n        mData,\n        nameKey,\n        valueKey,\n        qListData,\n        dataList,\n        dataKeys,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: [],\n  qLists: null,\n  qHyperCubeDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 1000,\n  },\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  qInterColumnSortOrder: [],\n  qSuppressZero: false,\n  qSortByExpression: 0,\n  qSuppressMissing: true,\n  qExpression: null,\n  getQRData: false,\n  qSortByNumeric: -1,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qTitle: null,\n  qSubTitle: null,\n  qMetrics: null,\n  qOtherTotalSpec: \"\",\n};\n\nconst useData = (props) => {\n  const {\n    cols,\n    qLists,\n    qTitle,\n    qSubTitle,\n    qMetrics,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSortByNumeric,\n    qSortByExpression,\n    qSuppressMissing,\n    qExpression,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    title,\n    subTitle,\n    metrics,\n    qData,\n    mData,\n    nameKey,\n    valueKey,\n    qListData,\n    dataList,\n    dataKeys,\n    qRData,\n    qLayout,\n    selections,\n  } = state;\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const qObject = useRef(null);\n\n  const qPage = useRef(qPageProp);\n\n  // error trapping\n  const [error, setError] = useState();\n  // page size\n  const [pageSize, setPageSize] = useState(qPage.current.qHeight);\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = {\n      qInfo: { qType: \"visualization\" },\n    };\n\n    if (qMetrics) {\n      qMetrics.map((metric) => {\n        // This will evaluate to a number if nothing supplied.\n        const metricType = metric.qType ? metric.qType : \"qValueExpression\";\n        qProp[metric.qName] = {\n          [metricType]: {\n            qExpr: metric.qExpr,\n          },\n        };\n      });\n    }\n\n    if (qLists) {\n      qProp.qListObjects = [];\n      qLists.map((list) => {\n        const listDef = {\n          qListObjectDef: {\n            qStateName: \"$\",\n            qLibraryId: \"\",\n            qDef: {\n              qFieldDefs: [Object.values(list)[0]],\n              qFieldLabels: [Object.keys(list)[0]],\n              qSortCriterias: [\n                {\n                  qSortByLoadOrder: 1,\n                },\n              ],\n            },\n            qInitialDataFetch: [\n              {\n                qTop: 0,\n                qHeight: 1,\n                qLeft: 0,\n                qWidth: 1,\n              },\n            ],\n          },\n        };\n        qProp.qListObjects.push(listDef);\n      });\n    }\n\n    if (qHyperCubeDef) {\n      const _qHyperCubeDef = qHyperCubeDef;\n      if (cols && cols[1]) {\n        _qHyperCubeDef.qMeasures[0].qDef = {\n          qDef: cols[1],\n        };\n      }\n      if (cols && cols[0])\n        _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n      qProp.qInfo.qType = \"HyperCube\";\n      qProp.qHyperCubeDef = _qHyperCubeDef;\n\n      return qProp;\n    }\n    const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n    const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n    let sortIndex = 0;\n\n    const qDimensions =\n      cols &&\n      cols\n        .filter((col, i) => {\n          const isDimension =\n            (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n            (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n            (typeof col === \"object\" &&\n              col.qLibraryId &&\n              col.qType &&\n              col.qType === \"dimension\") ||\n            (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n          if (isDimension && !qInterColumnSortOrderSet) {\n            myqInterColumnSortOrder[i] = sortIndex;\n            sortIndex += 1;\n          }\n\n          return isDimension;\n        })\n        .map((col) => {\n          if (typeof col === \"string\") {\n            return {\n              qDef: {\n                qFieldDefs: [col],\n                qSortCriterias: [\n                  {\n                    qSortByAscii,\n                    qSortByLoadOrder,\n                  },\n                ],\n              },\n              qNullSuppression: true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n          if (typeof col === \"object\" && !col.qLibraryId) {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n\n            return {\n              qDef: {\n                qFieldDefs: [col.qField],\n                qFieldLabels: [col.qLabel],\n                qSortCriterias: col.qSortCriterias\n                  ? [col.qSortCriterias]\n                  : [\n                      {\n                        qSortByLoadOrder,\n                        qSortByAscii,\n                      },\n                    ],\n              },\n              qOtherTotalSpec: totalSpec,\n              qOtherLabel:\n                qOtherTotalSpec !== undefined\n                  ? qOtherTotalSpec.qOtherLabel\n                  : \"Others\",\n              qAttributeExpressions,\n              qNullSuppression: col.qNullSuppression\n                ? col.qNullSuppression\n                : true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n          if (typeof col === \"object\" && col.qLibraryId) {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n            return {\n              qLibraryId: col.qLibraryId,\n              qType: col.qType,\n              qOtherTotalSpec: totalSpec,\n              qOtherLabel:\n                qOtherTotalSpec !== undefined\n                  ? qOtherTotalSpec.qOtherLabel\n                  : \"Others\",\n              qAttributeExpressions,\n              qNullSuppression: col.qNullSuppression\n                ? col.qNullSuppression\n                : true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n\n          return col;\n        });\n\n    if (qDimensions && qDimensions.length > 1) {\n      const listDef = {\n        qListObjectDef: {\n          qStateName: \"$\",\n          qLibraryId: \"\",\n          qDef: {\n            qFieldDefs: qDimensions[1].qDef.qFieldDefs,\n            qFieldLabels: [\"multiDimDataKeys\"],\n            qSortCriterias: [\n              {\n                qSortByLoadOrder: 1,\n              },\n            ],\n          },\n          qInitialDataFetch: [\n            {\n              qTop: 0,\n              qHeight: 1,\n              qLeft: 0,\n              qWidth: 1,\n            },\n          ],\n        },\n      };\n      if (typeof qProp.qListObjects === \"undefined\") qProp.qListObjects = [];\n\n      qProp.qListObjects.push(listDef);\n    }\n\n    const qMeasures =\n      cols &&\n      cols\n        .filter((col, i) => {\n          const isMeasure =\n            (typeof col === \"string\" && col.startsWith(\"=\")) ||\n            (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n            (typeof col === \"object\" &&\n              col.qLibraryId &&\n              col.qType &&\n              col.qType === \"measure\") ||\n            (typeof col === \"object\" && col.qField.startsWith(\"=\"));\n          if (isMeasure && !qInterColumnSortOrderSet) {\n            myqInterColumnSortOrder[i] = sortIndex;\n            sortIndex += 1;\n          }\n\n          return isMeasure;\n        })\n        .map((col) => {\n          if (typeof col === \"string\") {\n            return {\n              qDef: {\n                qDef: col,\n                qNumFormat: col.qNumFormat,\n              },\n              qSortBy: {\n                qSortByNumeric,\n                qSortByExpression,\n                qExpression,\n                qSuppressMissing,\n              },\n            };\n          }\n          if (typeof col === \"object\") {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n            return {\n              qDef: {\n                qDef: col.qField,\n                qLabel: col.qLabel,\n                qNumFormat: {\n                  qType: col.qNumType || \"U\",\n                  qUseThou: 1,\n                  qFmt: col.qNumFmt,\n                  qDec: \".\",\n                  qThou: \",\",\n                },\n              },\n              qSortBy: {\n                qSortByNumeric,\n                qSortByExpression,\n                qExpression,\n                qSuppressMissing,\n              },\n              qAttributeExpressions,\n            };\n          }\n\n          return col;\n        });\n\n    qProp.qHyperCubeDef = {\n      qDimensions,\n      qMeasures,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSuppressMissing,\n      qColumnOrder,\n      qCalcCondition,\n      qTitle,\n    };\n\n    return qProp;\n  }, [\n    cols,\n    qTitle,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    try {\n      const qDataPages = await qObject.current.getHyperCubeData(\n        \"/qHyperCubeDef\",\n        [qPage.current]\n      );\n      return qDataPages[0];\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getMultiPageData = useCallback(async (numberOfPages) => {\n    const qObjects = qObject.current;\n    let qPages = qPage.current;\n    let qDataPages = null;\n    let qMatrix = [];\n\n    try {\n      for (var i = 0; i < numberOfPages; i++) {\n        qPages = {\n          ...qPages,\n          ...{ qTop: i * 1000 },\n        };\n        qDataPages = await qObjects.getHyperCubeData(\"/qHyperCubeDef\", [\n          qPages,\n        ]);\n\n        qMatrix.push(...qDataPages[0].qMatrix);\n      }\n\n      const qTails = qDataPages[0].qTails;\n      const qArea = qDataPages[0].qArea;\n\n      return { qTails, qMatrix, qArea };\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getListsFromData = useCallback(async (i) => {\n    return await qObject.current.getListObjectData(\n      `/qListObjects/${i}/qListObjectDef`,\n      [qPage.current]\n    );\n  });\n\n  const getListData = useCallback(async (layout) => {\n    if (!layout.qListObjects) return;\n    return await Promise.all(\n      layout.qListObjects.map(async (list, i) => getListsFromData(i))\n    );\n  }, []);\n\n  const getNameKey = useCallback(async (layout) => {\n    if (layout.qHyperCube.qDimensionInfo.length === 0) return null;\n    return layout.qHyperCube.qDimensionInfo[0].qFallbackTitle;\n  }, []);\n\n  const getValueKey = useCallback(async (layout) => {\n    if (layout.qHyperCube.qMeasureInfo.length === 0) return null;\n    return layout.qHyperCube.qMeasureInfo[0].qFallbackTitle;\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const structureData = useCallback(async (layout, data) => {\n    if (\n      (layout.qHyperCube.qDimensionInfo.length === 0 &&\n        layout.qHyperCube.qMeasureInfo.length === 0) ||\n      !data\n    )\n      return;\n\n    const mData =\n      layout.qHyperCube.qDimensionInfo.length === 1\n        ? hyperCubeChartTransform(data, layout.qHyperCube, cols)\n        : multiDimHyperCubeTransform(data, layout.qHyperCube);\n    return mData;\n  }, []);\n\n  const getDataKeys = useCallback(async (listData, measureInfo) => {\n    if (!listData) {\n      return measureInfo.map((measure) => measure.qFallbackTitle);\n    }\n\n    // Get values for the second dimension.\n    const keys = listData.filter(\n      (item) => Object.keys(item)[0] === \"multiDimDataKeys\"\n    );\n\n    return keys[0].multiDimDataKeys;\n  }, []);\n\n  const getDataKeyList = useCallback(async (listData, layout) => {\n    const listDetail = [];\n\n    if (!layout.qListObjects) return null;\n\n    layout.qListObjects.map((item, index) => {\n      const obj = {};\n      const key = item.qListObject.qDimensionInfo.qFallbackTitle;\n      const items = listData[index][0]\n        ? listData[index][0].qMatrix.map((item) => item[0].qText)\n        : null;\n\n      obj[key] = items;\n      listDetail.push(obj);\n    });\n\n    return listDetail;\n  }, []);\n\n  const getTitle = useCallback(async (layout) => {\n    return layout.qHyperCube.qTitle;\n  }, []);\n\n  const getMetrics = useCallback(async (layout, metrics) => {\n    if (!metrics) return;\n    let metricObj = {};\n\n    metrics.map((metric) => {\n      metricObj[metric.qName] = layout[metric.qName];\n    });\n    return metricObj;\n  }, []);\n\n  const update = useCallback(async () => {\n    const _qLayout = await getLayout();\n    const _qValid = await validData(_qLayout, engine);\n\n    const _qData = await (Math.ceil(_qLayout.qHyperCube.qSize.qcy / pageSize) <=\n    1\n      ? getData()\n      : getMultiPageData(Math.ceil(_qLayout.qHyperCube.qSize.qcy / pageSize)));\n\n    const _qListData = await getListData(_qLayout);\n    const _mData = await structureData(_qLayout, _qData);\n\n    const _nameKey = await getNameKey(_qLayout);\n    const _valueKey = await getValueKey(_qLayout);\n    const _dataList = await getDataKeyList(_qListData, _qLayout);\n\n    const _dataKeys = await getDataKeys(\n      _dataList,\n      _qLayout.qHyperCube.qMeasureInfo\n    );\n\n    const _qTitle = await getTitle(_qLayout);\n    const _qSubTitle = qSubTitle;\n\n    const _qMetrics = await getMetrics(_qLayout, qMetrics);\n    if (_qData && _isMounted.current) {\n      const _selections = _qData.qMatrix.filter((row) => row[0].qState === \"S\");\n\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          subTitle: _qSubTitle,\n          qData: _qData,\n          mData: _mData,\n          nameKey: _nameKey,\n          valueKey: _valueKey,\n          qListData: _qListData,\n          dataList: _dataList,\n          dataKeys: _dataKeys,\n          metrics: _qMetrics,\n          qLayout: _qLayout,\n          selections: _selections,\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          subTitle: _qSubTitle,\n          metrics: _qMetrics,\n          qData: _qData,\n          mData: _mData,\n          nameKey: _nameKey,\n          valueKey: _valueKey,\n          qListData: _qListData,\n          dataList: _dataList,\n          dataKeys: _dataKeys,\n          qLayout: _qLayout,\n        },\n      });\n    }\n    if (getQRData) {\n      const _qRData = await getReducedData();\n      if (_isMounted.current) {\n        dispatch({\n          type: \"updateReducedData\",\n          payload: { qRData: _qRData },\n        });\n      }\n    }\n  }, [getData, getLayout, getQRData, getReducedData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (qElemNumber, _selections, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        qElemNumber,\n        _selections,\n        toggle\n      ),\n    []\n  );\n  // const select = useCallback(\n  //   (qElemNumber, _selections, toggle = true) =>\n  //     qObject.current.selectHyperCubeValues(\n  //       '/qHyperCubeDef',\n  //       qElemNumber,\n  //       _selections,\n  //       toggle\n  //     ),\n  //   []\n  // );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  // takes column data and sorted the table, applies reverse sort\n  const handlerChange = useCallback(\n    async (isMeasure, value) => {\n      // If no sort is set, we need to set a default sort order\n      // if (column.qSortIndicator === \"N\") {\n      //   if (column.qPath.includes(\"qDimensions\")) {\n      //     await applyPatches([\n      //       {\n      //         qOp: \"add\",\n      //         qPath: `${column.qPath}/qDef/qSortCriterias`,\n      //         qValue: JSON.stringify([{ qSortByLoadOrder: 1 }]),\n      //       },\n      //     ]);\n      //   }\n      //   if (column.qPath.includes(\"qMeasures\")) {\n      //     await applyPatches([\n      //       {\n      //         qOp: \"add\",\n      //         qPath: `${column.qPath}/qSortBy`,\n      //         qValue: JSON.stringify({ qSortByLoadOrder: 1 }),\n      //       },\n      //     ]);\n      //   }\n      // }\n      await applyPatches([\n        {\n          qOp: \"replace\",\n          qPath: `/qHyperCubeDef/${\n            isMeasure ? \"qMeasures\" : \"qDimensions\"\n          }/0/qDef/${isMeasure ? \"qDef\" : \"qFieldDefs\"}`,\n          qValue: JSON.stringify(isMeasure ? value : [value]),\n        },\n      ]);\n    },\n    [applyPatches, qLayout]\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n  // const dataSet = { data: mData, dataKeys, dataList, nameKey };\n  const dataSet = {};\n\n  if (mData) dataSet.data = mData;\n  if (mData) dataSet.select = select;\n  if (dataKeys && dataKeys.length !== 0) dataSet.dataKeys = dataKeys;\n  if (dataList) dataSet.dataList = dataList;\n  if (nameKey) dataSet.nameKey = nameKey;\n  if (valueKey) dataSet.valueKey = valueKey;\n\n  return {\n    beginSelections,\n    endSelections,\n    qLayout,\n    qData,\n    mData,\n    qListData,\n    dataList,\n    handlerChange,\n    dataKeys,\n    nameKey,\n    // dataSet: { data: mData, dataKeys, dataList, nameKey },\n    dataSet,\n    title,\n    subTitle,\n    metrics,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n  };\n};\n\nexport default useData;\n","\nfunction createDef(\n  cols,\n  qTitle,\n  qHyperCubeDef,\n  qSortByAscii,\n  qSortByLoadOrder,\n  qInterColumnSortOrder,\n  qSuppressZero,\n  qSortByNumeric,\n  qSortByExpression,\n  qSuppressMissing,\n  qExpression,\n  qColumnOrder,\n  qCalcCondition,\n  qOtherTotalSpec,\n  totalSpec\n) {\n  const qProp = {\n    qInfo: { qType: \"visualization\" },\n  };\n\n  if (qHyperCubeDef) {\n    const _qHyperCubeDef = qHyperCubeDef;\n    if (cols && cols[1]) {\n      _qHyperCubeDef.qMeasures[0].qDef = {\n        qDef: cols[1],\n      };\n    }\n    if (cols && cols[0])\n      _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n    qProp.qInfo.qType = \"HyperCube\";\n    qProp.qHyperCubeDef = _qHyperCubeDef;\n\n    return qProp;\n  }\n  const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n  const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n  let sortIndex = 0;\n\n  const qDimensions = cols\n    .filter((col, i) => {\n      const isDimension =\n        (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n        (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n        (typeof col === \"object\" &&\n          col.qLibraryId &&\n          col.qType &&\n          col.qType === \"dimension\") ||\n        Array.isArray(col.qField) ||\n        (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n      if (isDimension && !qInterColumnSortOrderSet) {\n        myqInterColumnSortOrder[i] = sortIndex;\n        sortIndex += 1;\n      }\n\n      return isDimension;\n    })\n    .map((col) => {\n      if (typeof col === \"string\") {\n        return {\n          qDef: {\n            qFieldDefs: [col],\n            qSortCriterias: [\n              {\n                qSortByAscii,\n                qSortByLoadOrder,\n              },\n            ],\n          },\n          qNullSuppression: true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      if (typeof col === \"object\" && !col.qLibraryId) {\n        return {\n          qDef: {\n            qGrouping: col.qGrouping || \"N\",\n            qFieldDefs: !Array.isArray(col.qField)\n              ? [col.qField]\n              : [...col.qField],\n            qFieldLabels: [col.qLabel],\n            qSortCriterias: col.qSortCriterias\n              ? [col.qSortCriterias]\n              : [\n                  {\n                    qSortByLoadOrder,\n                    qSortByAscii,\n                  },\n                ],\n          },\n          qOtherTotalSpec: totalSpec,\n          qOtherLabel:\n            qOtherTotalSpec !== undefined\n              ? qOtherTotalSpec.qOtherLabel\n              : \"Others\",\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qNullSuppression: col.qNullSuppression ? col.qNullSuppression : true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      if (typeof col === \"object\" && col.qLibraryId) {\n        return {\n          qLibraryId: col.qLibraryId,\n          qType: col.qType,\n          qOtherTotalSpec: totalSpec,\n          qOtherLabel:\n            qOtherTotalSpec !== undefined\n              ? qOtherTotalSpec.qOtherLabel\n              : \"Others\",\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qNullSuppression: col.qNullSuppression ? col.qNullSuppression : true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      return col;\n    });\n\n  const qMeasures = cols\n    .filter((col, i) => {\n      const isMeasure =\n        (typeof col === \"string\" && col.startsWith(\"=\")) ||\n        (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n        (typeof col === \"object\" &&\n          col.qLibraryId &&\n          col.qType &&\n          col.qType === \"measure\") ||\n        (typeof col === \"object\" &&\n          !Array.isArray(col.qField) &&\n          col.qField.startsWith(\"=\"));\n      if (isMeasure && !qInterColumnSortOrderSet) {\n        myqInterColumnSortOrder[i] = sortIndex;\n        sortIndex += 1;\n      }\n\n      return isMeasure;\n    })\n    .map((col) => {\n      if (typeof col === \"string\") {\n        return {\n          qDef: {\n            qDef: col,\n            qNumFormat: col.qNumFormat,\n          },\n          qSortBy: {\n            qSortByNumeric,\n            qSortByExpression,\n            qExpression,\n            qSuppressMissing,\n          },\n        };\n      }\n      if (typeof col === \"object\") {\n        return {\n          qDef: {\n            qDef: col.qField,\n            qLabel: col.qLabel,\n            qNumFormat: {\n              qType: col.qNumType || \"U\",\n              qUseThou: 1,\n              qFmt: col.qNumFmt,\n              qDec: \".\",\n              qThou: \",\",\n            },\n          },\n          qSortBy: {\n            qSortByNumeric,\n            qSortByExpression,\n            qExpression,\n            qSuppressMissing,\n          },\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qChartType: col.qChartType,\n          qShowPoints: col.qShowPoints,\n          qCurve: col.qCurve,\n          qFillStyle: col.qFillStyle,\n          qLegendShape: col.qLegendShape,\n        };\n      }\n\n      return col;\n    });\n\n  qProp.qHyperCubeDef = {\n    qDimensions,\n    qMeasures,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSuppressMissing,\n    qColumnOrder,\n    qCalcCondition,\n    qTitle,\n  };\n\n  return qProp;\n}\n\nexport default createDef;\n","import {\n  useState,\n  useCallback,\n  useRef,\n  useReducer,\n  useEffect,\n  useContext,\n} from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport createDef from \"../utils/createHCDef\";\nimport {\n  getHeader,\n  hyperCubeTransform,\n  hyperCubeChartTransform,\n  orderCols,\n  validData,\n} from \"../utils/hyperCubeUtilities\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  headerGroup: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: {\n      title,\n      qData,\n      dataSet,\n      qRData,\n      headerGroup,\n      qLayout,\n      selections,\n    },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        title,\n        qData,\n        dataSet,\n        headerGroup,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: null,\n  qHyperCubeDef: null,\n  qTitle: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 300,\n  },\n  sortCriteria: {\n    qInterColumnSortOrder: [],\n    qSortByAscii: 1,\n    qSortByLoadOrder: 1,\n    qExpression: null,\n    qSortByNumeric: -1,\n    qSortByExpression: 0,\n  },\n  qSuppressZero: false,\n  qSuppressMissing: true,\n  getQRData: false,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qOtherTotalSpec: \"\",\n};\n\nconst useTable = (props) => {\n  const {\n    cols,\n    qTitle,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    sortCriteria,\n    qSuppressZero,\n    qSuppressMissing,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qExpression,\n    qSortByNumeric,\n    qSortByExpression,\n  } = sortCriteria;\n\n  const {\n    title,\n    qData,\n    dataSet,\n    qRData,\n    headerGroup,\n    qLayout,\n    selections,\n  } = state;\n\n  // load engine from props\n  //const myEngine = props.engine;\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const qObject = useRef(null);\n  const qPage = useRef(qPageProp);\n\n  // error trapping\n  const [error, setError] = useState();\n\n  //======================\n  // PAGING LOGIC\n\n  // page size\n  const [pageSize, setPageSize] = useState(qPage.current.qHeight);\n\n  // current page\n  const [page, _setPage] = useState(0);\n\n  const setPage = useCallback(\n    (_page) => {\n      _setPage(_page);\n      changePage({ qTop: _page * pageSize });\n    },\n    [changePage, pageSize]\n  );\n  window.setPage = setPage;\n\n  // calculated number of pages\n  const [pages, _setPages] = useState(0);\n  const setPages = useCallback(\n    (_pages) => {\n      if (page >= _pages) {\n        setPage(0);\n      }\n      _setPages(_pages);\n    },\n    [page, setPage]\n  );\n\n  //handle page change\n  const handlePageChange = useCallback(\n    (pageIndex) => {\n      setPage(pageIndex);\n    },\n    [setPage]\n  );\n\n  // page increment\n  const incrementPage = () => {\n    const nextPage = page + 1;\n    handlePageChange(nextPage);\n  };\n\n  // page decrement\n  const decrementPage = () => {\n    if (page == 0) {\n      //console.log(pages);\n      handlePageChange(pages - 1);\n    } else {\n      const prevPage = page - 1;\n      handlePageChange(prevPage);\n    }\n  };\n\n  // Find the total size of the Hypercube\n  useEffect(() => {\n    if (!qLayout || !qData) return;\n    setPages(Math.ceil(qLayout.qHyperCube.qSize.qcy / pageSize));\n  }, [qLayout, qData, pageSize, setPage, setPages]);\n\n  //======================\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = createDef(\n      cols,\n      qTitle,\n      qHyperCubeDef,\n      qSortByAscii,\n      qSortByLoadOrder,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSortByNumeric,\n      qSortByExpression,\n      qSuppressMissing,\n      qExpression,\n      qColumnOrder,\n      qCalcCondition,\n      qOtherTotalSpec,\n      totalSpec\n    );\n\n    return qProp;\n  }, [\n    cols,\n    qTitle,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qOtherTotalSpec,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    try {\n      const qDataPages = await qObject.current.getHyperCubeData(\n        \"/qHyperCubeDef\",\n        [qPage.current]\n      );\n      return qDataPages[0];\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getTitle = useCallback(async (layout) => {\n    return layout.qHyperCube.qTitle;\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const structureData = useCallback(async (layout, data, cols) => {\n    // let useNumonFirstDim;\n    const dataSet = hyperCubeTransform(\n      data,\n      layout.qHyperCube,\n      // useNumonFirstDim,\n      cols\n    );\n\n    return dataSet;\n  }, []);\n\n  const update = useCallback(async () => {\n    const _qLayout = await getLayout();\n    const _qTitle = await getTitle(_qLayout);\n    const _qValid = await validData(_qLayout, engine);\n    const _qData = await getData();\n\n    // Order colunns for dataKey\n    const _orderedCols = await orderCols(cols);\n    const _dataSet =\n      _qData && (await structureData(_qLayout, _qData, _orderedCols));\n    const _headerGroup = _qData && (await getHeader(_qLayout, _orderedCols));\n    if (_qData && _isMounted.current) {\n      const _selections = _qData.qMatrix.filter((row) => row[0].qState === \"S\");\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          qData: _qData,\n          dataSet: _dataSet,\n          headerGroup: _headerGroup,\n          qLayout: _qLayout,\n          selections: _selections,\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          qData: _qData,\n          dataSet: _dataSet,\n          headerGroup: _headerGroup,\n          qLayout: _qLayout,\n        },\n      });\n    }\n    if (getQRData) {\n      const _qRData = await getReducedData();\n      if (_isMounted.current) {\n        dispatch({\n          type: \"updateReducedData\",\n          payload: { qRData: _qRData },\n        });\n      }\n    }\n  }, [getData, getLayout, getQRData, getReducedData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (dimNo, qElemNumber, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        dimNo,\n        qElemNumber,\n        toggle\n      ),\n    []\n  );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  // takes column data and sorted the table, applies reverse sort\n  const handleSortChange = useCallback(\n    async (column) => {\n      // If no sort is set, we need to set a default sort order\n      if (column.qSortIndicator === \"N\") {\n        if (column.qPath.includes(\"qDimensions\")) {\n          await applyPatches([\n            {\n              qOp: \"add\",\n              qPath: `${column.qPath}/qDef/qSortCriterias`,\n              qValue: JSON.stringify([{ qSortByLoadOrder: 1 }]),\n            },\n          ]);\n        }\n        if (column.qPath.includes(\"qMeasures\")) {\n          await applyPatches([\n            {\n              qOp: \"add\",\n              qPath: `${column.qPath}/qSortBy`,\n              qValue: JSON.stringify({ qSortByLoadOrder: 1 }),\n            },\n          ]);\n        }\n      }\n      await applyPatches([\n        {\n          qOp: \"replace\",\n          qPath: `${column.qPath}/qDef/qReverseSort`,\n          qValue: JSON.stringify(\n            !column.qReverseSort\n          ) /* JSON.stringify((newSorted[0].desc !== column.defaultSortDesc) !== !!column.qReverseSort) */,\n        },\n        {\n          qOp: \"replace\",\n          qPath: \"/qHyperCubeDef/qInterColumnSortOrder\",\n          qValue: JSON.stringify(\n            [\n              ...qLayout.qHyperCube.qEffectiveInterColumnSortOrder,\n            ].sort((a, b) =>\n              a === column.qInterColumnIndex\n                ? -1\n                : b === column.qInterColumnIndex\n                ? 1\n                : 0\n            )\n          ),\n        },\n      ]);\n      setPage(0);\n    },\n    [applyPatches, qLayout]\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    beginSelections,\n    endSelections,\n    title,\n    qLayout,\n    qData,\n    dataSet,\n    headerGroup,\n    handleSortChange,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n    incrementPage,\n    decrementPage,\n    handlePageChange,\n    page, //current page\n    pageSize, //page size\n    pages, //number of pages\n  };\n};\n\nexport default useTable;\n","import { useState } from \"react\";\nconst enigma = require(\"enigma.js\");\nconst schema = require(\"enigma.js/schemas/12.170.2.json\");\nconst SenseUtilities = require(\"enigma.js/sense-utilities\");\n\nconst MAX_RETRIES = 3;\n\nfunction useGlobal(config) {\n  const responseInterceptors = [\n    {\n      // We only want to handle failed responses from QIX Engine:\n      onRejected: function retryAbortedError(sessionReference, request, error) {\n        console.warn(\n          \"Captured Request: Rejected\",\n          `Error Code: ${error.code} : ${error}`\n        );\n        // We only want to handle aborted QIX errors:\n        if (\n          error.code === schema.enums.LocalizedErrorCode.LOCERR_GENERIC_ABORTED\n        ) {\n          // We keep track of how many consecutive times we have tried to do this call:\n          request.tries = (request.tries || 0) + 1;\n          console.warn(`Captured Request: Retry #${request.tries}`);\n          // We do not want to get stuck in an infinite loop here if something has gone\n          // awry, so we only retry until we have reached MAX_RETRIES:\n          if (request.tries <= MAX_RETRIES) {\n            return request.retry();\n          }\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_GENERIC_INVALID_PARAMETERS\n        ) {\n          return error.code;\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_HC_MODAL_OBJECT_ERROR\n        ) {\n          return error.code;\n        }\n        // If it was not an aborted QIX call, or if we reached MAX_RETRIES, we let the error\n        // trickle down to potential other interceptors, and finally down to resolving/rejecting\n        // the initial promise that the user got when invoking the QIX method:\n        console.warn(error);\n\n        return this.Promise.reject(error);\n      },\n    },\n  ];\n\n  const [globalError, setGlobalError] = useState(false);\n\n  const [errorCode, seErrorCode] = useState(null);\n  const [global, setGlobal] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const tenantUri = config.host;\n        const webIntegrationId = config.webIntId;\n\n        const fetchResult = await fetch(\n          `https://${tenantUri}/api/v1/csrf-token`,\n          {\n            mode: \"cors\", // cors must be enabled\n            credentials: \"include\", // credentials must be included\n            headers: {\n              \"qlik-web-integration-id\": webIntegrationId,\n              \"content-type\": \"application/json\",\n            },\n          }\n        ).catch((error) => {\n          console.log(\"caught failed fetch\", error);\n        });\n\n        const csrfToken = fetchResult.headers.get(\"qlik-csrf-token\");\n        if (csrfToken == null) {\n          console.log(\"Not logged in\");\n          seErrorCode(-1);\n\n          return -1;\n        }\n        const session = enigma.create({\n          schema,\n          url: `wss://${tenantUri}/app/${config.appId}?qlik-web-integration-id=${webIntegrationId}&qlik-csrf-token=${csrfToken}`,\n          createSocket: (url) => new WebSocket(url),\n          responseInterceptors,\n        });\n        session.on(\"suspended\", () => {\n          console.warn(\"Captured session suspended\");\n        });\n        session.on(\"error\", () => {\n          console.warn(\"Captured session error\");\n        });\n        session.on(\"closed\", () => {\n          console.warn(\"Session was closed\");\n          seErrorCode(-3);\n\n          return -3;\n        });\n        const _global = await session.open();\n        const engineVersion = await _global.engineVersion();\n        const docList = await _global.getDocList({});\n        const oSName = await _global.oSName();\n        const oSVersion = await _global.oSVersion();\n        setGlobal({\n          global: _global,\n          docList,\n          engineVersion,\n          oSName,\n          oSVersion,\n        });\n\n        seErrorCode(1);\n\n        return 1;\n      }\n      if (config) {\n        const myConfig = config;\n        const url = SenseUtilities.buildUrl(myConfig);\n        try {\n          const session = enigma.create({\n            schema,\n            url,\n            responseInterceptors,\n          });\n          session.on(\"suspended\", () => {\n            console.warn(\"Captured session suspended\");\n          });\n          session.on(\"error\", () => {\n            console.warn(\"Captured session error\");\n          });\n          session.on(\"closed\", () => {\n            console.warn(\"Session was closed\");\n            seErrorCode(-3);\n\n            return -3;\n          });\n          const _global = await session.open();\n\n          const engineVersion = await _global.engineVersion();\n          const docList = await _global.getDocList({});\n          const oSName = await _global.oSName();\n          const oSVersion = await _global.oSVersion();\n          setGlobal({\n            global: _global,\n            docList,\n            engineVersion,\n            oSName,\n            oSVersion,\n          });\n\n          seErrorCode(1);\n\n          return 1;\n        } catch (err) {\n          console.warn(\"Captured Error\", err);\n          if (err.code === 1003) {\n            setGlobalError(\"No engine. App Not found.\");\n          }\n          seErrorCode(-2);\n\n          return -2;\n        }\n      }\n    })(null);\n  }, []);\n\n  return {\n    ...global,\n    globalError,\n    errorCode,\n  };\n}\n\nexport default useGlobal;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport { deepMerge } from \"../utils/object\";\nimport createDef from \"../utils/createHCDef\";\n\nconst initialProps = {\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 1,\n    qHeight: 1000,\n  },\n  cols: null,\n  qHyperCubeDef: null,\n  config: null,\n};\n\nconst useButton = (props) => {\n  const { qPage: qPageProp, cols, qHyperCubeDef, config } = deepMerge(\n    initialProps,\n    props\n  );\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [qLayout, setQLayout] = useState(null);\n\n  const _isMounted = useRef(true);\n  const qObject = useRef(null);\n  //const qPage = useRef(qPageProp);\n\n  const generateQProp = useCallback(() => {\n    const qProp = createDef(cols, qHyperCubeDef);\n\n    return qProp;\n  }, [cols, qHyperCubeDef]);\n\n  useEffect(() => {\n    if (!engine || !cols) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      setQLayout(await qObject.current.getLayout());\n    })();\n  }, [generateQProp, engine]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  const clearSelections = () => {\n    engine && engine.clearAll();\n  };\n\n  const previousSelection = () => {\n    engine && engine.back();\n  };\n\n  const nextSelection = () => {\n    engine && engine.forward();\n  };\n\n  const select = async (value, field) => {\n    const qDoc = await engine;\n    const qField = await qDoc.getField(field)\n    qField.select(value)\n  }\n\n  const selectValues = async (values, field, toggle=false) => {\n    const sel = await values.map(d => ({'qText': d}))\n    const qDoc = await engine;\n    const qField = await qDoc.getField(field)\n    qField.selectValues(sel,toggle)\n  }\n\n  const doReload = async (qMode, qPartial ) => {\n    const qDoc = await engine;\n    qDoc.doReload(qMode, qPartial, false)\n  }\n\n  const exportData = (filename) => {\n    const { host, secure, port, prefix } = config;\n\n    const id = qLayout.qInfo.qId;\n    const filenameExport = filename || \"Data Export\";\n    const _secure = secure ? \"https://\" : \"http://\";\n    const _port = port ? `:${port}` : \"\";\n    const server = _secure + host + _port + prefix;\n    engine.getObject(id).then((model) => {\n      model.exportData(\"CSV_C\", \"/qHyperCubeDef\", \"Test\", \"P\").then((url) => {\n        console.log(url.qUrl, url.qWarnings);\n        // window.open(server + url.qUrl, '_blank')\n      });\n    });\n  };\n\n  return {\n    clearSelections,\n    previousSelection,\n    nextSelection,\n    qLayout,\n    exportData,\n    select,\n    selectValues,\n    doReload,\n  };\n};\n\nexport default useButton;\n","import { useState } from \"react\";\nimport utility from \"../utils/CapApiUtils\";\n\n// let qlik;\n// let { qlik } = utility.qlobals;\nlet capabilityApisPromise;\nlet capApiSAASPromise;\n\nconst loadCapSAAS = async (config) => {\n  try {\n    if (capApiSAASPromise) {\n      await capApiSAASPromise;\n\n      return;\n    }\n    const tenantUrl = config.host;\n    const webIntegrationId = config.webIntId;\n\n    const link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = `https://${tenantUrl}/resources/autogenerated/qlik-styles.css`;\n    document.head.appendChild(link);\n    link.loaded = new Promise((resolve) => {\n      link.onload = () => {\n        resolve();\n      };\n    });\n\n    const script = document.createElement(\"script\");\n    script.src = `https://${tenantUrl}/resources/assets/external/requirejs/require.js`;\n    script.onload = async () => {\n      window.require.config({\n        baseUrl: `https://${tenantUrl}/resources`,\n        webIntegrationId,\n      });\n    };\n    document.body.appendChild(script);\n    script.loaded = new Promise((resolve) => {\n      script.onload = () => {\n        resolve();\n      };\n    });\n\n    capApiSAASPromise = Promise.all([link.loaded, script.loaded]);\n    await capApiSAASPromise;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst loadCapabilityApis = async (config) => {\n  try {\n    if (capabilityApisPromise) {\n      await capabilityApisPromise;\n\n      return;\n    }\n    const capabilityApisJS = document.createElement(\"script\");\n    const prefix = config.prefix !== \"\" ? `/${config.prefix}` : \"\";\n    capabilityApisJS.src = `${\n      (config.secure ? \"https://\" : \"http://\") +\n      config.host +\n      (config.port ? `:${config.port}` : \"\") +\n      prefix\n    }/resources/assets/external/requirejs/require.js`;\n    document.head.appendChild(capabilityApisJS);\n    capabilityApisJS.loaded = new Promise((resolve) => {\n      capabilityApisJS.onload = () => {\n        resolve();\n      };\n    });\n    const capabilityApisCSS = document.createElement(\"link\");\n    capabilityApisCSS.href = `${\n      (config.secure ? \"https://\" : \"http://\") +\n      config.host +\n      (config.port ? `:${config.port}` : \"\") +\n      prefix\n    }/resources/autogenerated/qlik-styles.css`;\n    capabilityApisCSS.type = \"text/css\";\n    capabilityApisCSS.rel = \"stylesheet\";\n    document.head.appendChild(capabilityApisCSS);\n    capabilityApisCSS.loaded = new Promise((resolve) => {\n      capabilityApisCSS.onload = () => {\n        resolve();\n      };\n    });\n\n    capabilityApisPromise = Promise.all([\n      capabilityApisJS.loaded,\n      capabilityApisCSS.loaded,\n    ]);\n    await capabilityApisPromise;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nfunction useCapability(config) {\n  const [app, setApp] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const prefix = config.prefix !== \"\" ? `/${config.prefix}/` : \"/\";\n\n        const qConfig = {\n          host: config.host,\n          isSecure: config.secure,\n          port: config.port || 443,\n          prefix,\n          appId: config.appId,\n          webIntegrationId: config.webIntId,\n        };\n\n        try {\n          await loadCapSAAS(qConfig);\n          window.require.config({\n            baseUrl: `https://${qConfig.host}/resources`,\n            webIntegrationId: config.webIntId,\n          });\n\n          window.require([\"js/qlik\"], async (q) => {\n            const app = q.openApp(qConfig.appId, qConfig);\n            // apply theme set in QSE\n            app.theme.get().then((theme) => {\n              theme.apply();\n            });\n            setApp(app);\n\n            return 1;\n          });\n        } catch (error) {\n          throw new Error(error);\n        }\n      } else {\n        try {\n          await loadCapabilityApis(config);\n          const prefix = config.prefix !== \"\" ? `/${config.prefix}/` : \"/\";\n          window.require.config({\n            baseUrl: `${\n              (config.secure ? \"https://\" : \"http://\") +\n              config.host +\n              (config.port ? `:${config.port}` : \"\") +\n              prefix\n            }resources`,\n            paths: {\n              qlik: `${\n                (config.secure ? \"https://\" : \"http://\") +\n                config.host +\n                (config.port ? `:${config.port}` : \"\") +\n                prefix\n              }resources/js/qlik`,\n            },\n            config: {\n              text: {\n                useXhr() {\n                  return true;\n                },\n              },\n            },\n          });\n\n          return new Promise((resolve) => {\n            if (utility.globals.qlik) {\n              const app = utility.globals.qlik.openApp(config.appId, {\n                ...config,\n                isSecure: config.secure,\n                prefix,\n              });\n              // apply theme set in QSE\n              app.theme.get().then((theme) => {\n                theme.apply();\n              });\n              setApp(app);\n            } else {\n              window.require([\"js/qlik\"], (q) => {\n                utility.globals.qlik = q;\n                utility.globals.resize = () => {\n                  q.resize();\n                };\n                const app = q.openApp(config.appId, {\n                  ...config,\n                  isSecure: config.secure,\n                  prefix,\n                });\n                setApp(app);\n\n                return 1;\n              });\n            }\n          });\n        } catch (error) {\n          throw new Error(error);\n        }\n      }\n    })();\n  }, []);\n\n  return { app };\n}\n\nexport default useCapability;\n","import { useState, useEffect, useCallback, useRef, useContext } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useSearch = ({ searchValue, dimensions, qCount, qGroupItemCount }) => {\n  \n  const [groupResults, setGroupResults] = useState([]);\n  const [flatResults, setFlatResults] = useState([]);\n  const _isMounted = useRef(true);\n  const { engine } = useContext(EngineContext) || {};\n\n  useEffect(() => {\n    if (engine === undefined) {\n    } else {\n      (async () => {\n        try {\n          const qDoc = await engine;\n          const search = await qDoc.searchResults(\n            {\n              qSearchFields: dimensions,\n            },\n            [searchValue],\n            {\n              qOffset: 0,\n              qCount,\n              qGroupItemOptions: [\n                {\n                  qGroupItemType: \"FIELD\",\n                  qOffset: 0,\n                  qCount: qGroupItemCount,\n                },\n              ],\n            }\n          );\n          const res = await search;\n          const _groupRes = await groupRes(res)\n          const _flattenRes = await flattenRes(_groupRes)\n          setGroupResults(_groupRes);\n          setFlatResults(_flattenRes);\n          if (_isMounted.current) {\n            setGroupResults(_groupRes);\n            setFlatResults(_flattenRes);\n          }\n        } catch (e) {\n          console.warn(e);\n        }\n      })();\n    }\n  }, [engine, searchValue, qCount, qGroupItemCount, dimensions]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  const groupRes = v => {\n    let arr = []\n    let series = {};\n    v.qSearchGroupArray.map(d => {\n      series['id'] = d.qId\n      series['dimension'] = d.qItems[0].qIdentifier\n      series['value'] =  d.qItems[0].qItemMatches\n      arr.push(series)\n      series = {};\n    })\n    return arr\n  }\n\n  const flattenRes = v => {\n    const arr = [];\n    let series = {}\n    v.map(d => {\n      d.value.map(item => {\n        series['dimension'] = d.dimension\n        series['value'] = item.qText\n        arr.push(series)\n        series = {};\n      })\n    })\n    return arr\n\n  }\n\n  const groupSelect = useCallback((id) =>\n    (async () => {\n      const qDoc = await engine;\n      // eslint-disable-next-line no-unused-expressions\n      qDoc.selectAssociations(\n        {\n          qSearchFields: dimensions,\n          qContext: 'CurrentSelections'\n        },\n        [searchValue],\n        id\n        ),\n      [];\n    })()\n  );\n\n  const flatSelect = useCallback((dim, value) =>\n    (async () => {\n      const qDoc = await engine;\n      // eslint-disable-next-line no-unused-expressions\n      const qField = await qDoc.getField(dim)\n      qField.select(value)\n    })()\n  );\n\n  return {\n    groupResults,\n    flatResults,\n    flatSelect,\n    groupSelect,\n  };\n};\n\nexport default useSearch;\n","import { useState, useEffect, useRef, useContext, useCallback } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nlet qDoc = null;\nlet qObject = null;\n\nconst useSelectionObject = () => {\n  const { engine } = useContext(EngineContext) || {};\n\n  const _isMounted = useRef(true);\n  const [qLayout, setQLayout] = useState(null);\n  const [selections, setSelections] = useState(null);\n\n  const update = useCallback(async () => {\n    const _qLayout = await qObject.getLayout();\n    const sel = await getSelections(_qLayout);\n    if (_isMounted.current) {\n      setQLayout(_qLayout);\n      setSelections(sel);\n    }\n  }, []);\n\n  const getSelections = (v) => {\n    const selections = v.qSelectionObject.qSelections;\n    return selections;\n  };\n\n  const clearSelections = async (field, value) => {\n    if (field) {\n      const qField = await qDoc.getField(field);\n      if (value) {\n        await qField.toggleSelect(value);\n      } else {\n        await qField.clear();\n      }\n    } else {\n      qDoc.clearAll();\n    }\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line no-empty\n    if (engine === undefined) {\n    } else {\n      (async () => {\n        const qProp = {\n          qInfo: { qType: \"SelectionObject\" },\n          qSelectionObjectDef: {},\n        };\n        qDoc = await engine;\n        qObject = await qDoc.createSessionObject(qProp);\n        qObject.on(\"changed\", () => {\n          update();\n        });\n        update();\n      })();\n    }\n  }, [engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return { qLayout, selections, clearSelections };\n};\n\nexport default useSelectionObject;\n","import Uid from \"./Uid\";\n\nconst globals = {\n  qlik: null,\n  resize: null,\n};\n\nexport default { Uid, globals };\n","function uid(length) {\n  const ALPHABET = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const ID_LENGTH = length || 8;\n  let rtn = \"\";\n  for (let i = 0; i < ID_LENGTH; i += 1) {\n    rtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n  }\n  return rtn;\n}\n\nexport default uid;\n","import { useContext, useState, useEffect } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useApp = () => {\n  const { engine } = useContext(EngineContext) || {};\n  const [qApp, setApp] = useState();\n\n  const doReload = async (qMode, qPartial) => {\n    const qDoc = await engine;\n    qDoc.doReload(qMode, qPartial, false);\n  };\n\n  useEffect(\n    () =>\n      (async () => {\n        if (engine === undefined) {\n        } else {\n          const qDoc = await engine;\n\n          const appProperties = await qDoc.getAppProperties();\n\n          setApp({\n            app: qDoc,\n            appProperties,\n            ...appProperties,\n            doReload,\n          });\n        }\n      })(),\n    [engine]\n  );\n\n  return {\n    ...qApp,\n  };\n};\n\nexport default useApp;\n","import { useContext, useState, useEffect } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useLayout = () => {\n  const { engine } = useContext(EngineContext) || {};\n  const [layout, setLayout] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(\n    () =>\n      (async () => {\n        if (!engine) return;\n        try {\n          const qDoc = await engine;\n\n          const appLayout = await qDoc.getAppLayout();\n          setLayout({\n            appLayout,\n            ...appLayout,\n          });\n        } catch (err) {\n          setError(err);\n        }\n      })(),\n    [engine]\n  );\n\n  return {\n    ...layout,\n    error,\n  };\n};\n\nexport default useLayout;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport { deepMerge } from \"../utils/object\";\n\nconst initialProps = {\n  id: null,\n  // qName: null,\n  comment: undefined,\n  numberPresentation: undefined,\n  includeInBookmark: false,\n  definition: null,\n};\n\nconst useVariable = (props) => {\n  const name = typeof props === \"string\" ? props : props.name || null;\n\n  const {\n    id,\n    // qName,\n    comment,\n    numberPresentation,\n    includeInBookmark,\n    definition,\n  } = deepMerge(initialProps, props);\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [qLayout, setQLayout] = useState(null);\n  const [qProperties, setQProperties] = useState(null);\n  const [error, setError] = useState(null);\n\n  const qObject = useRef(null);\n\n  const generateQProp = (\n    qId,\n    qName,\n    qComment,\n    qNumberPresentation,\n    qIncludeInBookmark,\n    qDefinition\n  ) => {\n    const qProp = {\n      qInfo: {\n        qId,\n        qType: \"Variable\",\n      },\n      qMetaDef: {},\n      qName,\n      qComment,\n      qNumberPresentation,\n      qIncludeInBookmark,\n      qDefinition: qDefinition.toString(),\n    };\n\n    return qProp;\n  };\n\n  const getVaribale = async (\n    qId,\n    qName,\n    qComment,\n    qNumberPresentation,\n    qIncludeInBookmark,\n    qDefinition\n  ) => {\n    const qDoc = await engine;\n\n    let qLocalObject;\n\n    if (!qId && !qName && !qDefinition) {\n      const qSessionObject = await qDoc.createSessionObject({\n        qInfo: {\n          qId: \"VL01\",\n          qType: \"VariableList\",\n        },\n        qVariableListDef: {\n          qType: \"variable\",\n        },\n      });\n      qLocalObject = await qSessionObject.getLayout();\n      setQLayout(qLocalObject);\n    }\n    if (qId && !qDefinition) {\n      qLocalObject = await qDoc.getVariableById({\n        qId,\n      });\n    }\n    if (qName && !qDefinition) {\n      qLocalObject = await qDoc.getVariableByName({\n        qName,\n      });\n    }\n    if (qName && qDefinition) {\n      try {\n        qLocalObject = await qDoc.getVariableByName({\n          qName,\n        });\n      } catch (err) {\n        if (!qLocalObject) {\n          qLocalObject = await qDoc.createSessionVariable(\n            generateQProp(\n              qId,\n              qName,\n              qComment,\n              qNumberPresentation,\n              qIncludeInBookmark,\n              qDefinition\n            )\n          );\n\n          qObject.current = await qLocalObject;\n          update(qObject.current);\n        }\n        if ((error.code = 18001)) {\n          setError(\"Variable already exists\");\n        } else {\n          setError(err);\n        }\n      }\n    }\n\n    return qLocalObject;\n  };\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n  const getProperties = useCallback(() => qObject.current.getProperties(), []);\n\n  const setProperties = useCallback(async (props) => {\n    const {\n      qId,\n      qName,\n      qComment,\n      qNumberPresentation,\n      qIncludeInBookmark,\n      qDefinition,\n    } = props;\n    if (qObject.current) {\n      const qProperties = await getProperties();\n\n      const qObject = await qObject.current.setProperties(\n        generateQProp(\n          qId || qProperties.qInfo.qId,\n          qName || qProperties.qName,\n          qComment || qProperties.qComment,\n          qNumberPresentation || qProperties.qNumberPresentation,\n          qIncludeInBookmark || qProperties.qIncludeInBookmark,\n          qDefinition.toString() || qProperties.qDefinition.toString()\n        )\n      );\n      update(qObject.current);\n    }\n  }, []);\n\n  const setValue = useCallback(async (value) => {\n    if (qObject.current) {\n      const qProperties = await getProperties();\n\n      const qObject = await qObject.current.setProperties(\n        generateQProp(\n          qProperties.qInfo.qId,\n          qProperties.qName,\n          qProperties.qComment,\n          qProperties.qNumberPresentation,\n          qProperties.qIncludeInBookmark,\n          value.toString()\n        )\n      );\n      update(qObject.current);\n    }\n  }, []);\n\n  const update = useCallback(async (qObj) => {\n    const _qLayout = await getLayout();\n    _qLayout.value =\n      _qLayout.qNum === \"number\" ? _qLayout.qNum : _qLayout.qText;\n    setQLayout(_qLayout);\n    setQProperties(await getProperties());\n  }, []);\n\n  useEffect(() => {\n    if (!engine) return;\n\n    (async () => {\n      const qDoc = await engine;\n\n      try {\n        qObject.current = await getVaribale(\n          id,\n          name,\n          comment,\n          numberPresentation,\n          includeInBookmark,\n          definition\n        );\n\n        qObject.current.on(\"changed\", () => {\n          update(qObject.current);\n        });\n\n        update(qObject.current);\n      } catch (err) {\n        if (err.code === -2) {\n          setError(\"Variable Not Found\");\n        } else {\n          setError(err);\n        }\n      }\n    })();\n  }, [id, name, engine]);\n\n  if (qLayout && qLayout.qVariableList) {\n    qLayout.variableList = qLayout.qVariableList.qItems;\n  }\n\n  return {\n    qLayout,\n    ...qLayout,\n    qProperties,\n    setProperties,\n    setValue,\n    error,\n  };\n};\n\nexport default useVariable;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\n// const initialProps = {\n//   qId: null,\n// };\n\nconst useBookmark = (props) => {\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [bookmarks, setBookmarks] = useState(null);\n  const [error, setError] = useState(null);\n\n  const qObject = useRef(null);\n\n  const getBookmark = useCallback(\n    (qId) =>\n      qObject.current.getBookmark({\n        qId: qId,\n      }),\n    []\n  );\n\n  const getBookmarkLayout = async (qId) => {\n    const bookmark = await qObject.current.getBookmark({\n      qId,\n    });\n\n    return await bookmark.getLayout();\n  };\n\n  const applyBookmark = async (qId) => {\n    const bookmarkApplied =\n      qObject.current &&\n      qObject.current.applyBookmark({\n        qId,\n      });\n    if (bookmarkApplied) {\n      const appliedBookmark = await getBookmark(qId);\n      const bookmarkInfo = await appliedBookmark.getLayout();\n\n      setBookmarks({ ...bookmarks, appliedBookmark, bookmarkInfo });\n    }\n  };\n\n  const updateBookmark = async (qId, qTitle, qDescription) => {\n    const bookmark = await getBookmark(qId);\n\n    await bookmark.setProperties({\n      qProp: {\n        qInfo: {\n          qId,\n          qType: \"bookmark\",\n        },\n        qMetaDef: {\n          title: qTitle,\n          description: qDescription,\n        },\n      },\n    });\n\n    updateBookmarks();\n  };\n\n  const updateBookmarks = async () => {\n    const bookmarks = await getBookmarks();\n\n    const bookmarkList = bookmarks.map((d, i) => {\n      return {\n        id: d.qInfo.qId,\n        title: d.qMeta.title,\n        description: d.qMeta.description,\n        modifiedDate: d.qData.qBookmark.qUtcModifyTime,\n      };\n    });\n    setBookmarks({ bookmarks, bookmarkList });\n  };\n\n  const destroyBookmark = async (qId) => {\n    const bookmarkDestroyed = await qObject.current.destroyBookmark({\n      qId,\n    });\n\n    updateBookmarks();\n    return bookmarkDestroyed;\n  };\n\n  const createBookmark = async (qTitle, qDescription, qId = null) => {\n    const bookmarkCreated = await qObject.current.createBookmark({\n      qProp: {\n        qInfo: {\n          qId: qId,\n          qType: \"bookmark\",\n        },\n        qMetaDef: {\n          title: qTitle || \"Unnamed bookmark\",\n          description: qDescription,\n        },\n      },\n    });\n    const newBookmark = await bookmarkCreated.getLayout();\n\n    updateBookmarks();\n    return newBookmark;\n  };\n\n  const getBookmarks = useCallback(() =>\n    qObject.current.getBookmarks({\n      qOptions: {\n        qTypes: [\"bookmark\"],\n        qData: {},\n      },\n    })\n  );\n\n  const update = useCallback(async () => {\n    updateBookmarks();\n  }, []);\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n\n    (async () => {\n      const qDoc = await engine;\n\n      try {\n        qObject.current = qDoc;\n\n        qObject.current.on(\"changed\", () => {\n          update();\n        });\n        update();\n      } catch (err) {\n        if (err.code === -2) {\n          setError(\"Bookmark Not Found\");\n        } else {\n          setError(err);\n        }\n      }\n    })();\n  }, [engine]);\n\n  return {\n    ...bookmarks,\n    applyBookmark,\n    createBookmark,\n    destroyBookmark,\n    getBookmark,\n    getBookmarkLayout,\n    updateBookmark,\n    error,\n  };\n};\n\nexport default useBookmark;\n"],"names":["EngineContext","React","createContext","StyledLogin","config","header","body","bodySub","buttonText","buttonFontColor","buttonColor","logo","loginfontFamily","tenantUri","host","webIntegrationId","webIntId","_jsx","style","position","top","left","zIndex","width","height","backgroundColor","display","_jsxs","justifyContent","flexDirection","margin","padding","border","borderRadius","minWidth","alignSelf","fontFamily","boxSizing","borderBottom","WebkitBoxPack","WebkitJustifyContent","msFlexPack","overflow","WebkitFlexDirection","msFlexDirection","WebkitFlex","msFlex","flex","size","fontSize","src","logoHeight","logoWidth","alt","WebkitAlignItems","WebkitBoxAlign","msFlexAlign","alignItems","cursor","color","outline","WebkitTransition","transition","onClick","loginUrl","URL","searchParams","append","window","location","href","Login","rest","errorCode","useContext","propTypes","PropTypes","object","string","oneOf","defaultProps","StyledNotConnected","focusable","align","direction","reload","enigma","require","schema","SenseUtilities","useEngine","responseInterceptors","onRejected","sessionReference","request","error","console","warn","code","enums","LocalizedErrorCode","LOCERR_GENERIC_ABORTED","tries","retry","LOCERR_GENERIC_INVALID_PARAMETERS","LOCERR_HC_MODAL_OBJECT_ERROR","Promise","reject","useState","engineError","setEngineError","seErrorCode","url","buildUrl","recover","result","session","create","on","open","_global","openDoc","appId","_doc","setEngine","e","then","err","qcs","fetch","mode","credentials","headers","log","fetchResult","csrfToken","get","_exit2","createSocket","WebSocket","engine","NotConnected","engineContext","engineConfigContext","Motor","children","licenseKey","NotConnectedheader","NotConnectedBody","NotConnectedButtonText","myConfig","validLicense","setValidLicense","newEngine","userKey","userInput","i","licenses","push","input","CryptoAES","decrypt","toString","CryptoENC","filter","lic","LicenseCheck","useEffect","length","Provider","value","ReactWaterMark","waterMarkText","openSecurityDefense","securityAlarm","options","chunkWidth","chunkHeight","textAlign","textBaseline","globalAlpha","font","rotateAngle","fillStyle","isObject","item","Array","isArray","deepMerge","target","sources","output","forEach","source","Object","keys","key","initialState","qData","qRData","qLayout","selections","reducer","state","action","payload","type","Error","initialProps","cols","qHyperCubeDef","qPage","qTop","qLeft","qWidth","qHeight","qSortByAscii","qSortByLoadOrder","qInterColumnSortOrder","qSuppressZero","qSortByExpression","qSuppressMissing","qExpression","getQRData","qSortByNumeric","qColumnOrder","qCalcCondition","undefined","qOtherTotalSpec","useHyperCube","props","totalSpec","qPageProp","_isMounted","useRef","useReducer","dispatch","qObject","qOtherMode","qOtherCounted","qOtherCount","generateQProp","useCallback","qProp","qInfo","qType","_qHyperCubeDef","qMeasures","qDef","qDimensions","qFieldDefs","myqInterColumnSortOrder","qInterColumnSortOrderSet","sortIndex","col","isDimension","startsWith","qLibraryId","qField","map","qSortCriterias","qNullSuppression","qShowTotalsAbove","qOtherLabel","qAttributeExpressions","qCondBackgroundFormat","qAttribute","id","qCondTextFormat","qCondChartColor","qFieldLabels","qLabel","isMeasure","qNumFormat","qSortBy","qNumType","qUseThou","qFmt","qNumFmt","qDec","qThou","qChartType","qShowPoints","qCurve","qFillStyle","qLegendShape","getLayout","current","getData","getHyperCubeData","qDataPages","getReducedData","_qPage","Math","round","getHyperCubeReducedData","update","measureInfo","_qLayout","_qData","_selections","qMatrix","row","qState","d","qHyperCube","qMeasureInfo","_qRData","changePage","newPage","beginSelections","endSelections","qAccept","select","qElemNumber","toggle","selectHyperCubeValues","applyPatches","patches","qDoc","createSessionObject","listData","selectionsId","autoSortByState","dimension","label","qListObjectDef","useList","currentColumn","qShowAlternatives","qAutoSortByState","qDisplayNumberOfRows","getListObjectData","structureData","_listData","text","qText","number","qNumber","_selId","ignoreLock","selectListObjectValues","searchListObjectFor","acceptListObjectSearch","clearSelections","abortModal","motorListProps","getMeasureNames","qFallbackTitle","getDimensionNames","qDimensionInfo","validData","qListObject","DimCheck","qError","MeasCheck","isNaN","qMax","qMin","_catch","pact","s","o","_settle","bind","v","observer","_Pact","prototype","onFulfilled","this","callback","_this","thenable","title","subTitle","metrics","mData","nameKey","valueKey","qListData","dataList","dataKeys","qLists","qTitle","qSubTitle","qMetrics","useData","setError","pageSize","metric","qName","qExpr","qListObjects","list","listDef","qStateName","values","qInitialDataFetch","entries","getMultiPageData","numberOfPages","qObjects","qPages","qTails","qArea","test","stage","shouldContinue","_isSettledPact","updateValue","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","getListsFromData","getListData","layout","all","getNameKey","getValueKey","data","qNoOfDiemnsions","measureNames","dimensionNames","attrExpItems","index","attrExp","qAttrExps","qValues","qAttrExprInfoItem","itemIndex","qAttrExprInfo","qNum","pair","hyperCubeChartTransform","qNoOfDimensions","parentText","transformedData","series","elemNumber","multiDimHyperCubeTransform","getDataKeys","measure","multiDimDataKeys","getDataKeyList","listDetail","obj","items","getTitle","getMetrics","metricObj","_qValid","ceil","qSize","qcy","_qListData","_mData","_nameKey","_valueKey","_dataList","_dataKeys","_qTitle","_qSubTitle","_qMetrics","handlerChange","qOp","qPath","qValue","JSON","stringify","dataSet","createDef","qGrouping","headerGroup","sortCriteria","useTable","page","_setPage","setPage","_page","pages","_setPages","setPages","_pages","handlePageChange","pageIndex","dataKey","columnId","hyperCubeTransform","dim","meas","getDims","getMeas","concat","orderCols","_orderedCols","_dataSet","_headerGroup","dataIndex","render","defaultSortDesc","qSortIndicator","qInterColumnIndex","qReverseSort","qGrandTotals","qColumnType","qGrandTotalRow","getHeader","dimNo","handleSortChange","column","qEffectiveInterColumnSortOrder","sort","a","b","includes","incrementPage","decrementPage","useGlobal","globalError","setGlobalError","engineVersion","getDocList","docList","oSName","oSVersion","setGlobal","global","capabilityApisPromise","capApiSAASPromise","useButton","setQLayout","clearAll","previousSelection","back","nextSelection","forward","exportData","filename","getObject","qId","model","qUrl","qWarnings","field","getField","selectValues","sel","doReload","qMode","qPartial","useSearch","searchValue","dimensions","qCount","qGroupItemCount","groupResults","setGroupResults","flatResults","setFlatResults","searchResults","qSearchFields","qOffset","qGroupItemOptions","qGroupItemType","search","res","groupRes","_groupRes","flattenRes","_flattenRes","arr","qSearchGroupArray","qItems","qIdentifier","qItemMatches","groupSelect","selectAssociations","qContext","flatSelect","useSelectionObject","setSelections","getSelections","qSelectionObject","qSelections","qSelectionObjectDef","toggleSelect","clear","Uid","ALPHABET","ID_LENGTH","rtn","charAt","floor","random","globals","qlik","resize","useCapability","qConfig","isSecure","secure","port","prefix","tenantUrl","link","document","createElement","rel","head","appendChild","loaded","resolve","onload","script","baseUrl","loadCapSAAS","q","app","openApp","theme","apply","setApp","capabilityApisJS","capabilityApisCSS","loadCapabilityApis","paths","useXhr","utility","useApp","qApp","getAppProperties","appProperties","useLayout","setLayout","getAppLayout","appLayout","comment","numberPresentation","includeInBookmark","definition","useVariable","name","qProperties","setQProperties","qComment","qNumberPresentation","qIncludeInBookmark","qDefinition","qMetaDef","getProperties","setProperties","setValue","qObj","getVariableByName","qLocalObject","createSessionVariable","getVariableById","qVariableListDef","qSessionObject","getVaribale","qVariableList","variableList","useBookmark","bookmarks","setBookmarks","getBookmark","updateBookmarks","getBookmarks","bookmarkList","qMeta","description","modifiedDate","qBookmark","qUtcModifyTime","qOptions","qTypes","applyBookmark","bookmarkApplied","appliedBookmark","bookmarkInfo","createBookmark","qDescription","bookmarkCreated","newBookmark","destroyBookmark","bookmarkDestroyed","getBookmarkLayout","bookmark","updateBookmark"],"mappings":"oSAEaA,IAAAA,EAAgBC,EAAMC,mWCAnC,MAAMC,EAAc,gBAClBC,IAAAA,OACAC,IAAAA,OACAC,IAAAA,KACAC,IAAAA,QAEAC,IAAAA,WAEAC,IAAAA,gBACAC,IAAAA,YACAC,IAAAA,KAGAC,IAAAA,gBAEMC,EAAYT,EAAOU,KACnBC,EAAmBX,EAAOY,SAShC,OACEC,SACEC,MAAO,CACLC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,KACRC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,2BACjBC,QAAS,iBAGXC,SACET,MAAO,CACLQ,QAAS,OACTE,eAAgB,SAChBC,cAAe,SACfV,SAAU,WACVW,OAAQ,GACRC,QAAS,MACTN,kBAvCRA,gBAwCQO,OAAQ,iBACRC,aAAc,MACdV,MAAO,MACPW,SAAU,QACVd,IAAK,MACLC,KAAM,MACNc,UAAW,wBAGblB,SACEC,MAAO,CACLkB,WAAYxB,EACZW,MAAO,OAIPG,QAAS,OACTW,UAAW,aACXC,aAAc,oBACdC,cAAe,SACfC,qBAAsB,SACtBC,WAAY,SACZb,eAAgB,SAChBc,SAAU,UACVC,oBAAqB,MACrBC,gBAAiB,MACjBf,cAAe,MACfgB,WAAY,WACZC,OAAQ,WACRC,KAAM,qBAGR9B,SAAK+B,OA1EbA,KA0EyB9B,MAAO,CAAEa,QAAS,SAAUkB,SAAU,iBACpDtC,EACCM,SACEiC,IAAKvC,EACLa,SAxEd2B,WAyEc5B,QAxEd6B,UAyEcC,IAAI,SAGNhD,MAINsB,SACET,MAAO,CACLkB,WAAYxB,EACZW,MAAO,OAIPG,QAAS,OACTW,UAAW,aACXN,QAAS,SACTuB,iBAAkB,SAClBC,eAAgB,SAChBC,YAAa,SACbC,WAAY,SACZlB,cAAe,SACfC,qBAAsB,SACtBC,WAAY,SACZb,eAAgB,SAChBc,SAAU,UACVC,oBAAqB,SACrBC,gBAAiB,SACjBf,cAAe,SACfgB,WAAY,SACZC,OAAQ,WACRC,KAAM,sBAGR9B,SAAKC,MAAO,CAAEa,QAAS,SAAUkB,SAAU,iBAAW3C,IACtDW,SAAKC,MAAO,CAAEa,QAAS,SAAUkB,SAAU,iBAAW1C,IACtDU,YACEC,MAAO,CACLkB,WAAYxB,EACZqC,SAAU,OACVS,OAAQ,UACRvC,SAAU,WACVW,OAAQ,MACRL,gBAAiBf,EACjBuB,aAAc,MACd0B,MAAOlD,EACPuB,OAAQ,EACR4B,QAAS,OACTC,iBAAkB,OAClBC,WAAY,OACZ/B,QAAS,eAEXgC,QAvHQ,WAChB,IAAMC,EAAW,IAAIC,eAAepD,YACpCmD,EAASE,aAAaC,OAAO,WAAYC,OAAOC,SAASC,MACzDN,EAASE,aAAaC,OAAO,0BAA2BpD,GACxDqD,OAAOC,SAASC,KAAON,YAqHdxD,0BCxIP+D,EAAQ,gBAAGnE,IAAAA,OAAWoE,SAElBC,EAAcC,EAAW1E,GAAzByE,UAER,OACExD,SAAKC,MAAO,CAAEQ,SAAwB,IAAf+C,EAAmB,GAAK,iBAC5CrE,GAAUqE,GAAaxD,EAACd,KAAYC,OAAQA,GAAYoE,OAK/DD,EAAMI,eACJvE,OAAQwE,EAAUC,OAClBxE,OAAQuE,EAAUE,OAClBxE,KAAMsE,EAAUE,OAChBvE,QAASqE,EAAUE,OACnB9B,KAAM4B,EAAUG,MAAM,CAAC,OAAQ,QAAS,SAAU,QAAS,WAC3DvE,WAAYoE,EAAUE,OACtBrD,gBAAiBmD,EAAUE,OAC3BrE,gBAAiBmE,EAAUE,OAC3BpE,YAAakE,EAAUE,OACvBnE,KAAMiE,EAAUE,OAChB3B,WAAYyB,EAAUE,OACtB1B,UAAWwB,EAAUE,gBACbF,EAAUE,SAClBlE,gBAAiBgE,EAAUE,UAG7BP,EAAMS,aAAe,CACnB5E,OAAQ,KACRO,KAAM,KACNwC,WAAY,KACZC,UAAW,KACX/C,OAAQ,kCACRC,KAAM,2CACNC,QAAS,GACTyC,KAAM,SACNxC,WAAY,QACZiB,gBAAiB,QACjBhB,gBAAiB,QACjBC,YAAa,UACbE,gBAAiB,oBC5CnB,IAAMqE,EAAqB,gBAEzB3E,IAAAA,KACA0C,IAAAA,KACAxC,IAAAA,WAEAC,IAAAA,gBACAC,IAAAA,YACAE,IAAAA,gBAEA,OACEK,SACEC,MAAO,CACLC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,KACRC,MAAO,QACPC,OAAQ,QACRC,gBAAiB,2BACjBC,QAAS,iBAGXC,SACET,MAAO,CACLQ,QAAS,OACTE,eAAgB,SAChBC,cAAe,SACfV,SAAU,WACVW,OAAQ,GACRC,QAAS,MACTN,kBA1BRA,gBA2BQO,OAAQ,iBACRC,aAAc,MACdV,MAAO,MACPW,SAAU,QACVd,IAAK,MACLC,KAAM,MACNc,UAAW,wBAGblB,SACEC,MAAO,CACLkB,WAAYxB,EACZW,MAAO,OAIPG,QAAS,OACTW,UAAW,aACXC,aAAc,oBACdC,cAAe,SACfC,qBAAsB,SACtBC,WAAY,SACZb,eAAgB,SAChBc,SAAU,UACVC,oBAAqB,MACrBC,gBAAiB,MACjBf,cAAe,MACfgB,WAAY,WACZC,OAAQ,WACRC,KAAM,qBAGR9B,SAAK+B,KAAMA,EAAM9B,MAAO,CAAEa,QAAS,SAAUkB,SAAU,mBA/D/D5C,WAmEMsB,SACEuD,WAAW,EACX3D,MAAM,OAEN4D,MAAM,SACNC,UAAU,SACVrD,QAAQ,mBAERd,SACE+B,KAAMA,EACN9B,MAAO,CACLa,QAAS,SACTkB,SAAU,OACVb,WAAYxB,YAGbN,IAEHW,YACEC,MAAO,CACLkB,WAAYxB,EACZqC,SAAU,OACVS,OAAQ,UACRvC,SAAU,WACVW,OAAQ,MACRL,gBAAiBf,EACjBuB,aAAc,MACd0B,MAAOlD,EACPuB,OAAQ,EACR4B,QAAS,OACTC,iBAAkB,OAClBC,WAAY,OACZ/B,QAAS,eAGXgC,QAAS,kBAAMM,SAASgB,mBAEvB7E,aC1GP8E,EAASC,QAAQ,aACjBC,EAASD,QAAQ,mCACjBE,EAAiBF,QAAQ,6BAI/B,SAASG,EAAUtF,GACjB,IAAMuF,EAAuB,CAC3B,CAEEC,WAAY,SAA2BC,EAAkBC,EAASC,GAMhE,OALAC,QAAQC,KACN,4CACeF,EAAMG,WAAUH,GAI/BA,EAAMG,OAASV,EAAOW,MAAMC,mBAAmBC,yBAG/CP,EAAQQ,OAASR,EAAQQ,OAAS,GAAK,EACvCN,QAAQC,iCAAiCH,EAAQQ,OAG7CR,EAAQQ,OApBF,GAqBDR,EAAQS,QAIjBR,EAAMG,OACNV,EAAOW,MAAMC,mBAAmBI,mCAKhCT,EAAMG,OACNV,EAAOW,MAAMC,mBAAmBK,6BAJzBV,EAAMG,MAWfF,QAAQC,KAAKF,QAEDW,QAAQC,OAAOZ,SAKKa,GAAS,GAAxCC,OAAaC,SACaF,EAAS,MAAnCnC,OAAWsC,SACUH,EAAS,YACnC,4DAmDMxG,GACF,IACM4G,EAAMvB,EAAewB,SADV7G,GApDR,OA4fV,SAAgBE,EAAM4G,GAC5B,IACC,IAAIC,IAvcUC,EAAU9B,EAAO+B,OAAO,CAC5B7B,OAAAA,EACAwB,IAAAA,EACArB,qBAAAA,KAEM2B,GAAG,YAAa,WACtBtB,QAAQC,KAAK,gCAEfmB,EAAQE,GAAG,QAAS,WAClBtB,QAAQC,KAAK,4BAEfmB,EAAQE,GAAG,SAAU,WAInB,OAHAtB,QAAQC,KAAK,sBACbc,GAAa,IAEL,oBAEYK,EAAQG,sBAAxBC,0BACaA,EAAQC,QAAQrH,EAAOsH,sBAApCC,GAIN,OAHAC,EAAUD,GACVZ,EAAY,UAobnB,MAAMc,GACP,OAAOX,EAAQW,OAzcDT,EA2cf,OAAID,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,cAvbSY,GAOP,OANA/B,QAAQC,KAAK,iBAAkB8B,GACd,OAAbA,EAAI7B,MACNY,EAAe,6BAEjBC,GAAa,IAEL,yBApFR3G,GAAUA,EAAO4H,KACnB,IAAMnH,EAAYT,EAAOU,KACnBC,EAAmBX,EAAOY,SAHvB,uBAKiBiH,iBACbpH,uBACX,CACEqH,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,0BAA2BrH,EAC3B,eAAgB,4BAGd,SAACgF,GACPC,QAAQqC,IAAI,sBAAuBtC,oBAX/BuC,GAcN,IAAMC,EAAYD,EAAYF,QAAQI,IAAI,mBAC1C,GAAiB,MAAbD,SACFvC,QAAQqC,IAAI,iBACZtB,GAAa,GAFQ0B,KAIb,EAEV,IAAMrB,EAAU9B,EAAO+B,OAAO,CAC5B7B,OAAAA,EACAwB,aAAcnG,UAAiBT,EAAOsH,kCAAiC3G,sBAAoCwH,EAC3GG,aAAc,SAAC1B,cAAY2B,UAAU3B,IACrCrB,qBAAAA,IA9BO,OAgCTyB,EAAQE,GAAG,YAAa,WACtBtB,QAAQC,KAAK,gCAEfmB,EAAQE,GAAG,QAAS,WAClBtB,QAAQC,KAAK,4BAEfmB,EAAQE,GAAG,SAAU,WAInB,OAHAtB,QAAQC,KAAK,sBACbc,GAAa,IAEL,oBAEYK,EAAQG,sBAAxBC,0BACaA,EAAQC,QAAQrH,EAAOsH,sBAApCC,GA7CG,OA8CTC,EAAUD,GACVZ,EAAY,KAEL,qCAjDX,4BAAA,IAyFC,IA1FYa,OA4Ff,MAAO,CAAEgB,YAAQ/B,YAAAA,EAAapC,UAAAA,oBC3I1BoE,EAAe,gBAAGzI,IAAAA,OAAWoE,SAE3BsE,EAAgBpE,EAAW1E,GAC3B+I,EAAsBrD,EAAUtF,GAC9BqE,GAAcqE,GAAiBC,GAA/BtE,UAER,OACExD,SAEEC,MAAO,CAAEQ,SAAwB,IAAf+C,EAAmB,GAAK,iBAEzCrE,GAAUqE,GAAaxD,EAACgE,OAAuBT,OCTtD,SAASwE,SACPJ,IAAAA,OACAK,IAAAA,SACAC,IAAAA,WAEAvI,IAAAA,KACAyC,IAAAA,UACAD,IAAAA,WACA9C,IAAAA,OACAC,IAAAA,KACAC,IAAAA,QACAyC,IAAAA,KACAxC,IAAAA,WACAC,IAAAA,gBACAC,IAAAA,YACAe,IAAAA,gBACAb,IAAAA,gBACAuI,IAAAA,mBACAC,IAAAA,iBACAC,IAAAA,uBAIOC,EAAyB1C,IAnBhCxG,aAoBwCwG,GAAS,GAA1C2C,OAAcC,OACfC,EAAab,EAAS,CAAEA,OAAQA,EAAQ/B,YAAa,KAAMpC,UAAW,MAAUiB,EAAU4D,GAG1FI,EAAUR,WCjCYS,GAE5B,IAAIC,EACEC,EAAW,GAGjB,IAAKD,EAAI,EAAGA,EAAI,IAAKA,IACnBC,EAASC,KAAK,gBAAgBF,GAGhC,IACIG,EADUC,EAAUC,QAAQN,EAAW,eACvBO,SAASC,GAK7B,OAFoBN,EAASO,OAAO,SAAAC,GAAS,OAAOA,GAAON,IDmB9BO,CAAapB,GAAc,GAqBxD,OAlBAqB,EAAU,WACaf,EAArBE,EAAQc,OAAS,IACjB,CAACtB,IAiBDvH,EAAC3B,EAAcyK,UAASC,MAAOjB,YAC3BxI,EAACsD,GACCnE,OAAQkJ,EACR3I,KAAMA,EACNwC,WAAYA,EACZC,UAAWA,EACX/C,OAAQA,EACRC,KAAMA,EACNC,QAASA,EACTyC,KAAMA,EACNvB,gBAAiBA,EACjBjB,WAAYA,EACZC,gBAAiBA,EACjBC,YAAaA,EACbE,gBAAiBA,IAEnBK,EAAC4H,GACCzI,OAAQkJ,EACRjJ,OAAQ8I,EACR7I,KAAM8I,EACNpG,KAAMA,EACNxC,WAAY6I,EACZ5H,gBAAiBA,EACjBhB,gBAAiBA,EACjBC,YAAaA,EACbE,gBAAiBA,IAEhB2I,EAUAtI,kBACEgI,IAVDhI,EAAC0J,GACCC,iCACAC,uBACAC,cA7CO,WAAa9E,QAAQD,MAAM,iBA8ClCgF,QA5CI,CACdC,WAAY,IACZC,YAAa,GACbC,UAAW,OACXC,aAAc,SACdC,YAAa,IACbC,KAAM,yBACNC,aAAc,IACdC,UAAW,iBAsCFtC,ODtEbJ,EAAalE,UAAY,CACvBtE,OAAQuE,EAAUE,OAClBxE,KAAMsE,EAAUE,OAChB9B,KAAM4B,EAAUG,MAAM,CAAC,OAAQ,QAAS,SAAU,QAAS,WAC3DvE,WAAYoE,EAAUE,OACtBrD,gBAAiBmD,EAAUE,OAC3BrE,gBAAiBmE,EAAUE,OAC3BpE,YAAakE,EAAUE,OACvBlE,gBAAiBgE,EAAUE,QAG7B+D,EAAa7D,aAAe,CAC1B3E,OAAQ,4BACRC,KAAM,kDACN0C,KAAM,SACNxC,WAAY,cACZiB,gBAAiB,QACjBhB,gBAAiB,QACjBC,YAAa,UACbE,gBAAiB,wBGzCN4K,EAAW,SAACC,UACvBA,GAAwB,iBAATA,IAAsBC,MAAMC,QAAQF,IAUxCG,EAAY,SAAZA,EAAaC,OAAWC,6BACnC,IAAKA,EAAQtB,OACX,OAAOqB,EAGT,IAAME,OAAcF,GAiBpB,OAhBAC,EAAQE,QAAQ,SAACC,GACXT,EAASS,IACXC,OAAOC,KAAKF,GAAQD,QAAQ,SAACI,GAKvBL,EAAOK,GAJPZ,EAASS,EAAOG,IACbL,EAAOK,GAGIR,EAAUG,EAAOK,GAAMH,EAAOG,SAFzBH,EAAOG,IAKdH,EAAOG,OAMtBL,GC7BHM,EAAe,CACnBC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTC,WAAY,MAKd,SAASC,EAAQC,EAAOC,GACtB,MAGIA,EAFFC,QAAWP,IAAAA,MAAOC,IAAAA,OAAQC,IAAAA,QAASC,IAAAA,WAIrC,OAFIG,EADFE,MAIA,IAAK,SACH,YACKH,GACHL,MAAAA,EACAE,QAAAA,EACAC,WAAAA,IAEJ,IAAK,oBACH,YACKE,GACHJ,OAAAA,IAEJ,QACE,UAAUQ,OAIhB,IAAMC,EAAe,CACnBC,KAAM,KACNC,cAAe,KACfC,MAAO,CACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GACRC,QAAS,KAEXC,aAAc,EACdC,iBAAkB,EAClBC,sBAAuB,GACvBC,eAAe,EACfC,kBAAmB,EACnBC,kBAAkB,EAClBC,YAAa,KACbC,WAAW,EACXC,gBAAiB,EACjBC,aAAc,GACdC,oBAAgBC,EAChBC,gBAAiB,IAGbC,EAAe,SAACC,GACpB,IA8BIC,IAdA3C,EAAUoB,EAAcsB,GAf1BrB,IAAAA,KACAC,IAAAA,cACOsB,IAAPrB,MACAK,IAAAA,aACAC,IAAAA,iBACAC,IAAAA,sBACAC,IAAAA,cACAK,IAAAA,eACAJ,IAAAA,kBACAC,IAAAA,iBACAC,IAAAA,YACAG,IAAAA,aACAC,IAAAA,eACAH,IAAAA,UACAK,IAAAA,gBAGIK,EAAaC,GAAO,KACAC,EAAWjC,EAASL,GAAvCM,OAAOiC,OAENtC,EAAuCK,EAAvCL,MAAOC,EAAgCI,EAAhCJ,OAAQC,EAAwBG,EAAxBH,QAASC,EAAeE,EAAfF,WAExB7D,GAAwBlE,EAAW1E,IAAkB,IAArD4I,OAEFiG,EAAUH,EAAO,MAEjBvB,EAAQuB,EAAOF,GAKU,iBAApBJ,EACTG,EAAY,CACVO,WAAY,gBACZC,cAAeX,EAAgBY,aAExBZ,EACTG,EAAY,CACVO,WAAY,gBACZC,cAAe,KAEPX,IACVG,EAAY,CACVO,WAAY,YACZC,cAAe,KAInB,IAAME,EAAgBC,EAAY,WAChC,IAAMC,EAAQ,CACZC,MAAO,CAAEC,MAAO,kBAGlB,GAAInC,EAAe,CACjB,IAAMoC,EAAiBpC,EAWvB,OAVID,GAAQA,EAAK,KACfqC,EAAeC,UAAU,GAAGC,KAAO,CACjCA,KAAMvC,EAAK,KAGXA,GAAQA,EAAK,KACfqC,EAAeG,YAAY,GAAGD,KAAKE,WAAa,CAACzC,EAAK,KACxDkC,EAAMC,MAAMC,MAAQ,YACpBF,EAAMjC,cAAgBoC,EAEfH,EAET,IAAMQ,EAA0BjC,GAAyB,GACnDkC,IAA6BlC,EAC/BmC,EAAY,EAEVJ,EAAcxC,EACjB7C,OAAO,SAAC0F,EAAKlG,GACZ,IAAMmG,EACY,iBAARD,IAAqBA,EAAIE,WAAW,MAC5B,iBAARF,GAAoBA,EAAIN,MAAQM,EAAIN,KAAKE,YACjC,iBAARI,GACNA,EAAIG,YACJH,EAAIT,OACU,cAAdS,EAAIT,OACU,iBAARS,IAAqBA,EAAII,OAAOF,WAAW,KAOrD,OALID,IAAgBH,IAClBD,EAAwB/F,GAAKiG,EAC7BA,GAAa,GAGRE,IAERI,IAAI,SAACL,GACJ,MAAmB,iBAARA,EACF,CACLN,KAAM,CACJE,WAAY,CAACI,GACbM,eAAgB,CACd,CACE5C,aAAAA,EACAC,iBAAAA,KAIN4C,kBAAkB,EAClBxC,kBAAkB,EAClByC,kBAAkB,GAGH,iBAARR,GAAqBA,EAAIG,WAiDjB,iBAARH,GAAoBA,EAAIG,WAC1B,CACLA,WAAYH,EAAIG,WAChBZ,MAAOS,EAAIT,MACXjB,gBAAiBG,EACjBgC,iBACsBpC,IAApBC,EACIA,EAAgBmC,YAChB,SACNC,sBAAuB,CACrB,CAEE1C,YAAagC,EAAIW,sBACjBR,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIc,gBACjBX,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIe,gBACjBZ,WAAY,GACZS,YAAY,EACZC,GAAI,eAGRN,kBAAkBP,EAAIO,kBAClBP,EAAIO,iBAERxC,kBAAkB,EAClByC,kBAAkB,GAIfR,EAxFE,CACLN,KAAM,CACJE,WAAY,CAACI,EAAII,QACjBY,aAAc,CAAChB,EAAIiB,QACnBX,eAAgBN,EAAIM,eAChB,CAACN,EAAIM,gBACL,CACE,CACE3C,iBAAAA,EACAD,aAAAA,KAIVY,gBAAiBG,EACjBgC,iBACsBpC,IAApBC,EACIA,EAAgBmC,YAChB,SACNC,sBAAuB,CACrB,CAEE1C,YAAagC,EAAIW,sBACjBR,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIc,gBACjBX,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIe,gBACjBZ,WAAY,GACZS,YAAY,EACZC,GAAI,eAGRN,kBAAkBP,EAAIO,kBAClBP,EAAIO,iBAERxC,kBAAkB,EAClByC,kBAAkB,KA8CpBf,EAAYtC,EACf7C,OAAO,SAAC0F,EAAKlG,GACZ,IAAMoH,EACY,iBAARlB,GAAoBA,EAAIE,WAAW,MAC3B,iBAARF,GAAoBA,EAAIN,MAAQM,EAAIN,KAAKA,MACjC,iBAARM,GACNA,EAAIG,YACJH,EAAIT,OACU,YAAdS,EAAIT,OACU,iBAARS,GAAoBA,EAAII,OAAOF,WAAW,KAMpD,OALIgB,IAAcpB,IAChBD,EAAwB/F,GAAKiG,EAC7BA,GAAa,GAGRmB,IAERb,IAAI,SAACL,GACJ,MAAmB,iBAARA,EACF,CACLN,KAAM,CACJA,KAAMM,EACNmB,WAAYnB,EAAImB,YAElBC,QAAS,CACPlD,eAAAA,EACAJ,kBAAAA,EACAE,YAAAA,EACAD,iBAAAA,IAIa,iBAARiC,EACF,CACLN,KAAM,CACJA,KAAMM,EAAII,OACVa,OAAQjB,EAAIiB,OACZE,WAAY,CACV5B,MAAOS,EAAIqB,UAAY,IACvBC,SAAU,EACVC,KAAMvB,EAAIwB,QACVC,KAAM,IACNC,MAAO,MAGXN,QAAS,CACPlD,eAAAA,EACAJ,kBAAAA,EACAE,YAAAA,EACAD,iBAAAA,GAEF2C,sBAAuB,CACrB,CAEE1C,YAAagC,EAAIW,sBACjBR,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIc,gBACjBX,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIe,gBACjBZ,WAAY,GACZS,YAAY,EACZC,GAAI,eAGRc,WAAY3B,EAAI2B,WAChBC,YAAa5B,EAAI4B,YACjBC,OAAQ7B,EAAI6B,OACZC,WAAY9B,EAAI8B,WAChBC,aAAc/B,EAAI+B,cAIf/B,IAaX,OAVAX,EAAMjC,cAAgB,CACpBuC,YAAAA,EACAF,UAAAA,EACA7B,sBAAAA,EACAC,cAAAA,EACAE,iBAAAA,EACAI,aAAAA,EACAC,eAAAA,GAGKiB,GACN,CACDlC,EACAa,EACAZ,EACAQ,EACAF,EACAI,EACAH,EACAI,EACAF,IAGImE,EAAY5C,EAAY,kBAAML,EAAQkD,QAAQD,aAAa,IAE3DE,EAAU9C,wCACWL,EAAQkD,QAAQE,iBACvC,iBACA,CAAC9E,EAAM4E,yBAFHG,GAKN,OAAOA,EAAW,KANO,oCAOxB,IAEGC,EAAiBjD,EACrB,iCACE,IAAQ5B,EAAWH,EAAM4E,QAAjBzE,OACF8E,EAAS,CACbhF,KAAM,EACNC,MAAO,EACPC,OAAAA,EACAC,QAAS8E,KAAKC,MAAM,IAAQhF,IANd,uBAQSuB,EAAQkD,QAAQQ,wBACvC,iBACA,CAACH,IACA,EACD,qBAJIF,GAON,OAAOA,EAAW,KAfpB,qCAiBA,IAGIM,EAAStD,WACNuD,8BACkBX,mBAAjBY,0BACeV,mBAAfW,GACN,GAAIA,GAAUlE,EAAWsD,QAAS,CAChC,IAAMa,EAAcD,EAAOE,QAAQzI,OACjC,SAAC0I,SAA0B,MAAlBA,EAAI,GAAGC,SAGdN,GACFA,EAAYtC,IAAI,SAAC6C,EAAGpJ,GACd8I,EAASO,WAAWC,aAAatJ,KACnC8I,EAASO,WAAWC,aAAatJ,GAAG6H,WAAauB,EAAEvB,WACnDiB,EAASO,WAAWC,aAAatJ,GAAG8H,YAAcsB,EAAEtB,YACpDgB,EAASO,WAAWC,aAAatJ,GAAG+H,OAASqB,EAAErB,OAC/Ce,EAASO,WAAWC,aAAatJ,GAAGgI,WAAaoB,EAAEpB,WACnDc,EAASO,WAAWC,aAAatJ,GAAGiI,aAAemB,EAAEnB,gBAO3DjD,EAAS,CACP9B,KAAM,SACND,QAAS,CACPP,MAAOqG,EACPnG,QAASkG,EACTjG,WAAYmG,UAGPnE,EAAWsD,SACpBnD,EAAS,CACP9B,KAAM,SACND,QAAS,CACPP,MAAOqG,EACPnG,QAASkG,KAnCM,oBAuCjB3E,yBACoBoE,mBAAhBgB,GACF1E,EAAWsD,SACbnD,EAAS,CACP9B,KAAM,oBACND,QAAS,CAAEN,OAAQ4G,uDA7CH,oCAkDxB,CAACnB,EAASF,EAAW/D,EAAWoE,IAG5BiB,EAAalE,EACjB,SAACmE,GACClG,EAAM4E,aACD5E,EAAM4E,QACNsB,GAELb,KAEF,CAACA,IAGGc,EAAkBpE,EACtB,kBAAML,EAAQkD,QAAQuB,gBAAgB,CAAC,oBACvC,EAAC,IAGGC,EAAgBrE,EACpB,SAACsE,UAAY3E,EAAQkD,QAAQwB,cAAcC,IAC3C,IAGIC,EAASvE,EACb,SAACwE,EAAad,EAAae,mBAAAA,IAAAA,GAAS,GAClC9E,EAAQkD,QAAQ6B,sBACd,iBACAF,EACAd,EACAe,IAEJ,IAaIE,EAAe3E,EACnB,SAAC4E,UAAYjF,EAAQkD,QAAQ8B,aAAaC,IAC1C,IAmBF,OAhBAvJ,EAAU,WACR,GAAK3B,IACDiG,EAAQkD,QAFE,IAIZ,IAAM5C,EAAQF,IADH,uBAEQrG,iBAAbmL,0BACkBA,EAAKC,oBAAoB7E,qBAAjDN,EAAQkD,UACRlD,EAAQkD,QAAQzK,GAAG,UAAW,WAC5BkL,EAAOrD,EAAMjC,cAAcqC,aAE7BiD,EAAOrD,EAAMjC,cAAcqC,eAVf,6BAYb,CAACN,EAAerG,EAAQ4J,IAE3BjI,EAAU,oCAAakE,EAAWsD,SAAU,IAAQ,IAE7C,CACLuB,gBAAAA,EACAC,cAAAA,EACA/G,QAAAA,EACAF,MAAAA,EACAC,OAAAA,EACA6G,WAAAA,EACA3G,WAAAA,EACAgH,OAAAA,EACAI,aAAAA,ICzgBExH,EAAe,CACnB0H,KAAM,KACNlF,QAAS,KACTvC,MAAO,KACP2H,SAAU,KACVxH,WAAY,KACZyH,aAAc,MAGhB,SAASxH,EAAQC,EAAOC,GACtB,MAGIA,EAFFC,QAAWP,IAAAA,MAAO2H,IAAAA,SAAUxH,IAAAA,WAAYyH,IAAAA,aAAcH,IAAAA,KAGxD,OADInH,EADFE,MAGA,IAAK,SACH,YACKH,GACHL,MAAAA,EACA2H,SAAAA,EACAxH,WAAAA,EACAyH,aAAAA,IAEJ,IAAK,OACH,YACKvH,GACHoH,KAAAA,IAEJ,QACE,UAAUhH,OAIhB,IAAMC,EAAe,CACnBmH,gBAAiB,EACjB3G,aAAc,EACdC,iBAAkB,EAClB2G,UAAW,KACXC,MAAO,KACPC,eAAgB,KAChBnH,MAAO,CACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,MAIPgH,EAAU,SAACjG,GACf,MAOI1C,EAAUoB,EAAcsB,GANnBE,IAAPrB,MACAiH,IAAAA,UACAE,IAAAA,eACA9G,IAAAA,aACAC,IAAAA,iBACA0G,IAAAA,gBAGMvL,GAAwBlE,EAAW1E,IAAkB,IAArD4I,OAEF6F,EAAaC,GAAO,KACAC,EAAWjC,EAASL,GAAvCM,OAAOiC,OAENqF,EAAuCtH,EAAvCsH,SAAUxH,EAA6BE,EAA7BF,WAAYyH,EAAiBvH,EAAjBuH,aAExBrF,EAAUH,EAAO,MACjBvB,EAAQuB,EAAOF,GAGfS,EAAgBC,EACpB,SAACsF,YAAAA,IAAAA,EAAgB,GACf,IAAMrF,EAAQ,CAAEC,MAAO,CAAEC,MAAO,kBAChC,GAAIiF,EACFnF,EAAMmF,eAAiBA,MAClB,CACL,IAAM7E,EAAc2E,EACjBhK,OACC,SAAC0F,SACiB,iBAARA,IAAqBA,EAAIE,WAAW,MAC5B,iBAARF,GAAoBA,EAAIN,MAAQM,EAAIN,KAAKE,YACjC,iBAARI,GACNA,EAAIG,YACJH,EAAIT,OACU,cAAdS,EAAIT,QAETc,IAAI,SAACL,GACJ,MAAmB,iBAARA,EACF,CACLN,KAAM,CACJE,WAAY,CAACI,GACbM,eAAgB,CAAC,CAAE3C,iBAAAA,EAAkBD,aAAAA,MAKpCsC,IASXX,EAAMmF,oBAPa,CACjBrE,WAC0B,iBAAjBmE,EAAU,IAAmBA,EAAU,GAAGnE,WAC7CmE,EAAU,GAAGnE,WACb,IAEKR,EAAY+E,IAIvBC,mBAAmB,EACnBC,iBAAkB,CAAEC,qBAAsBR,KAI9C,OAAOhF,GAET,CAACgF,EAAiBC,EAAWE,EAAgB9G,EAAcC,IAIvDuE,EAAU9C,wCACWL,EAAQkD,QAAQ6C,kBACvC,kBACA,CAACzH,EAAM4E,yBAFHG,GAIN,OAAOA,EAAW,KALO,oCAMxB,IAEG2C,EAAgB3F,WAAmByD,OACvC,IAAKsB,EAAU,CAEb,IAAKtB,EAAQ,uBAAO,MACpB,IAAImC,EAAY,GAChBnC,EAAOE,QAAQ1C,IAAI,SAAC6C,EAAGpJ,GACrBkL,EAAUhL,KAAK,CACbsC,IAAK4G,EAAE,GAAGU,YACVqB,UAA4B,IAAf/B,EAAE,GAAGgC,MAAwBhC,EAAE,GAAGgC,MAAQ,YACvDC,OAAQjC,EAAE,GAAGkC,QACbvI,MAAOqG,EAAE,GAAGD,OACZrI,WAA6B,IAAfsI,EAAE,GAAGgC,MAAwBhC,EAAE,GAAGgC,MAAQ,YACxDX,WAA6B,IAAfrB,EAAE,GAAGgC,MAAwBhC,EAAE,GAAGgC,MAAQ,gBAI5D,IAAMpC,EAAckC,GAAaA,EAAU1K,OAAO,SAAA0I,SAAqB,MAAdA,EAAInG,QAEvDwI,EAASvC,GAAeA,EAAYzC,IAAI,SAAA6C,UAAKA,EAAE5G,MAErD,uBAAO,CAAE+I,OAAAA,EAAQvC,YAAAA,EAAakC,UAAAA,IApBkB,yBAAnB,oCAsB9B,CAACb,IA6BEzB,EAAStD,wCACQ8C,mBAAfW,0BAC2CkC,EAAclC,yBAAlCmC,IAAAA,UACzBnC,GAAUlE,EAAWsD,QAGvBnD,EAAS,CACP9B,KAAM,SACND,QAAS,CACPoH,SAAUa,EACVrI,aARUmG,YASVsB,eATEiB,UAYG1G,EAAWsD,SACpBnD,EAAS,CACP9B,KAAM,SACND,QAAS,CACPoH,SAAUa,SAlBQ,oCAsBvB,CAAC9C,EAAS6C,IAEPzB,EAAalE,EACjB,SAACmE,GACClG,EAAM4E,aAAe5E,EAAM4E,QAAYsB,GAEvCb,KAEF,CAACA,IAcGiB,EAASvE,EACb,SAACwE,EAAaC,EAAeyB,mBAAfzB,IAAAA,GAAS,YAAMyB,IAAAA,GAAa,GACxCvG,EAAQkD,QAAQsD,uBACd,kBACA3B,EACAC,EACAyB,IAEJ,IAGIE,EAAsBpG,EAC1B,SAACpK,UAAW+J,EAAQkD,QAAQuD,oBAAoB,kBAAmBxQ,IACnE,IAGIyQ,EAAyBrG,EAC7B,SAACkG,mBAAAA,IAAAA,GAAa,GACZvG,EAAQkD,QAAQwD,uBACd,mBACA,EACAH,IAEJ,IAGIvB,EAAe3E,EACnB,SAAC4E,UAAYjF,EAAQkD,QAAQ8B,aAAaC,IAC1C,IAGI0B,EAAkBtG,EACtB,kBAAML,EAAQkD,QAAQyD,gBAAgB,oBACtC,IAoBF,OAjBAjL,EAAU,WACR,GAAK3B,IAAUiG,EAAQkD,QADT,IAGZ,IAAM5C,EAAQF,IADH,uBAEQrG,iBAAbmL,0BACkBA,EAAKC,oBAAoB7E,qBAAjDN,EAAQkD,UAEJtD,EAAWsD,SAASnD,EAAS,CAAE9B,KAAM,OAAQD,QAAS,CAAEkH,KAAAA,KAC5DlF,EAAQkD,QAAQzK,GAAG,UAAW,WAC5BkL,MAEFA,QAXY,6BAab,CAACvD,EAAerG,EAAQ4J,IAE3BjI,EAAU,oCAAakE,EAAWsD,SAAU,IAAQ,IAE7C,CACLkC,SAAAA,EACAb,WAAAA,EACAK,OAAAA,EACAH,sDAlEM3G,EAAMoH,KAAK0B,YAAW,2CACtB5G,EAAQkD,QAAQuB,gBAAgB,CAAC,0CAHpB,oCAqEnBC,uBA/D2BC,8BAErB3E,EAAQkD,QAAQwB,cAAcC,uBAFnB,oCAgEjB8B,oBAAAA,EACAC,uBAAAA,EACA1B,aAAAA,EACApH,WAAAA,EACAyH,aAAAA,EACAsB,gBAAAA,EACAE,eAAgB,CACdF,gBAAAA,EACA/I,WAAAA,EACAgH,OAAAA,KCxIOkC,EAAkB,SAAC1C,UAC9BA,EAAWC,aAAa/C,IAAI,SAAC6C,EAAGpJ,GAG9B,OAAOoJ,EAAE4C,kBAMAC,EAAoB,SAAC5C,UAChCA,EAAW6C,eAAe3F,IAAI,SAAC6C,EAAGpJ,UAAMoJ,EAAE4C,kBAU/BG,EAAY,SAACvJ,GAGxB,MACEA,EAAQyG,YAAczG,EAAQwJ,YADxBF,IAAAA,eAAgB5C,IAAAA,aAGlB+C,EAAW,YAEOvK,MAAMC,QAAQmK,GAChCA,EACA,CAACA,IACW9J,QAAQ,SAACM,GACjBA,EAAM4J,QACRlQ,QAAQD,MAAM,gGAAiGuG,EAAM4J,WAKvHC,EAAY,WAChBjD,EAAalH,QAAQ,SAACM,GAEjB8J,MAAM9J,EAAM+J,OAASD,MAAM9J,EAAMgK,OAElCtQ,QAAQD,MAAM,yEAKhB+P,GAAkB5C,GACpB+C,IACAE,KACSL,IAAmB5C,EAC5B+C,KACUH,GAAkB5C,GAC5BiD,KC8VG,SAASI,EAAOjW,EAAM4G,GAC5B,IACC,IAAIC,EAAS7G,IACZ,MAAMuH,GACP,OAAOX,EAAQW,GAEhB,OAAIV,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,EA1iBR,IAAMkF,EAAe,CACnBC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTC,WAAY,MAkBP,WAAiB+J,EAAM7J,EAAOjC,GACpC,IAAK8L,EAAKC,EAAG,CACZ,GAAI/L,eAAwB,CAC3B,IAAIA,EAAM+L,EAOT,YADA/L,EAAMgM,EAAIC,EAAQC,KAAK,KAAMJ,EAAM7J,IALvB,EAARA,IACHA,EAAQjC,EAAM+L,GAEf/L,EAAQA,EAAMmM,EAMhB,GAAInM,GAASA,EAAM5C,KAElB,YADA4C,EAAM5C,KAAK6O,EAAQC,KAAK,KAAMJ,EAAM7J,GAAQgK,EAAQC,KAAK,KAAMJ,EAAM,IAGtEA,EAAKC,EAAI9J,EACT6J,EAAKK,EAAInM,EACT,IAAMoM,EAAWN,EAAKE,EAClBI,GACHA,EAASN,IA3DL,MAA4B,WAClC,cAiCA,OAhCAO,EAAMC,UAAUlP,KAAO,SAASmP,EAAarR,GAC5C,IAAMuB,EAAS,MACTwF,EAAQuK,KAAKT,EACnB,GAAI9J,EAAO,CACV,IAAMwK,EAAmB,EAARxK,EAAYsK,EAAcrR,EAC3C,GAAIuR,EAAU,CACb,IACCR,EAAQxP,EAAQ,EAAGgQ,EAASD,KAAKL,IAChC,MAAOhP,GACR8O,EAAQxP,EAAQ,EAAGU,GAEpB,OAAOV,EAEP,YAiBF,OAdA+P,KAAKR,EAAI,SAASU,GACjB,IACC,IAAM1M,EAAQ0M,EAAMP,EACN,EAAVO,EAAMX,EACTE,EAAQxP,EAAQ,EAAG8P,EAAcA,EAAYvM,GAASA,GAC5C9E,EACV+Q,EAAQxP,EAAQ,EAAGvB,EAAW8E,IAE9BiM,EAAQxP,EAAQ,EAAGuD,GAEnB,MAAO7C,GACR8O,EAAQxP,EAAQ,EAAGU,KAGdV,KAhC0B,GAgE5B,WAAwBkQ,GAC9B,OAAOA,gBAA0C,EAAbA,EAASZ,EAxC9C,SAAS/J,EAAQC,EAAOC,GACtB,MAiBIA,EAhBFC,QACEyK,IAAAA,MACAC,IAAAA,SACAC,IAAAA,QACAlL,IAAAA,MACAmL,IAAAA,MACAC,IAAAA,QACAC,IAAAA,SACAC,IAAAA,UACAC,IAAAA,SACAC,IAAAA,SACAvL,IAAAA,OACAC,IAAAA,QACAC,IAAAA,WAKJ,OAFIG,EADFE,MAIA,IAAK,SACH,YACKH,GACH2K,MAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAlL,MAAAA,EACAmL,MAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,UAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAtL,QAAAA,EACAC,WAAAA,IAEJ,IAAK,oBACH,YACKE,GACHJ,OAAAA,IAEJ,QACE,UAAUQ,OAIhB,IAAMC,EAAe,CACnBC,KAAM,GACN8K,OAAQ,KACR7K,cAAe,KACfC,MAAO,CACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GACRC,QAAS,KAEXC,aAAc,EACdC,iBAAkB,EAClBC,sBAAuB,GACvBC,eAAe,EACfC,kBAAmB,EACnBC,kBAAkB,EAClBC,YAAa,KACbC,WAAW,EACXC,gBAAiB,EACjBC,aAAc,GACdC,oBAAgBC,EAChB6J,OAAQ,KACRC,UAAW,KACXC,SAAU,KACV9J,gBAAiB,IAGb+J,EAAU,SAAC7J,GACf,IAqDIC,IAjCA3C,EAAUoB,EAAcsB,GAnB1BrB,IAAAA,KACA8K,IAAAA,OACAC,IAAAA,OACAC,IAAAA,UACAC,IAAAA,SACAhL,IAAAA,cACOsB,IAAPrB,MACAK,IAAAA,aACAC,IAAAA,iBACAC,IAAAA,sBACAC,IAAAA,cACAK,IAAAA,eACAJ,IAAAA,kBACAC,IAAAA,iBACAC,IAAAA,YACAG,IAAAA,aACAC,IAAAA,eACAH,IAAAA,UACAK,IAAAA,gBAGIK,EAAaC,GAAO,KACAC,EAAWjC,EAASL,GAAvCM,OAAOiC,OAGZ0I,EAaE3K,EAbF2K,MACAC,EAYE5K,EAZF4K,SACAC,EAWE7K,EAXF6K,QACAlL,EAUEK,EAVFL,MACAmL,EASE9K,EATF8K,MACAC,EAQE/K,EARF+K,QACAC,EAOEhL,EAPFgL,SACAC,EAMEjL,EANFiL,UACAC,EAKElL,EALFkL,SACAC,GAIEnL,EAJFmL,SACAvL,GAGEI,EAHFJ,OACAC,GAEEG,EAFFH,QACAC,GACEE,EADFF,WAGM7D,IAAwBlE,EAAW1E,IAAkB,IAArD4I,OAEFiG,GAAUH,EAAO,MAEjBvB,GAAQuB,EAAOF,GAGP4J,GAAYxR,OAEnByR,GAAyBzR,EAASuG,GAAM4E,QAAQxE,YAKxB,iBAApBa,EACTG,EAAY,CACVO,WAAY,gBACZC,cAAeX,EAAgBY,aAExBZ,EACTG,EAAY,CACVO,WAAY,gBACZC,cAAe,KAEPX,IACVG,EAAY,CACVO,WAAY,YACZC,cAAe,KAInB,IAAME,GAAgBC,EAAY,WAChC,IAAMC,EAAQ,CACZC,MAAO,CAAEC,MAAO,kBA6ClB,GA1CI6I,GACFA,EAAS/H,IAAI,SAACmI,SAGZnJ,EAAMmJ,EAAOC,eADMD,EAAOjJ,MAAQiJ,EAAOjJ,MAAQ,oBAEjC,CACZmJ,MAAOF,EAAOE,YAMlBT,IACF5I,EAAMsJ,aAAe,GACrBV,EAAO5H,IAAI,SAACuI,GACV,IAAMC,EAAU,CACdrE,eAAgB,CACdsE,WAAY,IACZ3I,WAAY,GACZT,KAAM,CACJE,WAAY,CAACxD,OAAO2M,OAAOH,GAAM,IACjC5H,aAAc,CAAC5E,OAAOC,KAAKuM,GAAM,IACjCtI,eAAgB,CACd,CACE3C,iBAAkB,KAIxBqL,kBAAmB,CACjB,CACE1L,KAAM,EACNG,QAAS,EACTF,MAAO,EACPC,OAAQ,MAKhB6B,EAAMsJ,aAAa3O,KAAK6O,MAIxBzL,EAAe,CACjB,IAAMoC,EAAiBpC,EAWvB,OAVID,GAAQA,EAAK,KACfqC,EAAeC,UAAU,GAAGC,KAAO,CACjCA,KAAMvC,EAAK,KAGXA,GAAQA,EAAK,KACfqC,EAAeG,YAAY,GAAGD,KAAKE,WAAa,CAACzC,EAAK,KACxDkC,EAAMC,MAAMC,MAAQ,YACpBF,EAAMjC,cAAgBoC,EAEfH,EAET,IAAMQ,EAA0BjC,GAAyB,GACnDkC,IAA6BlC,EAC/BmC,EAAY,EAEVJ,EACJxC,GACAA,EACG7C,OAAO,SAAC0F,EAAKlG,GACZ,IAAMmG,EACY,iBAARD,IAAqBA,EAAIE,WAAW,MAC5B,iBAARF,GAAoBA,EAAIN,MAAQM,EAAIN,KAAKE,YACjC,iBAARI,GACNA,EAAIG,YACJH,EAAIT,OACU,cAAdS,EAAIT,OACU,iBAARS,IAAqBA,EAAII,OAAOF,WAAW,KAOrD,OALID,IAAgBH,IAClBD,EAAwB/F,GAAKiG,EAC7BA,GAAa,GAGRE,IAERI,IAAI,SAACL,GACJ,GAAmB,iBAARA,EACT,MAAO,CACLN,KAAM,CACJE,WAAY,CAACI,GACbM,eAAgB,CACd,CACE5C,aAAAA,EACAC,iBAAAA,KAIN4C,kBAAkB,EAClBxC,kBAAkB,EAClByC,kBAAkB,GAGtB,GAAmB,iBAARR,IAAqBA,EAAIG,WAAY,CAC9C,IAAMO,EAAwB,GAC9B,GAAIV,EAAIU,sBACN,cAAgCtE,OAAO6M,QACrCjJ,EAAIU,sCACH,CAFE,WAGHA,EAAsB1G,KAAK,CACzB6G,QACA7C,iBACAmC,WAAY,GACZS,YAAY,IAKlB,MAAO,CACLlB,KAAM,CACJE,WAAY,CAACI,EAAII,QACjBY,aAAc,CAAChB,EAAIiB,QACnBX,eAAgBN,EAAIM,eAChB,CAACN,EAAIM,gBACL,CACE,CACE3C,iBAAAA,EACAD,aAAAA,KAIVY,gBAAiBG,EACjBgC,iBACsBpC,IAApBC,EACIA,EAAgBmC,YAChB,SACNC,sBAAAA,EACAH,kBAAkBP,EAAIO,kBAClBP,EAAIO,iBAERxC,kBAAkB,EAClByC,kBAAkB,GAGtB,GAAmB,iBAARR,GAAoBA,EAAIG,WAAY,CAC7C,IAAMO,EAAwB,GAC9B,GAAIV,EAAIU,sBACN,cAAgCtE,OAAO6M,QACrCjJ,EAAIU,sCACH,CAFE,WAGHA,EAAsB1G,KAAK,CACzB6G,QACA7C,iBACAmC,WAAY,GACZS,YAAY,IAIlB,MAAO,CACLT,WAAYH,EAAIG,WAChBZ,MAAOS,EAAIT,MACXjB,gBAAiBG,EACjBgC,iBACsBpC,IAApBC,EACIA,EAAgBmC,YAChB,SACNC,sBAAAA,EACAH,kBAAkBP,EAAIO,kBAClBP,EAAIO,iBAERxC,kBAAkB,EAClByC,kBAAkB,GAItB,OAAOR,IAGb,GAAIL,GAAeA,EAAYjF,OAAS,EAAG,CACzC,IAAMmO,EAAU,CACdrE,eAAgB,CACdsE,WAAY,IACZ3I,WAAY,GACZT,KAAM,CACJE,WAAYD,EAAY,GAAGD,KAAKE,WAChCoB,aAAc,CAAC,oBACfV,eAAgB,CACd,CACE3C,iBAAkB,KAIxBqL,kBAAmB,CACjB,CACE1L,KAAM,EACNG,QAAS,EACTF,MAAO,EACPC,OAAQ,WAKkB,IAAvB6B,EAAMsJ,eAA8BtJ,EAAMsJ,aAAe,IAEpEtJ,EAAMsJ,aAAa3O,KAAK6O,GAG1B,IAAMpJ,EACJtC,GACAA,EACG7C,OAAO,SAAC0F,EAAKlG,GACZ,IAAMoH,EACY,iBAARlB,GAAoBA,EAAIE,WAAW,MAC3B,iBAARF,GAAoBA,EAAIN,MAAQM,EAAIN,KAAKA,MACjC,iBAARM,GACNA,EAAIG,YACJH,EAAIT,OACU,YAAdS,EAAIT,OACU,iBAARS,GAAoBA,EAAII,OAAOF,WAAW,KAMpD,OALIgB,IAAcpB,IAChBD,EAAwB/F,GAAKiG,EAC7BA,GAAa,GAGRmB,IAERb,IAAI,SAACL,GACJ,GAAmB,iBAARA,EACT,MAAO,CACLN,KAAM,CACJA,KAAMM,EACNmB,WAAYnB,EAAImB,YAElBC,QAAS,CACPlD,eAAAA,EACAJ,kBAAAA,EACAE,YAAAA,EACAD,iBAAAA,IAIN,GAAmB,iBAARiC,EAAkB,CAC3B,IAAMU,EAAwB,GAC9B,GAAIV,EAAIU,sBACN,cAAgCtE,OAAO6M,QACrCjJ,EAAIU,sCACH,CAFE,WAGHA,EAAsB1G,KAAK,CACzB6G,QACA7C,iBACAmC,WAAY,GACZS,YAAY,IAIlB,MAAO,CACLlB,KAAM,CACJA,KAAMM,EAAII,OACVa,OAAQjB,EAAIiB,OACZE,WAAY,CACV5B,MAAOS,EAAIqB,UAAY,IACvBC,SAAU,EACVC,KAAMvB,EAAIwB,QACVC,KAAM,IACNC,MAAO,MAGXN,QAAS,CACPlD,eAAAA,EACAJ,kBAAAA,EACAE,YAAAA,EACAD,iBAAAA,GAEF2C,sBAAAA,GAIJ,OAAOV,IAcb,OAXAX,EAAMjC,cAAgB,CACpBuC,YAAAA,EACAF,UAAAA,EACA7B,sBAAAA,EACAC,cAAAA,EACAE,iBAAAA,EACAI,aAAAA,EACAC,eAAAA,EACA8J,OAAAA,GAGK7I,GACN,CACDlC,EACA+K,EACAlK,EACAZ,EACAQ,EACAF,EACAI,EACAH,EACAI,EACAF,IAGImE,GAAY5C,EAAY,kBAAML,GAAQkD,QAAQD,aAAa,IAE3DE,GAAU9C,4EAEaL,GAAQkD,QAAQE,iBACvC,iBACA,CAAC9E,GAAM4E,yBAFHG,GAIN,OAAOA,EAAW,eACXnM,GACPqS,GAASrS,MARc,oCAUxB,IAEGiT,GAAmB9J,WAAmB+J,OAC1C,IAAMC,EAAWrK,GAAQkD,QACrBoH,EAAShM,GAAM4E,QACfG,EAAa,KACbW,EAAU,GAJ8C,iDAsB1D,MAAO,CAAEuG,OAHMlH,EAAW,GAAGkH,OAGZvG,QAAAA,EAASwG,MAFZnH,EAAW,GAAGmH,OAbvB,IAAIzP,EAAI,IAnPZ,SAAc0P,EAAM9G,EAAQlS,GAElC,IADA,IAAIiZ,IACK,CACR,IAAIC,EAAiBF,IAIrB,GAHIG,EAAeD,KAClBA,EAAiBA,EAAe3C,IAE5B2C,EACJ,OAAOrS,EAER,GAAIqS,EAAe1R,KAAM,CACxByR,EAAQ,EACR,MAED,IAAIpS,EAAS7G,IACb,GAAI6G,GAAUA,EAAOW,KAAM,CAC1B,IAAI2R,EAAetS,GAEZ,CACNoS,EAAQ,EACR,MAHApS,EAASA,EAAOsP,EAMlB,GAAIjE,EAAQ,CACX,IAAIkH,EAAclH,IAClB,GAAIkH,GAAeA,EAAY5R,OAAS2R,EAAeC,GAAc,CACpEH,EAAQ,EACR,QAIH,IAAI/C,EAAO,MACP7P,EAASgQ,EAAQC,KAAK,KAAMJ,EAAM,GAEtC,OADW,IAAV+C,EAAcC,EAAe1R,KAAK6R,GAA8B,IAAVJ,EAAcpS,EAAOW,KAAK8R,GAAoBF,EAAY5R,KAAK+R,IAAqB/R,UAAK,EAAQnB,GACjJ6P,EACP,SAASoD,EAAiBlP,GACzBvD,EAASuD,EACT,EAAG,CACF,GAAI8H,IACHkH,EAAclH,MACKkH,EAAY5R,OAAS2R,EAAeC,GAEtD,YADAA,EAAY5R,KAAK+R,GAAoB/R,UAAK,EAAQnB,GAKpD,KADA6S,EAAiBF,MACOG,EAAeD,KAAoBA,EAAe3C,EAEzE,YADAF,EAAQH,EAAM,EAAGrP,GAGlB,GAAIqS,EAAe1R,KAElB,YADA0R,EAAe1R,KAAK6R,GAAkB7R,UAAK,EAAQnB,GAIhD8S,EADJtS,EAAS7G,OAER6G,EAASA,EAAO0P,UAER1P,IAAWA,EAAOW,MAC5BX,EAAOW,KAAK8R,GAAkB9R,UAAK,EAAQnB,GAE5C,SAASgT,EAAiBH,GACrBA,GACHrS,EAAS7G,MACK6G,EAAOW,KACpBX,EAAOW,KAAK8R,GAAkB9R,UAAK,EAAQnB,GAE3CiT,EAAiBzS,GAGlBwP,EAAQH,EAAM,EAAGrP,GAGnB,SAAS0S,KACJL,EAAiBF,KAChBE,EAAe1R,KAClB0R,EAAe1R,KAAK6R,GAAkB7R,UAAK,EAAQnB,GAEnDgT,EAAiBH,GAGlB7C,EAAQH,EAAM,EAAGrP,uBAkKEyC,EAAIqP,qBAAerP,gBAAK,OACtCuP,OACKA,EACA,CAAE/L,KAAU,IAAJxD,oBAEMsP,EAASjH,iBAAiB,iBAAkB,CAC7DkH,sBAGFtG,EAAQ/I,WAAR+I,GAJAX,KAI2B,GAAGW,sDAOzB9M,GACPqS,GAASrS,MAxBuB,oCA0BjC,IAEG+T,GAAmB5K,WAAmBtF,8BAC7BiF,GAAQkD,QAAQ6C,mCACVhL,oBACjB,CAACuD,GAAM4E,WAHyB,qCAO9BgI,GAAc7K,WAAmB8K,OACrC,OAAKA,EAAOvB,6BACC/R,QAAQuT,IACnBD,EAAOvB,aAAatI,aAAWuI,EAAM9O,8BAAMkQ,GAAiBlQ,6DAHjC,oCAK5B,IAEGsQ,GAAahL,WAAmB8K,OACpC,uBAAgD,IAA5CA,EAAO/G,WAAW6C,eAAetL,OAAqB,KACnDwP,EAAO/G,WAAW6C,eAAe,GAAGF,gBAFf,oCAG3B,IAEGuE,GAAcjL,WAAmB8K,OACrC,uBAA8C,IAA1CA,EAAO/G,WAAWC,aAAa1I,OAAqB,KACjDwP,EAAO/G,WAAWC,aAAa,GAAG0C,gBAFZ,oCAG5B,IAEGzD,GAAiBjD,EACrB,iCACE,IAAQ5B,EAAWH,GAAM4E,QAAjBzE,OACF8E,EAAS,CACbhF,KAAM,EACNC,MAAO,EACPC,OAAAA,EACAC,QAAS8E,KAAKC,MAAM,IAAQhF,IANd,uBAQSuB,GAAQkD,QAAQQ,wBACvC,iBACA,CAACH,IACA,EACD,qBAJIF,GAON,OAAOA,EAAW,KAfpB,qCAiBA,IAGI2C,GAAgB3F,WAAmB8K,EAAQI,OAC/C,GAC+C,IAA5CJ,EAAO/G,WAAW6C,eAAetL,QACU,IAA1CwP,EAAO/G,WAAWC,aAAa1I,SAChC4P,EAED,yBAEF,IAAM3C,EACwC,IAA5CuC,EAAO/G,WAAW6C,eAAetL,gBD5jBrC8B,EACA2G,EAEAhG,GAEA,IAAMoN,OACWlM,IAAf8E,EAA2BA,EAAW6C,eAAetL,OAAS,EAI1D8P,EAAe3E,EAAgB1C,GAC/BsH,EAAiB1E,EAAkB5C,GAkEzC,OAhEwB3G,EAAMuG,QAAQ1C,IAAI,SAAC6C,EAAGpJ,GAC5C,IAAIwQ,EAAO,GACPI,EAAe,GA2DnB,OA1DAxH,EAAEhH,QAAQ,SAACP,EAAMgP,WACf,GAAIA,EAAQJ,EAAiB,CAC3B,IAAMK,EAAU1H,EAAEyH,GAAOE,eACF,IAAZD,GACKA,EAAQE,QAEhB5O,QAAQ,SAAC6O,EAAmBC,QACA3M,IAA5B0M,EAAkB7F,QACpBwF,EACEvH,EAAW6C,eAAe2E,GAAOM,cAAcD,GAAWnK,IAE/B,QAA3BkK,EAAkBG,KACdH,EAAkBG,KAClBH,EAAkB7F,aAGzB,CACL,IAAM0F,EAAU1H,EAAEyH,GAAOE,eACF,IAAZD,GACKA,EAAQE,QAEhB5O,QAAQ,SAAC6O,EAAmBC,QACA3M,IAA5B0M,EAAkB7F,QACpBwF,EACEvH,EAAWC,aAAauH,IAASJ,GAAiBU,cAChDD,GACAnK,IAEyB,QAA3BkK,EAAkBG,KACdH,EAAkBG,KAClBH,EAAkB7F,SAKhC,IAAMiG,EACJR,EAAQJ,UAEDE,EAAeE,IAASzH,EAAEyH,GAAOzF,sBACV,IAAVyF,EAAcA,EAAQ,KAAOzH,EAAEyH,GAAO/G,cACpDtH,IAAKxC,IAELyK,MAAOrB,EAAEyH,GAAOzF,iBAGfsF,EAAaG,EAAQJ,IACpBpN,EAAKwN,GAAOxJ,YACZhE,EAAKwN,GAAOtJ,UACZlE,EAAKwN,GAAOnJ,QACR0B,EAAEyH,GAAOzF,MACS,QAAlBhC,EAAEyH,GAAOO,KACThI,EAAEyH,GAAOO,KACT,IACN5O,IAAKxC,KAGbwQ,OAAYA,EAASa,EAAST,KAEzBJ,ICmfDc,CAAwBd,EAAMJ,EAAO/G,WAAYhG,YDhdhBX,EAAO2G,GAChD,IAAMkI,OACWhN,IAAf8E,EAA2BA,EAAW6C,eAAetL,OAAS,EAE3CmL,EAAgB1C,GACrC,IAAMsH,EAAiB1E,EAAkB5C,GAErCmI,EAAa9O,EAAMuG,QAAQ,GAAG,GAAGmC,MACjCqG,EAAkB,GAClBC,EAAS,GAmCb,OAjCAhP,EAAMuG,QAAQ1C,IAAI,SAAC6C,EAAGpJ,GACpB,IAAIwC,EAAM,KACN1B,EAAQ,KACR6Q,EAAa,KAEjBvI,EAAEhH,QAAQ,SAACP,EAAMgP,GACXA,EAAQU,GAA6B,IAAVV,GAC7BrO,EAAM4G,EAAEyH,GAAOzF,MACfuG,EAAavI,EAAEyH,GAAO/G,aACH,IAAV+G,IACT/P,EAAQsI,EAAEyH,GAAOO,QAIjBI,IAAepI,EAAE,GAAGgC,OACa,IAA/B9I,OAAOC,KAAKmP,GAAQ9Q,SACtB8Q,EAAOf,EAAe,IAAMvH,EAAE,GAAGgC,MACjCsG,EAAM,YAAkBtI,EAAE,GAAGU,YAC7B4H,EAAOlP,GAAO1B,EACd4Q,EAAUlP,kBAAqBmP,GAEjCF,EAAgBvR,KAAKwR,GACrBA,EAAS,KAETA,EAAOf,EAAe,IAAMvH,EAAE,GAAGgC,MACjCsG,EAAM,YAAkBtI,EAAE,GAAGU,YAC7B4H,EAAOlP,GAAO1B,EACd4Q,EAAUlP,kBAAqBmP,EAC/BD,EAAM,MAAYtI,EAAE,GAAGgC,OAEzBoG,EAAapI,EAAE,GAAGgC,QAEpBqG,EAAgBvR,KAAKwR,GACdD,ECqaCG,CAA2BpB,EAAMJ,EAAO/G,YAC9C,uBAAOwE,GAZwB,oCAa9B,IAEGgE,GAAcvM,WAAmB+E,EAAUxB,OAC/C,IAAKwB,EACH,uBAAOxB,EAAYtC,IAAI,SAACuL,UAAYA,EAAQ9F,kBAI9C,IAAMzJ,EAAO8H,EAAS7J,OACpB,SAACqB,SAAkC,qBAAzBS,OAAOC,KAAKV,GAAM,KAG9B,uBAAOU,EAAK,GAAGwP,kBAVc,oCAW5B,IAEGC,GAAiB1M,WAAmB+E,EAAU+F,OAClD,IAAM6B,EAAa,GAEnB,OAAK7B,EAAOvB,cAEZuB,EAAOvB,aAAatI,IAAI,SAAC1E,EAAMgP,GAC7B,IAAMqB,EAAM,GACN1P,EAAMX,EAAKuK,YAAYF,eAAeF,eACtCmG,EAAQ9H,EAASwG,GAAO,GAC1BxG,EAASwG,GAAO,GAAG5H,QAAQ1C,IAAI,SAAC1E,UAASA,EAAK,GAAGuJ,QACjD,KAEJ8G,EAAI1P,GAAO2P,EACXF,EAAW/R,KAAKgS,qBAGXD,oBAb0B,MAHD,oCAiB/B,IAEGG,GAAW9M,WAAmB8K,OAClC,uBAAOA,EAAO/G,WAAW+E,QADC,oCAEzB,IAEGiE,GAAa/M,WAAmB8K,EAAQxC,OAC5C,IAAKA,EAAS,yBACd,IAAI0E,EAAY,GAKhB,OAHA1E,EAAQrH,IAAI,SAACmI,GACX4D,EAAU5D,EAAOC,OAASyB,EAAO1B,EAAOC,yBAEnC2D,GAPqB,oCAQ3B,IAEG1J,GAAStD,wCACU4C,oBAAjBY,0BACgBqD,EAAUrD,kBAA1ByJ,0BAEgB9J,KAAK+J,KAAK1J,EAASO,WAAWoJ,MAAMC,IAAMjE,KAChE,EACIrG,KACAgH,GAAiB3G,KAAK+J,KAAK1J,EAASO,WAAWoJ,MAAMC,IAAMjE,oBAHzD1F,0BAKmBoH,GAAYrH,kBAA/B6J,0BACe1H,GAAcnC,EAAUC,kBAAvC6J,0BAEiBtC,GAAWxH,kBAA5B+J,0BACkBtC,GAAYzH,kBAA9BgK,0BACkBd,GAAeW,EAAY7J,kBAA7CiK,0BAEkBlB,GACtBkB,EACAjK,EAASO,WAAWC,6BAFhB0J,0BAKgBZ,GAAStJ,kBAAzBmK,GACN,IAAMC,EAAa7E,EAtBkB,uBAwBbgE,GAAWvJ,EAAUwF,kBAAvC6E,GACN,GAAIpK,GAAUlE,EAAWsD,QAAS,CAChC,IAAMa,EAAcD,EAAOE,QAAQzI,OAAO,SAAC0I,SAA0B,MAAlBA,EAAI,GAAGC,SAE1DnE,EAAS,CACP9B,KAAM,SACND,QAAS,CACPyK,MAAOuF,EACPtF,SAAUuF,EACVxQ,MAAOqG,EACP8E,MAAO+E,EACP9E,QAAS+E,EACT9E,SAAU+E,EACV9E,UAAW2E,EACX1E,SAAU8E,EACV7E,SAAU8E,EACVpF,QAASuF,EACTvQ,QAASkG,EACTjG,WAAYmG,UAGPnE,EAAWsD,SACpBnD,EAAS,CACP9B,KAAM,SACND,QAAS,CACPyK,MAAOuF,EACPtF,SAAUuF,EACVtF,QAASuF,EACTzQ,MAAOqG,EACP8E,MAAO+E,EACP9E,QAAS+E,EACT9E,SAAU+E,EACV9E,UAAW2E,EACX1E,SAAU8E,EACV7E,SAAU8E,EACVpQ,QAASkG,KA3DsB,oBA+DjC3E,yBACoBoE,oBAAhBgB,GACF1E,EAAWsD,SACbnD,EAAS,CACP9B,KAAM,oBACND,QAAS,CAAEN,OAAQ4G,yEApED,oCAwEvB,CAACnB,GAASF,GAAW/D,EAAWoE,KAE7BiB,GAAalE,EACjB,SAACmE,GACClG,GAAM4E,aACD5E,GAAM4E,QACNsB,GAELb,MAEF,CAACA,KAGGc,GAAkBpE,EACtB,kBAAML,GAAQkD,QAAQuB,gBAAgB,CAAC,oBACvC,EAAC,IAGGC,GAAgBrE,EACpB,SAACsE,UAAY3E,GAAQkD,QAAQwB,cAAcC,IAC3C,IAGIC,GAASvE,EACb,SAACwE,EAAad,EAAae,mBAAAA,IAAAA,GAAS,GAClC9E,GAAQkD,QAAQ6B,sBACd,iBACAF,EACAd,EACAe,IAEJ,IAaIE,GAAe3E,EACnB,SAAC4E,UAAYjF,GAAQkD,QAAQ8B,aAAaC,IAC1C,IAIIkJ,GAAgB9N,WACb8B,EAAWtG,8BAsBVmJ,GAAa,CACjB,CACEoJ,IAAK,UACLC,yBACElM,EAAY,YAAc,2BACjBA,EAAY,OAAS,cAChCmM,OAAQC,KAAKC,UAAUrM,EAAYtG,EAAQ,CAACA,2BA7BnB,oCAiC/B,CAACmJ,GAAcrH,KAGjBjC,EAAU,WACR,GAAK3B,KACDiG,GAAQkD,QAFE,IAIZ,IAAM5C,EAAQF,KADH,uBAEQrG,kBAAbmL,0BACkBA,EAAKC,oBAAoB7E,qBAAjDN,GAAQkD,UACRlD,GAAQkD,QAAQzK,GAAG,UAAW,WAC5BkL,GAAOrD,EAAMjC,cAAcqC,aAE7BiD,GAAOrD,EAAMjC,cAAcqC,eAVf,6BAYb,CAACN,GAAerG,GAAQ4J,KAE3BjI,EAAU,oCAAakE,EAAWsD,SAAU,IAAQ,IAEpD,IAAMuL,GAAU,GAShB,OAPI7F,IAAO6F,GAAQlD,KAAO3C,GACtBA,IAAO6F,GAAQ7J,OAASA,IACxBqE,IAAgC,IAApBA,GAAStN,SAAc8S,GAAQxF,SAAWA,IACtDD,IAAUyF,GAAQzF,SAAWA,GAC7BH,IAAS4F,GAAQ5F,QAAUA,GAC3BC,IAAU2F,GAAQ3F,SAAWA,GAE1B,CACLrE,gBAAAA,GACAC,cAAAA,GACA/G,QAAAA,GACAF,MAAAA,EACAmL,MAAAA,EACAG,UAAAA,EACAC,SAAAA,EACAmF,cAAAA,GACAlF,SAAAA,GACAJ,QAAAA,EAEA4F,QAAAA,GACAhG,MAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAjL,OAAAA,GACA6G,WAAAA,GACA3G,WAAAA,GACAgH,OAAAA,GACAI,aAAAA,KC3zBJ,SAAS0J,EACPtQ,EACA+K,EACA9K,EACAM,EACAC,EACAC,EACAC,EACAK,EACAJ,EACAC,EACAC,EACAG,EACAC,EACAE,EACAG,GAEA,IAAMY,EAAQ,CACZC,MAAO,CAAEC,MAAO,kBAGlB,GAAInC,EAAe,CACjB,IAAMoC,EAAiBpC,EAWvB,OAVID,GAAQA,EAAK,KACfqC,EAAeC,UAAU,GAAGC,KAAO,CACjCA,KAAMvC,EAAK,KAGXA,GAAQA,EAAK,KACfqC,EAAeG,YAAY,GAAGD,KAAKE,WAAa,CAACzC,EAAK,KACxDkC,EAAMC,MAAMC,MAAQ,YACpBF,EAAMjC,cAAgBoC,EAEfH,EAET,IAAMQ,EAA0BjC,GAAyB,GACnDkC,IAA6BlC,EAC/BmC,EAAY,EAEVJ,EAAcxC,EACjB7C,OAAO,SAAC0F,EAAKlG,GACZ,IAAMmG,EACY,iBAARD,IAAqBA,EAAIE,WAAW,MAC5B,iBAARF,GAAoBA,EAAIN,MAAQM,EAAIN,KAAKE,YACjC,iBAARI,GACNA,EAAIG,YACJH,EAAIT,OACU,cAAdS,EAAIT,OACN3D,MAAMC,QAAQmE,EAAII,SACF,iBAARJ,IAAqBA,EAAII,OAAOF,WAAW,KAOrD,OALID,IAAgBH,IAClBD,EAAwB/F,GAAKiG,EAC7BA,GAAa,GAGRE,IAERI,IAAI,SAACL,GACJ,MAAmB,iBAARA,EACF,CACLN,KAAM,CACJE,WAAY,CAACI,GACbM,eAAgB,CACd,CACE5C,aAAAA,EACAC,iBAAAA,KAIN4C,kBAAkB,EAClBxC,kBAAkB,EAClByC,kBAAkB,GAGH,iBAARR,GAAqBA,EAAIG,WAkDjB,iBAARH,GAAoBA,EAAIG,WAC1B,CACLA,WAAYH,EAAIG,WAChBZ,MAAOS,EAAIT,MACXjB,gBAAiBG,EACjBgC,iBACsBpC,IAApBC,EACIA,EAAgBmC,YAChB,SACNC,sBAAuB,CACrB,CAEE1C,YAAagC,EAAIW,sBACjBR,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIc,gBACjBX,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIe,gBACjBZ,WAAY,GACZS,YAAY,EACZC,GAAI,eAGRN,kBAAkBP,EAAIO,kBAAmBP,EAAIO,iBAC7CxC,kBAAkB,EAClByC,kBAAkB,GAGfR,EAtFE,CACLN,KAAM,CACJgO,UAAW1N,EAAI0N,WAAa,IAC5B9N,WAAahE,MAAMC,QAAQmE,EAAII,kBAEvBJ,EAAII,QADR,CAACJ,EAAII,QAETY,aAAc,CAAChB,EAAIiB,QACnBX,eAAgBN,EAAIM,eAChB,CAACN,EAAIM,gBACL,CACE,CACE3C,iBAAAA,EACAD,aAAAA,KAIVY,gBAAiBG,EACjBgC,iBACsBpC,IAApBC,EACIA,EAAgBmC,YAChB,SACNC,sBAAuB,CACrB,CAEE1C,YAAagC,EAAIW,sBACjBR,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIc,gBACjBX,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIe,gBACjBZ,WAAY,GACZS,YAAY,EACZC,GAAI,eAGRN,kBAAkBP,EAAIO,kBAAmBP,EAAIO,iBAC7CxC,kBAAkB,EAClByC,kBAAkB,KA2CpBf,EAAYtC,EACf7C,OAAO,SAAC0F,EAAKlG,GACZ,IAAMoH,EACY,iBAARlB,GAAoBA,EAAIE,WAAW,MAC3B,iBAARF,GAAoBA,EAAIN,MAAQM,EAAIN,KAAKA,MACjC,iBAARM,GACNA,EAAIG,YACJH,EAAIT,OACU,YAAdS,EAAIT,OACU,iBAARS,IACLpE,MAAMC,QAAQmE,EAAII,SACnBJ,EAAII,OAAOF,WAAW,KAM1B,OALIgB,IAAcpB,IAChBD,EAAwB/F,GAAKiG,EAC7BA,GAAa,GAGRmB,IAERb,IAAI,SAACL,GACJ,MAAmB,iBAARA,EACF,CACLN,KAAM,CACJA,KAAMM,EACNmB,WAAYnB,EAAImB,YAElBC,QAAS,CACPlD,eAAAA,EACAJ,kBAAAA,EACAE,YAAAA,EACAD,iBAAAA,IAIa,iBAARiC,EACF,CACLN,KAAM,CACJA,KAAMM,EAAII,OACVa,OAAQjB,EAAIiB,OACZE,WAAY,CACV5B,MAAOS,EAAIqB,UAAY,IACvBC,SAAU,EACVC,KAAMvB,EAAIwB,QACVC,KAAM,IACNC,MAAO,MAGXN,QAAS,CACPlD,eAAAA,EACAJ,kBAAAA,EACAE,YAAAA,EACAD,iBAAAA,GAEF2C,sBAAuB,CACrB,CAEE1C,YAAagC,EAAIW,sBACjBR,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIc,gBACjBX,WAAY,GACZS,YAAY,EACZC,GAAI,uBAEN,CAEE7C,YAAagC,EAAIe,gBACjBZ,WAAY,GACZS,YAAY,EACZC,GAAI,eAGRc,WAAY3B,EAAI2B,WAChBC,YAAa5B,EAAI4B,YACjBC,OAAQ7B,EAAI6B,OACZC,WAAY9B,EAAI8B,WAChBC,aAAc/B,EAAI+B,cAIf/B,IAcX,OAXAX,EAAMjC,cAAgB,CACpBuC,YAAAA,EACAF,UAAAA,EACA7B,sBAAAA,EACAC,cAAAA,EACAE,iBAAAA,EACAI,aAAAA,EACAC,eAAAA,EACA8J,OAAAA,GAGK7I,ECrPT,IAAM9C,EAAe,CACnBC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTiR,YAAa,KACbhR,WAAY,MAKd,SAASC,EAAQC,EAAOC,GACtB,MAWIA,EAVFC,QACEyK,IAAAA,MACAhL,IAAAA,MACAgR,IAAAA,QACA/Q,IAAAA,OACAkR,IAAAA,YACAjR,IAAAA,QACAC,IAAAA,WAKJ,OAFIG,EADFE,MAIA,IAAK,SACH,YACKH,GACH2K,MAAAA,EACAhL,MAAAA,EACAgR,QAAAA,EACAG,YAAAA,EACAjR,QAAAA,EACAC,WAAAA,IAEJ,IAAK,oBACH,YACKE,GACHJ,OAAAA,IAEJ,QACE,UAAUQ,OAIhB,IAAMC,EAAe,CACnBC,KAAM,KACNC,cAAe,KACf8K,OAAQ,KACR7K,MAAO,CACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GACRC,QAAS,KAEXmQ,aAAc,CACZhQ,sBAAuB,GACvBF,aAAc,EACdC,iBAAkB,EAClBK,YAAa,KACbE,gBAAiB,EACjBJ,kBAAmB,GAErBD,eAAe,EACfE,kBAAkB,EAClBE,WAAW,EACXE,aAAc,GACdC,oBAAgBC,EAChBC,gBAAiB,IAGbuP,EAAW,SAACrP,GAChB,MAYI1C,EAAUoB,EAAcsB,GAX1BrB,IAAAA,KACA+K,IAAAA,OACA9K,IAAAA,cACOsB,IAAPrB,MACAuQ,IAAAA,aACA/P,IAAAA,cACAE,IAAAA,iBACAI,IAAAA,aACAC,IAAAA,eACAH,IAAAA,UACAK,IAAAA,gBAGIK,EAAaC,GAAO,KACAC,EAAWjC,EAASL,GAAvCM,OAAOiC,OAGZlB,EAMEgQ,EANFhQ,sBACAF,EAKEkQ,EALFlQ,aACAC,EAIEiQ,EAJFjQ,iBACAK,EAGE4P,EAHF5P,YACAE,EAEE0P,EAFF1P,eACAJ,EACE8P,EADF9P,kBAIA0J,EAOE3K,EAPF2K,MACAhL,EAMEK,EANFL,MACAgR,EAKE3Q,EALF2Q,QACA/Q,EAIEI,EAJFJ,OACAkR,EAGE9Q,EAHF8Q,YACAjR,EAEEG,EAFFH,QACAC,EACEE,EADFF,WAKM7D,GAAwBlE,EAAW1E,IAAkB,IAArD4I,OACFiG,EAAUH,EAAO,MACjBvB,EAAQuB,EAAOF,GAGP4J,EAAYxR,OAMnByR,EAAyBzR,EAASuG,EAAM4E,QAAQxE,cAG9B3G,EAAS,GAA3BgX,OAAMC,OAEPC,EAAU5O,EACd,SAAC6O,GACCF,EAASE,GACT3K,GAAW,CAAEhG,KAAM2Q,EAAQ1F,KAE7B,CAACjF,GAAYiF,IAEfjU,OAAO0Z,QAAUA,EAGjB,IA6CIvP,KA7CuB3H,EAAS,GAA7BoX,SAAOC,SACRC,GAAWhP,EACf,SAACiP,GACKP,GAAQO,GACVL,EAAQ,GAEVG,GAAUE,IAEZ,CAACP,EAAME,IAIHM,GAAmBlP,EACvB,SAACmP,GACCP,EAAQO,IAEV,CAACP,IAqBHvT,EAAU,WACHiC,GAAYF,GACjB4R,GAAS7L,KAAK+J,KAAK5P,EAAQyG,WAAWoJ,MAAMC,IAAMjE,KACjD,CAAC7L,EAASF,EAAO+L,EAAUyF,EAASI,KAOR,iBAApB9P,EACTG,EAAY,CACVO,WAAY,gBACZC,cAAeX,EAAgBY,aAExBZ,EACTG,EAAY,CACVO,WAAY,gBACZC,cAAe,KAEPX,IACVG,EAAY,CACVO,WAAY,YACZC,cAAe,KAInB,IAAME,GAAgBC,EAAY,WAmBhC,OAlBcqO,EACZtQ,EACA+K,EACA9K,EACAM,EACAC,EACAC,EACAC,EACAK,EACAJ,EACAC,EACAC,EACAG,EACAC,EACAE,EACAG,IAID,CACDtB,EACA+K,EACAlK,EACAZ,EACAQ,EACAF,EACAI,EACAH,EACAI,EACAO,EACAT,IAGImE,GAAY5C,EAAY,kBAAML,EAAQkD,QAAQD,aAAa,IAE3DE,GAAU9C,wCAmTX,SAAgB5O,EAAM4G,GAC5B,IACC,IAAIC,kBAnTyB0H,EAAQkD,QAAQE,iBACvC,iBACA,CAAC9E,EAAM4E,yBAFHG,GAIN,OAAOA,EAAW,KAgTrB,MAAMrK,GACP,OAAOX,EAAQW,GAEhB,OAAIV,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,cArTKpB,GACPqS,EAASrS,MARc,oCAUxB,IAEGiW,GAAW9M,WAAmB8K,OAClC,uBAAOA,EAAO/G,WAAW+E,QADC,oCAEzB,IAEG7F,GAAiBjD,EACrB,iCACE,IAAQ5B,EAAWH,EAAM4E,QAAjBzE,OACF8E,EAAS,CACbhF,KAAM,EACNC,MAAO,EACPC,OAAAA,EACAC,QAAS8E,KAAKC,MAAM,IAAQhF,IANd,uBAQSuB,EAAQkD,QAAQQ,wBACvC,iBACA,CAACH,IACA,EACD,qBAJIF,GAON,OAAOA,EAAW,KAfpB,qCAiBA,IAGI2C,GAAgB3F,WAAmB8K,EAAQI,EAAMnN,OAErD,IAAMqQ,WHpNRhR,EACA2G,EAEAhG,GAsBA,OApBwBX,EAAMuG,QAAQ1C,IAAI,SAAC6C,EAAGpJ,GAC5C,IAAIwQ,EAAO,GAgBX,OAfApH,EAAEhH,QAAQ,SAACP,EAAMgP,SAETQ,UADOhO,EAAKwN,GAAO6D,SAEf,CACNvJ,KAAM/B,EAAEyH,GAAOzF,MACfC,OAAQjC,EAAEyH,GAAOO,KACjBO,WAAYvI,EAAEyH,GAAO/G,YACrB/G,MAAOqG,EAAEyH,GAAO1H,OAChB2H,QAAS1H,EAAEyH,GAAOE,UAClB4D,SAAU9D,KAEZrO,IAAKxC,KAEPwQ,OAAYA,EAASa,KAEhBb,IG8LSoE,CACdpE,EACAJ,EAEA/M,GAGF,uBAAOqQ,GATwB,oCAU9B,IAEG9K,GAAStD,wCACU4C,oBAAjBY,0BACgBsJ,GAAStJ,kBAAzBmK,0BACgB9G,EAAUrD,kBAA1ByJ,0BACenK,oBAAfW,0BH3Ee,SAAC1F,GACxB,IAAIwR,EAAM,GACNC,EAAO,GAgDX,OA9CgB,SAACzR,GACfA,EACG7C,OAAO,SAAC0F,EAAKlG,GASZ,MAPkB,iBAARkG,GACNA,EAAIG,YACJH,EAAIT,OACU,cAAdS,EAAIT,OACN3D,MAAMC,QAAQmE,EAAII,SACF,iBAARJ,IAAqBA,EAAII,OAAOF,WAAW,OAItDG,IAAI,SAACL,GAEJ,OADA2O,EAAI3U,KAAKgG,GACFA,IAyBb6O,CAAQ1R,GArBQ,SAACA,GACfA,EACG7C,OAAO,SAAC0F,EAAKlG,GAUZ,MARkB,iBAARkG,GACNA,EAAIG,YACJH,EAAIT,OACU,YAAdS,EAAIT,OACU,iBAARS,IACLpE,MAAMC,QAAQmE,EAAII,SACnBJ,EAAII,OAAOF,WAAW,OAI3BG,IAAI,SAACL,GAEJ,OADA4O,EAAK5U,KAAKgG,GACHA,IAOb8O,CAAQ3R,GAEYwR,EAAII,OAAOH,GG8BFI,CAAU7R,kBAA/B8R,cACAC,cAEAC,GACN,GAAItM,GAAUlE,EAAWsD,QAAS,CAChC,IAAMa,EAAcD,EAAOE,QAAQzI,OAAO,SAAC0I,SAA0B,MAAlBA,EAAI,GAAGC,SAC1DnE,EAAS,CACP9B,KAAM,SACND,QAAS,CACPyK,MAAOuF,EACPvQ,MAAOqG,EACP2K,QAAS0B,EACTvB,YAAawB,EACbzS,QAASkG,EACTjG,WAAYmG,UAGPnE,EAAWsD,SACpBnD,EAAS,CACP9B,KAAM,SACND,QAAS,CACPyK,MAAOuF,EACPvQ,MAAOqG,EACP2K,QAAS0B,EACTvB,YAAawB,EACbzS,QAASkG,KAhCsB,oBAoCjC3E,yBACoBoE,oBAAhBgB,GACF1E,EAAWsD,SACbnD,EAAS,CACP9B,KAAM,oBACND,QAAS,CAAEN,OAAQ4G,0DA/BJR,kBH5BA,SAACnG,EAASS,EAAMmN,GACvC,OAAI5N,YAEGA,EAAQyG,WAAW6C,eAAe3F,IAAI,SAACL,EAAK2K,SAAW,CACxDnD,MAAOxH,EAAI8F,eACXsJ,UAAWjS,EAAKwN,GAAO6D,QACvBA,QAASrR,EAAKwN,GAAO6D,QACrBa,OAAQlS,EAAKwN,GAAO0E,OACpBC,gBAAwC,MAAvBtP,EAAIuP,eACrBC,kBAAmB7E,EACnByC,oCAAqCzC,EACrC4E,eAAgBvP,EAAIuP,eACpBE,aAAczP,EAAIyP,aAClBC,aAAc,CAAExK,MAAO,KAAMgG,KAAM,MACnCyE,YAAa,SAEZjT,EAAQyG,WAAWC,aAAa/C,IAAI,SAACL,EAAK2K,SAAW,CACtDnD,MAAOxH,EAAI8F,eACXsJ,UACEjS,EAAKT,EAAQyG,WAAW6C,eAAetL,OAASiQ,GAAO6D,QACzDA,QAASrR,EAAKT,EAAQyG,WAAW6C,eAAetL,OAASiQ,GAAO6D,QAChEa,OAAQlS,EAAKT,EAAQyG,WAAW6C,eAAetL,OAASiQ,GAAO0E,OAC/DC,gBAAwC,MAAvBtP,EAAIuP,eACrBC,kBAAmB7E,EAAQjO,EAAQyG,WAAW6C,eAAetL,OAC7D0S,kCAAmCzC,EACnC4E,eAAgBvP,EAAIuP,eACpBE,aAAczP,EAAIyP,aAClBC,aAAchT,EAAQyG,WAAWyM,eAAejF,GAChDgF,YAAa,WAIV,GGJ+BE,CAAUjN,EAAUqM,cAArCpM,UADnBA,kBAAiBkC,GAAcnC,EAAUC,EAAQoM,cAAjDpM,aATsB,oCA6CvB,CAACX,GAASF,GAAW/D,EAAWoE,KAE7BiB,GAAalE,EACjB,SAACmE,GACClG,EAAM4E,aACD5E,EAAM4E,QACNsB,GAELb,MAEF,CAACA,KAGGc,GAAkBpE,EACtB,kBAAML,EAAQkD,QAAQuB,gBAAgB,CAAC,oBACvC,EAAC,IAGGC,GAAgBrE,EACpB,SAACsE,UAAY3E,EAAQkD,QAAQwB,cAAcC,IAC3C,IAGIC,GAASvE,EACb,SAAC0Q,EAAOlM,EAAaC,mBAAAA,IAAAA,GAAS,GAC5B9E,EAAQkD,QAAQ6B,sBACd,iBACAgM,EACAlM,EACAC,IAEJ,IAGIE,GAAe3E,EACnB,SAAC4E,UAAYjF,EAAQkD,QAAQ8B,aAAaC,IAC1C,IAII+L,GAAmB3Q,WAChB4Q,+CAsBCjM,GAAa,CACjB,CACEoJ,IAAK,UACLC,MAAU4C,EAAO5C,2BACjBC,OAAQC,KAAKC,WACVyC,EAAOP,eAGZ,CACEtC,IAAK,UACLC,MAAO,uCACPC,OAAQC,KAAKC,UACX,UACK7Q,EAAQyG,WAAW8M,gCACtBC,KAAK,SAACC,EAAGC,UACTD,IAAMH,EAAOR,mBACR,EACDY,IAAMJ,EAAOR,kBACb,EACA,yBAKZxB,EAAQ,sBA5CsB,MAA1BgC,EAAOT,qDAULS,EAAO5C,MAAMiD,SAAS,oCAClBtM,GAAa,CACjB,CACEoJ,IAAK,MACLC,MAAU4C,EAAO5C,iBACjBC,OAAQC,KAAKC,UAAU,CAAE5P,iBAAkB,wFAd7CqS,EAAO5C,MAAMiD,SAAS,sCAClBtM,GAAa,CACjB,CACEoJ,IAAK,MACLC,MAAU4C,EAAO5C,6BACjBC,OAAQC,KAAKC,UAAU,CAAC,CAAE5P,iBAAkB,kHATpB,oCAiDlC,CAACoG,GAAcrH,IAmBjB,OAhBAjC,EAAU,WACR,GAAK3B,IACDiG,EAAQkD,QAFE,IAIZ,IAAM5C,EAAQF,KADH,uBAEQrG,iBAAbmL,0BACkBA,EAAKC,oBAAoB7E,qBAAjDN,EAAQkD,UACRlD,EAAQkD,QAAQzK,GAAG,UAAW,WAC5BkL,GAAOrD,EAAMjC,cAAcqC,aAE7BiD,GAAOrD,EAAMjC,cAAcqC,eAVf,6BAYb,CAACN,GAAerG,EAAQ4J,KAE3BjI,EAAU,oCAAakE,EAAWsD,SAAU,IAAQ,IAE7C,CACLuB,gBAAAA,GACAC,cAAAA,GACA+D,MAAAA,EACA9K,QAAAA,EACAF,MAAAA,EACAgR,QAAAA,EACAG,YAAAA,EACAoC,iBAAAA,GACAtT,OAAAA,EACA6G,WAAAA,GACA3G,WAAAA,EACAgH,OAAAA,GACAI,aAAAA,GACAuM,cAxSoB,WAEpBhC,GADiBR,EAAO,IAwSxByC,cAnSoB,WAGlBjC,GAFU,GAARR,EAEeI,GAAQ,EAERJ,EAAO,IA+R1BQ,iBAAAA,GACAR,KAAAA,EACAvF,SAAAA,EACA2F,MAAAA,KC3dE1Y,GAASC,QAAQ,aACjBC,GAASD,QAAQ,mCACjBE,GAAiBF,QAAQ,6BAI/B,SAAS+a,GAAUlgB,GACjB,IAAMuF,EAAuB,CAC3B,CAEEC,WAAY,SAA2BC,EAAkBC,EAASC,GAMhE,OALAC,QAAQC,KACN,4CACeF,EAAMG,WAAUH,GAI/BA,EAAMG,OAASV,GAAOW,MAAMC,mBAAmBC,yBAG/CP,EAAQQ,OAASR,EAAQQ,OAAS,GAAK,EACvCN,QAAQC,iCAAiCH,EAAQQ,OAG7CR,EAAQQ,OApBF,GAqBDR,EAAQS,QAIjBR,EAAMG,OACNV,GAAOW,MAAMC,mBAAmBI,mCAKhCT,EAAMG,OACNV,GAAOW,MAAMC,mBAAmBK,6BAJzBV,EAAMG,MAWfF,QAAQC,KAAKF,QAEDW,QAAQC,OAAOZ,SAKKa,GAAS,GAAxC2Z,OAAaC,SAEa5Z,EAAS,MAAnCnC,OAAWsC,SACUH,EAAS,YACnC,4DA6DMxG,GACF,IACM4G,EAAMvB,GAAewB,SADV7G,GA9DR,OA2fV,SAAgBE,EAAM4G,GAC5B,IACC,IAAIC,IA5bUC,EAAU9B,GAAO+B,OAAO,CAC5B7B,OAAAA,GACAwB,IAAAA,EACArB,qBAAAA,KAEM2B,GAAG,YAAa,WACtBtB,QAAQC,KAAK,gCAEfmB,EAAQE,GAAG,QAAS,WAClBtB,QAAQC,KAAK,4BAEfmB,EAAQE,GAAG,SAAU,WAInB,OAHAtB,QAAQC,KAAK,sBACbc,GAAa,IAEL,oBAEYK,EAAQG,sBAAxBC,0BAEsBA,EAAQiZ,+BAA9BA,0BACgBjZ,EAAQkZ,WAAW,mBAAnCC,0BACenZ,EAAQoZ,wBAAvBA,0BACkBpZ,EAAQqZ,2BAA1BA,GAWN,OAVAC,EAAU,CACRC,OAAQvZ,EACRmZ,QAAAA,EACAF,cAAAA,EACAG,OAAAA,EACAC,UAAAA,IAGF9Z,EAAY,gBA8ZnB,MAAMc,GACP,OAAOX,EAAQW,OA9bDT,EAgcf,OAAID,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,cAjaSY,GAOP,OANA/B,QAAQC,KAAK,iBAAkB8B,GACd,OAAbA,EAAI7B,MACNsa,EAAe,6BAEjBzZ,GAAa,IAEL,yBAzGR3G,GAAUA,EAAO4H,KACnB,IAAMnH,EAAYT,EAAOU,KACnBC,EAAmBX,EAAOY,SAHvB,uBAKiBiH,iBACbpH,uBACX,CACEqH,KAAM,OACNC,YAAa,UACbC,QAAS,CACP,0BAA2BrH,EAC3B,eAAgB,4BAGd,SAACgF,GACPC,QAAQqC,IAAI,sBAAuBtC,oBAX/BuC,GAcN,IAAMC,EAAYD,EAAYF,QAAQI,IAAI,mBAC1C,GAAiB,MAAbD,SACFvC,QAAQqC,IAAI,iBACZtB,GAAa,GAFQ0B,KAIb,EAEV,IAAMrB,EAAU9B,GAAO+B,OAAO,CAC5B7B,OAAAA,GACAwB,aAAcnG,UAAiBT,EAAOsH,kCAAiC3G,sBAAoCwH,EAC3GG,aAAc,SAAC1B,cAAY2B,UAAU3B,IACrCrB,qBAAAA,IA9BO,OAgCTyB,EAAQE,GAAG,YAAa,WACtBtB,QAAQC,KAAK,gCAEfmB,EAAQE,GAAG,QAAS,WAClBtB,QAAQC,KAAK,4BAEfmB,EAAQE,GAAG,SAAU,WAInB,OAHAtB,QAAQC,KAAK,sBACbc,GAAa,IAEL,oBAEYK,EAAQG,sBAAxBC,0BACsBA,EAAQiZ,+BAA9BA,0BACgBjZ,EAAQkZ,WAAW,mBAAnCC,0BACenZ,EAAQoZ,wBAAvBA,0BACkBpZ,EAAQqZ,2BAA1BA,GAhDG,OAiDTC,EAAU,CACRC,OAAQvZ,EACRmZ,QAAAA,EACAF,cAAAA,EACAG,OAAAA,EACAC,UAAAA,IAGF9Z,EAAY,KAEL,2CA3DX,4BAAA,IA8GC,IA/GY+Z,OAiHf,kBAEEP,YAAAA,EACA9b,UAAAA,ICrKJ,ICAIuc,GACAC,GDDEjU,GAAe,CACnBG,MAAO,CACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,KAEXN,KAAM,KACNC,cAAe,KACf9M,OAAQ,MAGJ8gB,GAAY,SAAC5S,SACyC1C,EACxDoB,GACAsB,GAFwBrB,IAAAA,KAAMC,IAAAA,cAKxBtE,GAAwBlE,EAAW1E,IAAkB,IAArD4I,SACsBhC,EAAS,MAAhC4F,OAAS2U,OAEV1S,EAAaC,GAAO,GACpBG,EAAUH,EAAO,MAGjBO,EAAgBC,EAAY,WAGhC,OAFcqO,EAAUtQ,EAAMC,IAG7B,CAACD,EAAMC,IA6DV,OA3DA3C,EAAU,WACR,GAAK3B,GAAWqE,IACZ4B,EAAQkD,QAFE,IAIZ,IAAM5C,EAAQF,IADH,uBAEQrG,iBAAbmL,0BACkBA,EAAKC,oBAAoB7E,qBAHtC,OAGXN,EAAQkD,0BACSlD,EAAQkD,QAAQD,8BAAjCqP,WAPY,6BASb,CAAClS,EAAerG,IAEnB2B,EAAU,oCAAakE,EAAWsD,SAAU,IAAQ,IAgD7C,CACLyD,gBA/CsB,WACtB5M,GAAUA,EAAOwY,YA+CjBC,kBA5CwB,WACxBzY,GAAUA,EAAO0Y,QA4CjBC,cAzCoB,WACpB3Y,GAAUA,EAAO4Y,WAyCjBhV,QAAAA,EACAiV,WArBiB,SAACC,GAQlB9Y,EAAO+Y,UALInV,EAAQ4C,MAAMwS,KAKJ9Z,KAAK,SAAC+Z,GACzBA,EAAMJ,WAAW,QAAS,iBAAkB,OAAQ,KAAK3Z,KAAK,SAACd,GAC7DhB,QAAQqC,IAAIrB,EAAI8a,KAAM9a,EAAI+a,gBAY9BtO,gBAxCoB/I,EAAOsX,8BACRpZ,iBAAbmL,0BACeA,EAAKkO,SAASD,kBAA7B9R,GACNA,EAAOuD,OAAO/I,OAHJ,oCAyCVwX,sBAnC0BrJ,EAAQmJ,EAAOrO,YAAAA,IAAAA,GAAO,8BAC9BkF,EAAO1I,IAAI,SAAA6C,SAAM,CAACgC,MAAShC,oBAAvCmP,0BACavZ,iBAAbmL,0BACeA,EAAKkO,SAASD,kBAA7B9R,GACNA,EAAOgS,aAAaC,EAAIxO,SAJR,oCAoChByO,kBA7BsBC,EAAOC,8BACV1Z,iBAAbmL,GACNA,EAAKqO,SAASC,EAAOC,GAAU,KAFnB,sCEvEVC,GAAY,gBAAGC,IAAAA,YAAaC,IAAAA,WAAYC,IAAAA,OAAQC,IAAAA,kBAEZ/b,EAAS,IAA1Cgc,OAAcC,SACiBjc,EAAS,IAAxCkc,OAAaC,OACdtU,EAAaC,GAAO,GAClB9F,GAAWlE,EAAW1E,IAAkB,IAAxC4I,OAER2B,EAAU,gBACO4D,IAAXvF,GAEF,qBAqiBC,SAAgBtI,EAAM4G,GAC5B,IACC,IAAIC,kBAriBuByB,iBAAbmL,0BACeA,EAAKiP,cACxB,CACEC,cAAeR,GAEjB,CAACD,GACD,CACEU,QAAS,EACTR,OAAAA,EACAS,kBAAmB,CACjB,CACEC,eAAgB,QAChBF,QAAS,EACTR,OAAQC,qBAZVU,0BAiBYA,iBAAZC,0BACkBC,EAASD,kBAA3BE,0BACoBC,EAAWD,kBAA/BE,GACNb,EAAgBW,GAChBT,EAAeW,GACXjV,EAAWsD,UACb8Q,EAAgBW,GAChBT,EAAeW,cA6gBxB,MAAM7b,GACP,OAAOX,EAAQW,GAEhB,OAAIV,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,cAjhBSU,GACP7B,QAAQC,KAAK4B,qCA9BjB,4BAAA,IAkCD,CAACe,EAAQ4Z,EAAaE,EAAQC,EAAiBF,IAElDlY,EAAU,oCAAakE,EAAWsD,SAAU,IAAQ,IAEpD,IAAMwR,EAAW,SAAA1M,GACf,IAAI8M,EAAM,GACNrI,EAAS,GAQb,OAPAzE,EAAE+M,kBAAkBzT,IAAI,SAAA6C,GACtBsI,EAAM,GAAStI,EAAE4O,IACjBtG,EAAM,UAAgBtI,EAAE6Q,OAAO,GAAGC,YAClCxI,EAAM,MAAatI,EAAE6Q,OAAO,GAAGE,aAC/BJ,EAAI7Z,KAAKwR,GACTA,EAAS,KAEJqI,GAGHF,EAAa,SAAA5M,GACjB,IAAM8M,EAAM,GACRrI,EAAS,GASb,OARAzE,EAAE1G,IAAI,SAAA6C,GACJA,EAAEtI,MAAMyF,IAAI,SAAA1E,GACV6P,EAAM,UAAgBtI,EAAEoB,UACxBkH,EAAM,MAAY7P,EAAKuJ,MACvB2O,EAAI7Z,KAAKwR,GACTA,EAAS,OAGNqI,GAIHK,EAAc9U,EAAY,SAACyB,gDAEV/H,iBAAbmL,GAENA,EAAKkQ,mBACH,CACEhB,cAAeR,EACfyB,SAAU,qBAEZ,CAAC1B,GACD7R,KATJ,wCAwBF,MAAO,CACLiS,aAAAA,EACAE,YAAAA,EACAqB,WAZiBjV,EAAY,SAACuP,EAAK/T,gDAEd9B,iBAAbmL,0BAEeA,EAAKkO,SAASxD,kBAA7BvO,GACNA,EAAOuD,OAAO/I,OAJhB,wCAYAsZ,YAAAA,ICzGAjQ,GAAO,KACPlF,GAAU,KAERuV,GAAqB,WACzB,IAAQxb,GAAWlE,EAAW1E,IAAkB,IAAxC4I,OAEF6F,EAAaC,GAAO,KACI9H,EAAS,MAAhC4F,OAAS2U,SACoBva,EAAS,MAAtC6F,OAAY4X,OAEb7R,EAAStD,wCACUL,GAAQiD,2BAAzBY,0BACY4R,EAAc5R,kBAA1ByP,GACF1T,EAAWsD,UACboP,EAAWzO,GACX2R,EAAclC,QALQ,oCAOvB,IAEGmC,EAAgB,SAACzN,GAErB,OADmBA,EAAE0N,iBAAiBC,aAsCxC,OArBAja,EAAU,WAER,QAAe4D,IAAXvF,YAGA,IAAMuG,EAAQ,CACZC,MAAO,CAAEC,MAAO,mBAChBoV,oBAAqB,IAHZ,uBAKE7b,oBALF,OAKXmL,qBACgBA,GAAKC,oBAAoB7E,sBAAzCN,MACQvH,GAAG,UAAW,WACpBkL,MAEFA,QAXG,6BAcN,CAAC5J,EAAQ4J,IAEZjI,EAAU,oCAAakE,EAAWsD,SAAU,IAAQ,IAE7C,CAAEvF,QAAAA,EAASC,WAAAA,EAAY+I,yBAlCCwM,EAAOtX,2BAChCsX,yBACmBjO,GAAKkO,SAASD,kBAA7B9R,SACFxF,kBACIwF,EAAOwU,aAAaha,uCAEpBwF,EAAOyU,uEAGf5Q,GAAKqN,4EATY,yCCpBR,CAAEwD,ICPjB,SAAapa,GAIX,IAHA,IAAMqa,EAAW,uDACXC,EAAYta,GAAU,EACxBua,EAAM,GACDnb,EAAI,EAAGA,EAAIkb,EAAWlb,GAAK,EAClCmb,GAAOF,EAASG,OAAO3S,KAAK4S,MAAM5S,KAAK6S,SAAWL,EAASra,SAE7D,OAAOua,GDAaI,QALN,CACdC,KAAM,KACNC,OAAQ,OH8iBH,SAAS9O,GAAOjW,EAAM4G,GAC5B,IACC,IAAIC,EAAS7G,IACZ,MAAMuH,GACP,OAAOX,EAAQW,GAEhB,OAAIV,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,EA1dR,SAASme,GAAcllB,GACrB,MAAsBwG,EAAS,YAC7B,8BACMxG,GAAUA,EAAO4H,KACnB,IAEMud,EAAU,CACdzkB,KAAMV,EAAOU,KACb0kB,SAAUplB,EAAOqlB,OACjBC,KAAMtlB,EAAOslB,MAAQ,IACrBC,OAN+B,KAAlBvlB,EAAOulB,WAAoBvlB,EAAOulB,WAAY,IAO3Dje,MAAOtH,EAAOsH,MACd3G,iBAAkBX,EAAOY,UAVlB,qDA3FUZ,8EAOvB,IAAMwlB,EAAYxlB,EAAOU,KACnBC,EAAmBX,EAAOY,SAE1B6kB,EAAOC,SAASC,cAAc,QACpCF,EAAKG,IAAM,aACXH,EAAKvhB,gBAAkBshB,6CACvBE,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,OAAS,IAAIzf,QAAQ,SAAC0f,GACzBP,EAAKQ,OAAS,WACZD,OAIJ,IAAME,EAASR,SAASC,cAAc,UAnBpC,OAoBFO,EAAOpjB,eAAiB0iB,oDACxBU,EAAOD,sBAAqB,OAC1BjiB,OAAOmB,QAAQnF,OAAO,CACpBmmB,mBAAoBX,eACpB7kB,iBAAAA,sBAHJ,oCAMA+kB,SAASxlB,KAAK4lB,YAAYI,GAC1BA,EAAOH,OAAS,IAAIzf,QAAQ,SAAC0f,GAC3BE,EAAOD,OAAS,WACdD,OAIJnF,GAAoBva,QAAQuT,IAAI,CAAC4L,EAAKM,OAAQG,EAAOH,yBAC/ClF,2CAlCFA,0BACIA,uEAkCDlb,GACP,UAAUgH,MAAMhH,MAtCH,mCAyGDygB,CAAYjB,oBAClBnhB,OAAOmB,QAAQnF,OAAO,CACpBmmB,mBAAoBhB,EAAQzkB,kBAC5BC,iBAAkBX,EAAOY,WAG3BoD,OAAOmB,QAAQ,CAAC,oBAAmBkhB,OACjC,IAAMC,EAAMD,EAAEE,QAAQpB,EAAQ7d,MAAO6d,GAOrC,OALAmB,EAAIE,MAAMpe,MAAMV,KAAK,SAAC8e,GACpBA,EAAMC,UAERC,EAAOJ,mBAEA,GART,iDAUO3gB,GACP,UAAUgH,MAAMhH,mDAhFQ3F,8EAO9B,IAAM2mB,EAAmBjB,SAASC,cAAc,UAC1CJ,EAA2B,KAAlBvlB,EAAOulB,WAAoBvlB,EAAOulB,OAAW,GAC5DoB,EAAiB7jB,KACd9C,EAAOqlB,OAAS,WAAa,WAC9BrlB,EAAOU,MACNV,EAAOslB,SAAWtlB,EAAOslB,KAAS,IACnCC,oDAEFG,SAASG,KAAKC,YAAYa,GAC1BA,EAAiBZ,OAAS,IAAIzf,QAAQ,SAAC0f,GACrCW,EAAiBV,OAAS,WACxBD,OAGJ,IAAMY,EAAoBlB,SAASC,cAAc,QApB/C,OAqBFiB,EAAkB1iB,MACflE,EAAOqlB,OAAS,WAAa,WAC9BrlB,EAAOU,MACNV,EAAOslB,SAAWtlB,EAAOslB,KAAS,IACnCC,6CAEFqB,EAAkBla,KAAO,WACzBka,EAAkBhB,IAAM,aACxBF,SAASG,KAAKC,YAAYc,GAC1BA,EAAkBb,OAAS,IAAIzf,QAAQ,SAAC0f,GACtCY,EAAkBX,OAAS,WACzBD,OAIJpF,GAAwBta,QAAQuT,IAAI,CAClC8M,EAAiBZ,OACjBa,EAAkBb,yBAEdnF,2CAvCFA,0BACIA,uEAuCDjb,GACP,UAAUgH,MAAMhH,MA3CI,mCAoFRkhB,CAAmB7mB,oBACzB,IAAMulB,EAA2B,KAAlBvlB,EAAOulB,WAAoBvlB,EAAOulB,WAAY,IAyB7D,OAxBAvhB,OAAOmB,QAAQnF,OAAO,CACpBmmB,SACGnmB,EAAOqlB,OAAS,WAAa,WAC9BrlB,EAAOU,MACNV,EAAOslB,SAAWtlB,EAAOslB,KAAS,IACnCC,cAEFuB,MAAO,CACL9B,MACGhlB,EAAOqlB,OAAS,WAAa,WAC9BrlB,EAAOU,MACNV,EAAOslB,SAAWtlB,EAAOslB,KAAS,IACnCC,uBAGJvlB,OAAQ,CACN2U,KAAM,CACJoS,kBACE,kBAMGzgB,QAAQ,SAAC0f,GAClB,GAAIgB,GAAQjC,QAAQC,KAAM,CACxB,IAAMsB,EAAMU,GAAQjC,QAAQC,KAAKuB,QAAQvmB,EAAOsH,WAC3CtH,GACHolB,SAAUplB,EAAOqlB,OACjBE,OAAAA,KAGFe,EAAIE,MAAMpe,MAAMV,KAAK,SAAC8e,GACpBA,EAAMC,UAERC,EAAOJ,QAEPtiB,OAAOmB,QAAQ,CAAC,WAAY,SAACkhB,GAC3BW,GAAQjC,QAAQC,KAAOqB,EACvBW,GAAQjC,QAAQE,OAAS,WACvBoB,EAAEpB,UAEJ,IAAMqB,EAAMD,EAAEE,QAAQvmB,EAAOsH,WACxBtH,GACHolB,SAAUplB,EAAOqlB,OACjBE,OAAAA,KAIF,OAFAmB,EAAOJ,qBAMN3gB,GACP,UAAUgH,MAAMhH,QA3FtB,4BAAA,IA+FC,IAhGS+gB,OAkGZ,MAAO,CAAEJ,UKjMLW,IAAAA,GAAS,WACb,IAAQze,GAAWlE,EAAW1E,IAAkB,IAAxC4I,SACehC,IAAhB0gB,OAAMR,OAEP1E,WAAkBC,EAAOC,8BACV1Z,iBAAbmL,GACNA,EAAKqO,SAASC,EAAOC,GAAU,KAFnB,oCAyBd,OApBA/X,EACE,0DAEmB4D,IAAXvF,yBAEiBA,iBAAbmL,0BAEsBA,EAAKwT,kCAA3BC,GAENV,KACEJ,IAAK3S,EACLyT,cAAAA,GACGA,GACHpF,SAAAA,0EAXN,uCAeF,CAACxZ,SAIE0e,IC9BDG,GAAY,WAChB,IAAQ7e,GAAWlE,EAAW1E,IAAkB,IAAxC4I,SACoBhC,EAAS,MAA9BoT,OAAQ0N,SACW9gB,EAAS,MAA5Bb,OAAOqS,OAqBd,OAnBA7N,EACE,iCAEI,IAAK3B,EAAQ,yBADF,MAwiBZ,SAAgBtI,EAAM4G,GAC5B,IACC,IAAIC,kBAviBuByB,iBAAbmL,0BAEkBA,EAAK4T,8BAAvBC,GACNF,KACEE,UAAAA,GACGA,QAmiBZ,MAAM/f,GACP,OAAOX,EAAQW,GAEhB,OAAIV,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,cAviBSY,GACPqQ,EAASrQ,mEAXb,uCAcF,CAACa,SAIEoR,GACHjU,MAAAA,KCqhBG,SAASwQ,GAAOjW,EAAM4G,GAC5B,IACC,IAAIC,EAAS7G,IACZ,MAAMuH,GACP,OAAOX,EAAQW,GAEhB,OAAIV,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,EAvjBR,IAAM6F,GAAe,CACnB2D,GAAI,KAEJkX,aAAS1Z,EACT2Z,wBAAoB3Z,EACpB4Z,mBAAmB,EACnBC,WAAY,MAGRC,GAAc,SAAC3Z,GACnB,IAAM4Z,EAAwB,iBAAV5Z,EAAqBA,EAAQA,EAAM4Z,MAAQ,OAS3Dtc,EAAUoB,GAAcsB,GAN1BqC,IAAAA,GAEAkX,IAAAA,QACAC,IAAAA,mBACAC,IAAAA,kBACAC,IAAAA,WAGMpf,GAAwBlE,EAAW1E,IAAkB,IAArD4I,SACsBhC,EAAS,MAAhC4F,OAAS2U,SACsBva,EAAS,MAAxCuhB,OAAaC,SACMxhB,EAAS,MAA5Bb,OAAOqS,OAERvJ,EAAUH,EAAO,MAEjBO,EAAgB,SACpB2S,EACArJ,EACA8P,EACAC,EACAC,EACAC,GAeA,MAbc,CACZpZ,MAAO,CACLwS,IAAAA,EACAvS,MAAO,YAEToZ,SAAU,GACVlQ,MAAAA,EACA8P,SAAAA,EACAC,oBAAAA,EACAC,mBAAAA,EACAC,YAAaA,EAAYte,aAyEvB4H,EAAY5C,EAAY,kBAAML,EAAQkD,QAAQD,aAAa,IAC3D4W,EAAgBxZ,EAAY,kBAAML,EAAQkD,QAAQ2W,iBAAiB,IAEnEC,EAAgBzZ,WAAmBZ,OACvC,IACEsT,EAMEtT,EANFsT,IACArJ,EAKEjK,EALFiK,MACA8P,EAIE/Z,EAJF+Z,SACAC,EAGEha,EAHFga,oBACAC,EAEEja,EAFFia,mBACAC,EACEla,EADFka,4BAEE3Z,EAAQkD,+BACgB2W,mBAApBP,0BAEgBtZ,EAAQkD,QAAQ4W,cACpC1Z,EACE2S,GAAOuG,EAAY/Y,MAAMwS,IACzBrJ,GAAS4P,EAAY5P,MACrB8P,GAAYF,EAAYE,SACxBC,GAAuBH,EAAYG,oBACnCC,GAAsBJ,EAAYI,mBAClCC,EAAYte,YAAcie,EAAYK,YAAYte,4BAPhD2E,GAUN2D,EAAO3D,EAAQkD,8EAtBc,oCAwB9B,IAEG6W,EAAW1Z,WAAmBxE,2BAC9BmE,EAAQkD,+BACgB2W,mBAApBP,0BAEgBtZ,EAAQkD,QAAQ4W,cACpC1Z,EACEkZ,EAAY/Y,MAAMwS,IAClBuG,EAAY5P,MACZ4P,EAAYE,SACZF,EAAYG,oBACZH,EAAYI,mBACZ7d,EAAMR,4BAPJ2E,GAUN2D,EAAO3D,EAAQkD,8EAdS,oCAgBzB,IAEGS,EAAStD,WAAmB2Z,8BACT/W,mBAAjBY,GADmC,OAEzCA,EAAShI,MACW,WAAlBgI,EAASsI,KAAoBtI,EAASsI,KAAOtI,EAASsC,MACxDmM,EAAWzO,mBACUgW,sBAArBN,SALwB,oCAMvB,IAqCH,OAnCA7d,EAAU,WACR,GAAK3B,EADS,2BAIOA,iBAAbmL,uDA7HR6N,EACArJ,EACA8P,EACAC,EACAC,EACAC,8BAEmB5f,iBAAbmL,8DA2BFwE,GAASiQ,8CAEYzU,EAAK+U,kBAAkB,CAC1CvQ,MAAAA,sBADFwQ,gBAGOhhB,iBAgBFhC,EAAMG,KAAO,OAChBkS,EAAS,2BAETA,EAASrQ,wBAlBNghB,yBACkBhV,EAAKiV,sBACxB/Z,EACE2S,EACArJ,EACA8P,EACAC,EACAC,EACAC,sBATM,OAEVO,oBAWwBA,oBAAxBla,EAAQkD,UACRS,EAAO3D,EAAQkD,iIAUrB,OAAOgX,IAAAA,sBAlCHxQ,IAAUiQ,yBACSzU,EAAK+U,kBAAkB,CAC1CvQ,MAAAA,sBADFwQ,4DANEnH,IAAQ4G,yBACWzU,EAAKkV,gBAAgB,CACxCrH,IAAAA,sBADFmH,wCAhBF,IAAIA,mBAECnH,IAAQrJ,IAAUiQ,yBACQzU,EAAKC,oBAAoB,CACpD5E,MAAO,CACLwS,IAAK,OACLvS,MAAO,gBAET6Z,iBAAkB,CAChB7Z,MAAO,6BANL8Z,0BASeA,EAAerX,8BACpCqP,EADA4H,6CAtBa,mCAiIaK,CACtBzY,EACAuX,EACAL,EACAC,EACAC,EACAC,qBANFnZ,EAAQkD,UASRlD,EAAQkD,QAAQzK,GAAG,UAAW,WAC5BkL,EAAO3D,EAAQkD,WAGjBS,EAAO3D,EAAQkD,qBACRhK,GAELqQ,GADgB,IAAdrQ,EAAI7B,KACG,qBAEA6B,gDAzBD,6BA6Bb,CAAC4I,EAAIuX,EAAMtf,IAEV4D,GAAWA,EAAQ6c,gBACrB7c,EAAQ8c,aAAe9c,EAAQ6c,cAAcxF,WAI7CrX,QAAAA,GACGA,GACH2b,YAAAA,EACAQ,cAAAA,EACAC,SAAAA,EACA7iB,MAAAA,KCpNEwjB,GAAc,SAACjb,OACX1F,GAAwBlE,EAAW1E,IAAkB,IAArD4I,SAC0BhC,EAAS,MAApC4iB,OAAWC,SACQ7iB,EAAS,MAA5Bb,OAAOqS,OAERvJ,EAAUH,EAAO,MAEjBgb,EAAcxa,EAClB,SAAC0S,UACC/S,EAAQkD,QAAQ2X,YAAY,CAC1B9H,IAAKA,KAET,IA4CI+H,wCACoBC,mBAAlBJ,GAEN,IAAMK,EAAeL,EAAUrZ,IAAI,SAAC6C,EAAGpJ,GACrC,MAAO,CACL+G,GAAIqC,EAAE5D,MAAMwS,IACZtK,MAAOtE,EAAE8W,MAAMxS,MACfyS,YAAa/W,EAAE8W,MAAMC,YACrBC,aAAchX,EAAE1G,MAAM2d,UAAUC,kBAGpCT,EAAa,CAAED,UAAAA,EAAWK,aAAAA,MAXP,oCA0CfD,EAAe1a,EAAY,kBAC/BL,EAAQkD,QAAQ6X,aAAa,CAC3BO,SAAU,CACRC,OAAQ,CAAC,YACT9d,MAAO,QAKPkG,EAAStD,aAAwB,OACrCya,uBACC,IA0BH,OAxBApf,EAAU,WACR,GAAK3B,IACDiG,EAAQkD,QAFE,2BAKOnJ,iBAAbmL,GAEN,IACElF,EAAQkD,QAAUgC,EAElBlF,EAAQkD,QAAQzK,GAAG,UAAW,WAC5BkL,MAEFA,IACA,MAAOzK,GAELqQ,GADgB,IAAdrQ,EAAI7B,KACG,qBAEA6B,MAlBD,6BAsBb,CAACa,SAGC4gB,GACHa,uBAlH2BzI,OAC3B,IAAM0I,EACJzb,EAAQkD,SACRlD,EAAQkD,QAAQsY,cAAc,CAC5BzI,IAAAA,oBAEA0I,yBAC4BZ,EAAY9H,kBAApC2I,0BACqBA,EAAgBzY,2BAArC0Y,GAENf,OAAkBD,GAAWe,gBAAAA,EAAiBC,aAAAA,0EAV/B,oCAmHjBC,wBA3D4BzS,EAAQ0S,EAAc9I,YAAAA,IAAAA,EAAM,iCAC1B/S,EAAQkD,QAAQ0Y,eAAe,CAC3Dtb,MAAO,CACLC,MAAO,CACLwS,IAAKA,EACLvS,MAAO,YAEToZ,SAAU,CACRnR,MAAOU,GAAU,mBACjB+R,YAAaW,qBARbC,0BAYoBA,EAAgB7Y,2BAApC8Y,GAGN,OADAjB,IACOiB,MAhBW,oCA4DlBC,yBArE6BjJ,8BACG/S,EAAQkD,QAAQ8Y,gBAAgB,CAC9DjJ,IAAAA,mBADIkJ,GAKN,OADAnB,IACOmB,IANY,oCAsEnBpB,YAAAA,EACAqB,2BA9H+BnJ,8BACR/S,EAAQkD,QAAQ2X,YAAY,CACjD9H,IAAAA,mBADIoJ,0BAIOA,EAASlZ,eALD,oCA+HrBmZ,wBAzG4BrJ,EAAK5J,EAAQ0S,8BAClBhB,EAAY9H,kBAA7BoJ,0BAEAA,EAASrC,cAAc,CAC3BxZ,MAAO,CACLC,MAAO,CACLwS,IAAAA,EACAvS,MAAO,YAEToZ,SAAU,CACRnR,MAAOU,EACP+R,YAAaW,uBAKnBf,QAhBkB,oCA0GlB5jB,MAAAA"}