{"version":3,"file":"index.js","sources":["../src/contexts/EngineProvider.jsx","../src/components/Login/StyledLogin.jsx","../src/components/Login/Login.jsx","../src/components/NotConnected/StyledNotConnected.jsx","../src/hooks/useEngine.jsx","../src/components/NotConnected/NotConnected.jsx","../src/utils/object.js","../src/hooks/useHyperCube.jsx","../src/hooks/useList.jsx","../src/utils/hyperCubeUtilities.js","../src/hooks/useData.jsx","../src/utils/createHCDef.js","../src/hooks/useTable.jsx","../src/hooks/useCapability.jsx","../src/hooks/useGlobal.jsx","../src/hooks/useButton.jsx","../src/hooks/useSelections.jsx","../src/utils/CapApiUtils/index.js","../src/utils/CapApiUtils/Uid.js","../src/hooks/useVariable.jsx","../src/components/Motor/Motor.jsx","../src/components/License/LicenseCheck.js","../src/hooks/useApp.jsx","../src/hooks/useBookmark.jsx","../src/hooks/useLayout.jsx","../src/hooks/useSearch.jsx"],"sourcesContent":["import React from 'react'\n\nexport const EngineContext = React.createContext()\n","import React from \"react\";\n\nconst StyledLogin = ({\n  config,\n  header,\n  body,\n  bodySub,\n  size,\n  buttonText,\n  backgroundColor,\n  buttonFontColor,\n  buttonColor,\n  logo,\n  logoHeight,\n  logoWidth,\n  loginfontFamily,\n}) => {\n  const tenantUri = config.host;\n  const webIntegrationId = config.webIntId;\n\n  const goToLogin = () => {\n    const loginUrl = new URL(`https://${tenantUri}/login`);\n    loginUrl.searchParams.append(\"returnto\", window.location.href);\n    loginUrl.searchParams.append(\"qlik-web-integration-id\", webIntegrationId);\n    window.location.href = loginUrl;\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: 1040,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundColor: \"rgba(105, 105, 105, 0.8)\",\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          position: \"relative\",\n          margin: 0.2,\n          padding: \"5px\",\n          backgroundColor,\n          border: \"1px solid gray\",\n          borderRadius: \"8px\",\n          width: \"30%\",\n          minWidth: \"350px\",\n          top: \"30%\",\n          left: \"35%\",\n          alignSelf: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: \"-webkit-box\",\n            // display: \"-webkit-flex\",\n            // display: \"-ms-flexbox\",\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            borderBottom: \"solid 1px #ced4da\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"row\",\n            msFlexDirection: \"row\",\n            flexDirection: \"row\",\n            WebkitFlex: \"0 0 auto\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div size={size} style={{ padding: \"0.6rem\", fontSize: \"18px\" }}>\n            {logo ? (\n              <img\n                src={logo}\n                height={logoHeight}\n                width={logoWidth}\n                alt=\"Logo\"\n              ></img>\n            ) : (\n              header\n            )}\n          </div>\n        </div>\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: -webkit-box;\n            // display: -webkit-flex;\n            // display: -ms-flexbox;\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            padding: \"0.8rem\",\n            WebkitAlignItems: \"center\",\n            WebkitBoxAlign: \"center\",\n            msFlexAlign: \"center\",\n            alignItems: \"center\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"column\",\n            msFlexDirection: \"column\",\n            flexDirection: \"column\",\n            WebkitFlex: \"column\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div style={{ padding: \"0.6rem\", fontSize: \"14px\" }}>{body}</div>\n          <div style={{ padding: \"0.6rem\", fontSize: \"14px\" }}>{bodySub}</div>\n          <button\n            style={{\n              fontFamily: loginfontFamily,\n              fontSize: \"14px\",\n              cursor: \"pointer\",\n              position: \"relative\",\n              margin: \"5px\",\n              backgroundColor: buttonColor,\n              borderRadius: \"8px\",\n              color: buttonFontColor,\n              border: 0,\n              outline: \"none\",\n              WebkitTransition: \"none\",\n              transition: \"none\",\n              padding: \"0.7em 1.7em\",\n            }}\n            onClick={goToLogin}\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledLogin;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledLogin from \"./StyledLogin\";\nimport { EngineContext } from \"../../contexts/EngineProvider\";\n\nconst Login = ({ config, ...rest }) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const { errorCode } = useContext(EngineContext);\n\n  return (\n    <div style={{ display: errorCode === -1 ? \"\" : \"none\" }}>\n      {config && errorCode && <StyledLogin config={config} {...rest} />}\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  config: PropTypes.object,\n  header: PropTypes.string,\n  body: PropTypes.string,\n  bodySub: PropTypes.string,\n  size: PropTypes.oneOf([\"tiny\", \"small\", \"medium\", \"large\", \"xlarge\"]),\n  buttonText: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  buttonFontColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  logo: PropTypes.string,\n  logoHeight: PropTypes.string,\n  logoWidth: PropTypes.string,\n  header: PropTypes.string,\n  loginfontFamily: PropTypes.string,\n};\n\nLogin.defaultProps = {\n  config: null,\n  logo: null,\n  logoHeight: null,\n  logoWidth: null,\n  header: \"Welcome to your motor js mashup\",\n  body: \"Please log on to access your application\",\n  bodySub: \"\",\n  size: \"medium\",\n  buttonText: \"Login\",\n  backgroundColor: \"white\",\n  buttonFontColor: \"white\",\n  buttonColor: \"#ff6961\",\n  loginfontFamily: \"Inter,sans-serif\",\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst StyledNotConnected = ({\n  header,\n  body,\n  size,\n  buttonText,\n  backgroundColor,\n  buttonFontColor,\n  buttonColor,\n  loginfontFamily,\n}) => {\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: 1040,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundColor: \"rgba(105, 105, 105, 0.8)\",\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          position: \"relative\",\n          margin: 0.2,\n          padding: \"5px\",\n          backgroundColor,\n          border: \"1px solid gray\",\n          borderRadius: \"8px\",\n          width: \"30%\",\n          minWidth: \"350px\",\n          top: \"30%\",\n          left: \"35%\",\n          alignSelf: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: \"-webkit-box\",\n            // display: \"-webkit-flex\",\n            // display: \"-ms-flexbox\",\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            borderBottom: \"solid 1px #ced4da\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"row\",\n            msFlexDirection: \"row\",\n            flexDirection: \"row\",\n            WebkitFlex: \"0 0 auto\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div size={size} style={{ padding: \"0.8rem\", fontSize: \"16px\" }}>\n            {header}\n          </div>\n        </div>\n        <div\n          focusable={false}\n          width=\"100%\"\n          // justifyContent=\"center\"\n          align=\"center\"\n          direction=\"column\"\n          padding=\"0.8rem\"\n        >\n          <div\n            size={size}\n            style={{\n              padding: \"0.6rem\",\n              fontSize: \"14px\",\n              fontFamily: loginfontFamily,\n            }}\n          >\n            {body}\n          </div>\n          <button\n            style={{\n              fontFamily: loginfontFamily,\n              fontSize: \"14px\",\n              cursor: \"pointer\",\n              position: \"relative\",\n              margin: \"5px\",\n              backgroundColor: buttonColor,\n              borderRadius: \"8px\",\n              color: buttonFontColor,\n              border: 0,\n              outline: \"none\",\n              WebkitTransition: \"none\",\n              transition: \"none\",\n              padding: \"0.7em 1.7em\",\n            }}\n            // eslint-disable-next-line  no-restricted-globals\n            onClick={() => location.reload()}\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledNotConnected;\n","import { useState } from \"react\";\nconst enigma = require(\"enigma.js\");\nconst schema = require(\"enigma.js/schemas/12.170.2.json\");\nconst SenseUtilities = require(\"enigma.js/sense-utilities\");\n\nconst MAX_RETRIES = 3;\n\nfunction useEngine(config) {\n  const responseInterceptors = [\n    {\n      // We only want to handle failed responses from QIX Engine:\n      onRejected: function retryAbortedError(sessionReference, request, error) {\n        console.warn(\n          \"Captured Request: Rejected\",\n          `Error Code: ${error.code} : ${error}`\n        );\n        // We only want to handle aborted QIX errors:\n        if (\n          error.code === schema.enums.LocalizedErrorCode.LOCERR_GENERIC_ABORTED\n        ) {\n          // We keep track of how many consecutive times we have tried to do this call:\n          request.tries = (request.tries || 0) + 1;\n          console.warn(`Captured Request: Retry #${request.tries}`);\n          // We do not want to get stuck in an infinite loop here if something has gone\n          // awry, so we only retry until we have reached MAX_RETRIES:\n          if (request.tries <= MAX_RETRIES) {\n            return request.retry();\n          }\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_GENERIC_INVALID_PARAMETERS\n        ) {\n          return error.code;\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_HC_MODAL_OBJECT_ERROR\n        ) {\n          return error.code;\n        }\n        // If it was not an aborted QIX call, or if we reached MAX_RETRIES, we let the error\n        // trickle down to potential other interceptors, and finally down to resolving/rejecting\n        // the initial promise that the user got when invoking the QIX method:\n        console.warn(error);\n\n        return this.Promise.reject(error);\n      },\n    },\n  ];\n\n  const [engineError, setEngineError] = useState(false);\n  const [errorCode, seErrorCode] = useState(null);\n  const [engine, setEngine] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const tenantUri = config.host;\n        const webIntegrationId = config.webIntId;\n\n        const fetchResult = await fetch(\n          `https://${tenantUri}/api/v1/csrf-token`,\n          {\n            mode: \"cors\", // cors must be enabled\n            credentials: \"include\", // credentials must be included\n            headers: {\n              \"qlik-web-integration-id\": webIntegrationId,\n              \"content-type\": \"application/json\",\n            },\n          }\n        ).catch((error) => {\n          console.log(\"caught failed fetch\", error);\n        });\n\n        const csrfToken = fetchResult.headers.get(\"qlik-csrf-token\");\n        if (csrfToken == null) {\n          console.log(\"Not logged in\");\n          seErrorCode(-1);\n\n          return -1;\n        }\n        const session = enigma.create({\n          schema,\n          url: `wss://${tenantUri}/app/${config.appId}?qlik-web-integration-id=${webIntegrationId}&qlik-csrf-token=${csrfToken}`,\n          createSocket: (url) => new WebSocket(url),\n          responseInterceptors,\n        });\n        session.on(\"suspended\", () => {\n          console.warn(\"Captured session suspended\");\n        });\n        session.on(\"error\", () => {\n          console.warn(\"Captured session error\");\n        });\n        session.on(\"closed\", () => {\n          console.warn(\"Session was closed\");\n          seErrorCode(-3);\n\n          return -3;\n        });\n        const _global = await session.open();\n        const _doc = await _global.openDoc(config.appId);\n        setEngine(_doc);\n        seErrorCode(1);\n\n        return 1;\n      }\n      if (config) {\n        const myConfig = config;\n        const url = SenseUtilities.buildUrl(myConfig);\n        try {\n          const session = enigma.create({\n            schema,\n            url,\n            responseInterceptors,\n          });\n          session.on(\"suspended\", () => {\n            console.warn(\"Captured session suspended\");\n          });\n          session.on(\"error\", () => {\n            console.warn(\"Captured session error\");\n          });\n          session.on(\"closed\", () => {\n            console.warn(\"Session was closed\");\n            seErrorCode(-3);\n\n            return -3;\n          });\n          const _global = await session.open();\n          const _doc = await _global.openDoc(config.appId);\n          setEngine(_doc);\n          seErrorCode(1);\n\n          return 1;\n        } catch (err) {\n          console.warn(\"Captured Error\", err);\n          if (err.code === 1003) {\n            setEngineError(\"No engine. App Not found.\");\n          }\n          seErrorCode(-2);\n\n          return -2;\n        }\n      }\n    })();\n  }, []);\n\n  return { engine, engineError, errorCode };\n}\n\nexport default useEngine;","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledNotConnected from \"./StyledNotConnected\";\nimport { EngineContext } from \"../../contexts/EngineProvider\";\nimport useEngine from \"../../hooks/useEngine\";\n\nconst NotConnected = ({ config, ...rest }) => {\n  // const { errorCode } = useContext(EngineContext) || useEngine(myConfig);\n  const engineContext = useContext(EngineContext);\n  const engineConfigContext = useEngine(config);\n  const { errorCode } = engineContext || engineConfigContext;\n\n  return (\n    <div\n      // errorCode={errorCode}\n      style={{ display: errorCode === -3 ? \"\" : \"none\" }}\n    >\n      {config && errorCode && <StyledNotConnected {...rest} />}\n    </div>\n  );\n};\n\nNotConnected.propTypes = {\n  header: PropTypes.string,\n  body: PropTypes.string,\n  size: PropTypes.oneOf([\"tiny\", \"small\", \"medium\", \"large\", \"xlarge\"]),\n  buttonText: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  buttonFontColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  loginfontFamily: PropTypes.string,\n};\n\nNotConnected.defaultProps = {\n  header: \"Connection to server lost\",\n  body: \"Please reload the page to refresh the dashboard\",\n  size: \"medium\",\n  buttonText: \"Reload Page\",\n  backgroundColor: \"white\",\n  buttonFontColor: \"white\",\n  buttonColor: \"#ff6961\",\n  loginfontFamily: \"Inter,sans-serif\",\n};\n\nexport default NotConnected;\n","export const isObject = (item) =>\n  item && typeof item === \"object\" && !Array.isArray(item);\n\nexport const deepFreeze = (obj) => {\n  Object.keys(obj).forEach(\n    (key) => key && isObject(obj[key]) && Object.freeze(obj[key])\n  );\n\n  return Object.freeze(obj);\n};\n\nexport const deepMerge = (target, ...sources) => {\n  if (!sources.length) {\n    return target;\n  }\n  // making sure to not change target (immutable)\n  const output = { ...target };\n  sources.forEach((source) => {\n    if (isObject(source)) {\n      Object.keys(source).forEach((key) => {\n        if (isObject(source[key])) {\n          if (!output[key]) {\n            output[key] = { ...source[key] };\n          } else {\n            output[key] = deepMerge(output[key], source[key]);\n          }\n        } else {\n          output[key] = source[key];\n        }\n      });\n    }\n  });\n\n  return output;\n};\n","import { useCallback, useRef, useReducer, useEffect, useContext } from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: { qData, qRData, qLayout, selections },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        qData,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: null,\n  qHyperCubeDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 1000,\n  },\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  qInterColumnSortOrder: [],\n  qSuppressZero: false,\n  qSortByExpression: 0,\n  qSuppressMissing: true,\n  qExpression: null,\n  getQRData: false,\n  qSortByNumeric: -1,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qOtherTotalSpec: \"\",\n};\n\nconst useHyperCube = (props) => {\n  const {\n    cols,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSortByNumeric,\n    qSortByExpression,\n    qSuppressMissing,\n    qExpression,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { qData, qRData, qLayout, selections } = state;\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const qObject = useRef(null);\n\n  const qPage = useRef(qPageProp);\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = {\n      qInfo: { qType: \"visualization\" },\n    };\n\n    if (qHyperCubeDef) {\n      const _qHyperCubeDef = qHyperCubeDef;\n      if (cols && cols[1]) {\n        _qHyperCubeDef.qMeasures[0].qDef = {\n          qDef: cols[1],\n        };\n      }\n      if (cols && cols[0])\n        _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n      qProp.qInfo.qType = \"HyperCube\";\n      qProp.qHyperCubeDef = _qHyperCubeDef;\n\n      return qProp;\n    }\n    const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n    const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n    let sortIndex = 0;\n\n    const qDimensions = cols\n      .filter((col, i) => {\n        const isDimension =\n          (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n          (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"dimension\") ||\n          (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n        if (isDimension && !qInterColumnSortOrderSet) {\n          myqInterColumnSortOrder[i] = sortIndex;\n          sortIndex += 1;\n        }\n\n        return isDimension;\n      })\n      .map((col) => {\n        if (typeof col === \"string\") {\n          return {\n            qDef: {\n              qFieldDefs: [col],\n              qSortCriterias: [\n                {\n                  qSortByAscii,\n                  qSortByLoadOrder,\n                },\n              ],\n            },\n            qNullSuppression: true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n        if (typeof col === \"object\" && !col.qLibraryId) {\n          return {\n            qDef: {\n              qFieldDefs: [col.qField],\n              qFieldLabels: [col.qLabel],\n              qSortCriterias: col.qSortCriterias\n                ? [col.qSortCriterias]\n                : [\n                    {\n                      qSortByLoadOrder,\n                      qSortByAscii,\n                    },\n                  ],\n            },\n            qOtherTotalSpec: totalSpec,\n            qOtherLabel:\n              qOtherTotalSpec !== undefined\n                ? qOtherTotalSpec.qOtherLabel\n                : \"Others\",\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qNullSuppression: col.qNullSuppression\n              ? col.qNullSuppression\n              : true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n        if (typeof col === \"object\" && col.qLibraryId) {\n          return {\n            qLibraryId: col.qLibraryId,\n            qType: col.qType,\n            qOtherTotalSpec: totalSpec,\n            qOtherLabel:\n              qOtherTotalSpec !== undefined\n                ? qOtherTotalSpec.qOtherLabel\n                : \"Others\",\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qNullSuppression: col.qNullSuppression\n              ? col.qNullSuppression\n              : true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n\n        return col;\n      });\n\n    const qMeasures = cols\n      .filter((col, i) => {\n        const isMeasure =\n          (typeof col === \"string\" && col.startsWith(\"=\")) ||\n          (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"measure\") ||\n          (typeof col === \"object\" && col.qField.startsWith(\"=\"));\n        if (isMeasure && !qInterColumnSortOrderSet) {\n          myqInterColumnSortOrder[i] = sortIndex;\n          sortIndex += 1;\n        }\n\n        return isMeasure;\n      })\n      .map((col) => {\n        if (typeof col === \"string\") {\n          return {\n            qDef: {\n              qDef: col,\n              qNumFormat: col.qNumFormat,\n            },\n            qSortBy: {\n              qSortByNumeric,\n              qSortByExpression,\n              qExpression,\n              qSuppressMissing,\n            },\n          };\n        }\n        if (typeof col === \"object\") {\n          return {\n            qDef: {\n              qDef: col.qField,\n              qLabel: col.qLabel,\n              qNumFormat: {\n                qType: col.qNumType || \"U\",\n                qUseThou: 1,\n                qFmt: col.qNumFmt,\n                qDec: \".\",\n                qThou: \",\",\n              },\n            },\n            qSortBy: {\n              qSortByNumeric,\n              qSortByExpression,\n              qExpression,\n              qSuppressMissing,\n            },\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qChartType: col.qChartType,\n            qShowPoints: col.qShowPoints,\n            qCurve: col.qCurve,\n            qFillStyle: col.qFillStyle,\n            qLegendShape: col.qLegendShape,\n          };\n        }\n\n        return col;\n      });\n\n    qProp.qHyperCubeDef = {\n      qDimensions,\n      qMeasures,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSuppressMissing,\n      qColumnOrder,\n      qCalcCondition,\n    };\n\n    return qProp;\n  }, [\n    cols,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    const qDataPages = await qObject.current.getHyperCubeData(\n      \"/qHyperCubeDef\",\n      [qPage.current]\n    );\n\n    return qDataPages[0];\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const update = useCallback(\n    async (measureInfo) => {\n      const _qLayout = await getLayout();\n      const _qData = await getData();\n      if (_qData && _isMounted.current) {\n        const _selections = _qData.qMatrix.filter(\n          (row) => row[0].qState === \"S\"\n        );\n\n        if (measureInfo) {\n          measureInfo.map((d, i) => {\n            if (_qLayout.qHyperCube.qMeasureInfo[i]) {\n              _qLayout.qHyperCube.qMeasureInfo[i].qChartType = d.qChartType;\n              _qLayout.qHyperCube.qMeasureInfo[i].qShowPoints = d.qShowPoints;\n              _qLayout.qHyperCube.qMeasureInfo[i].qCurve = d.qCurve;\n              _qLayout.qHyperCube.qMeasureInfo[i].qFillStyle = d.qFillStyle;\n              _qLayout.qHyperCube.qMeasureInfo[i].qLegendShape = d.qLegendShape;\n              // _qLayout.qHyperCube.qMeasureInfo[i].qLegendShape =\n              //   d.qLegendShape === \"dashed\" ? \"5,2\" : null;\n            }\n          });\n        }\n\n        dispatch({\n          type: \"update\",\n          payload: {\n            qData: _qData,\n            qLayout: _qLayout,\n            selections: _selections,\n          },\n        });\n      } else if (_isMounted.current) {\n        dispatch({\n          type: \"update\",\n          payload: {\n            qData: _qData,\n            qLayout: _qLayout,\n          },\n        });\n      }\n      if (getQRData) {\n        const _qRData = await getReducedData();\n        if (_isMounted.current) {\n          dispatch({\n            type: \"updateReducedData\",\n            payload: { qRData: _qRData },\n          });\n        }\n      }\n    },\n    [getData, getLayout, getQRData, getReducedData]\n  );\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (qElemNumber, _selections, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        qElemNumber,\n        _selections,\n        toggle\n      ),\n    []\n  );\n  // const select = useCallback(\n  //   (qElemNumber, _selections, toggle = true) =>\n  //     qObject.current.selectHyperCubeValues(\n  //       '/qHyperCubeDef',\n  //       qElemNumber,\n  //       _selections,\n  //       toggle\n  //     ),\n  //   []\n  // );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    beginSelections,\n    endSelections,\n    qLayout,\n    qData,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n  };\n};\n\nexport default useHyperCube;\n","import { useCallback, useRef, useReducer, useEffect, useContext } from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst initialState = {\n  qDoc: null,\n  qObject: null,\n  qData: null,\n  listData: null,\n  selections: null,\n  selectionsId: null,\n};\n\nfunction reducer(state, action) {\n  const {\n    payload: { qData, listData, selections, selectionsId, qDoc },\n    type,\n  } = action;\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        qData,\n        listData,\n        selections,\n        selectionsId\n      };\n    case \"init\":\n      return {\n        ...state,\n        qDoc,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  autoSortByState: 1,\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  dimension: null,\n  label: null,\n  qListObjectDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 1,\n    qHeight: 10000,\n  },\n};\n\nconst useList = (props) => {\n  const {\n    qPage: qPageProp,\n    dimension,\n    qListObjectDef,\n    qSortByAscii,\n    qSortByLoadOrder,\n    autoSortByState,\n  } = deepMerge(initialProps, props);\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { listData, selections, selectionsId } = state;\n\n  const qObject = useRef(null);\n  const qPage = useRef(qPageProp);\n\n  /** Generate the Definition file */\n  const generateQProp = useCallback(\n    (currentColumn = 0) => {\n      const qProp = { qInfo: { qType: \"visualization\" } };\n      if (qListObjectDef) {\n        qProp.qListObjectDef = qListObjectDef;\n      } else {\n        const qDimensions = dimension\n          .filter(\n            (col) =>\n              (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n              (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n              (typeof col === \"object\" &&\n                col.qLibraryId &&\n                col.qType &&\n                col.qType === \"dimension\")\n          )\n          .map((col) => {\n            if (typeof col === \"string\") {\n              return {\n                qDef: {\n                  qFieldDefs: [col],\n                  qSortCriterias: [{ qSortByLoadOrder, qSortByAscii }],\n                },\n              };\n            }\n\n            return col;\n          });\n        const qLibraryId = {\n          qLibraryId:\n            typeof dimension[0] === \"object\" && dimension[0].qLibraryId\n              ? dimension[0].qLibraryId\n              : \"\",\n        };\n        const qDef = qDimensions[currentColumn];\n        qProp.qListObjectDef = {\n          ...qLibraryId,\n          ...qDef,\n          qShowAlternatives: true,\n          qAutoSortByState: { qDisplayNumberOfRows: autoSortByState },\n        };\n      }\n\n      return qProp;\n    },\n    [autoSortByState, dimension, qListObjectDef, qSortByAscii, qSortByLoadOrder]\n  );\n\n  // Edit to extract all data\n  const getData = useCallback(async () => {\n    const qDataPages = await qObject.current.getListObjectData(\n      \"/qListObjectDef\",\n      [qPage.current]\n    );\n    return qDataPages[0];\n  }, []);\n\n  const structureData = useCallback(async (_qData) => {\n    if (!listData) {\n      \n      if (!_qData) return null;\n      let _listData = []\n      _qData.qMatrix.map((d, i) => {\n        _listData.push({\n          key: d[0].qElemNumber,\n          text: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n          number: d[0].qNumber,\n          state: d[0].qState,\n          value: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n          label: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        });\n      });\n      // Get Selections\n      const _selections = _listData && _listData.filter(row => row.state === \"S\");\n      // Get Selection ID\n      const _selId = _selections && _selections.map(d => d.key);\n\n      return { _selId, _selections, _listData };\n    }\n  }, [listData]);\n\n  /*const getSelections = (data) => {\n    console.log('GET SEL')\n    const sel = data.qMatrix.filter((row) => row[0].qState === \"S\");\n    const arr = [];\n    sel.map((d) => {\n      arr.push({\n        key: d[0].qElemNumber,\n        text: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        number: d[0].qNumber,\n        state: d[0].qState,\n        value: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        label: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n      });\n    });\n    return arr;\n  };\n\n  const getSelectionsId = (data) => {\n    const sel = data.qMatrix.filter((row) => row[0].qState === \"S\");\n    const arr = [];\n    sel.map((d) => {\n      arr.push(d[0].qElemNumber);\n    });\n    return arr;\n  };\n  */\n\n  const update = useCallback(async () => {\n    const _qData = await getData();\n    const { _selId, _selections, _listData } = await structureData(_qData);\n    if (_qData && _isMounted.current) {\n     // const _selections = await getSelections(_qData);\n     // const _selId = await getSelectionsId(_qData);\n      dispatch({\n        type: \"update\",\n        payload: {\n          listData: _listData,\n          selections: _selections,\n          selectionsId: _selId\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          listData: _listData,\n        },\n      });\n    }\n  }, [getData, structureData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = { ...qPage.current, ...newPage };\n\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = async () => {\n    // Make sure we close all other open selections. We usually get that when we have morethan one dropDown in the same page and while one is open, we click on the second one\n    await state.qDoc.abortModal(true);\n    await qObject.current.beginSelections([\"/qListObjectDef\"]);\n  };\n\n  const endSelections = async (qAccept) => {\n    // await state.qEngine.abortModal(true)\n    await qObject.current.endSelections(qAccept);\n  };\n\n  const select = useCallback(\n    (qElemNumber, toggle = true, ignoreLock = false) =>\n      qObject.current.selectListObjectValues(\n        \"/qListObjectDef\",\n        qElemNumber,\n        toggle,\n        ignoreLock\n      ),\n    []\n  );\n\n  const searchListObjectFor = useCallback(\n    (string) => qObject.current.searchListObjectFor(\"/qListObjectDef\", string),\n    []\n  );\n\n  const acceptListObjectSearch = useCallback(\n    (ignoreLock = false) =>\n      qObject.current.acceptListObjectSearch(\n        \"/qListObjectDef\",\n        true,\n        ignoreLock\n      ),\n    []\n  );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  const clearSelections = useCallback(\n    () => qObject.current.clearSelections(\"/qListObjectDef\"),\n    []\n  );\n\n  useEffect(() => {\n    if (!engine || qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      // ToDo: make sure init is not called on every render - convert qDoc to qEngine\n      if (_isMounted.current) dispatch({ type: \"init\", payload: { qDoc } });\n      qObject.current.on(\"changed\", () => {\n        update();\n      });\n      update();\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    listData,\n    changePage,\n    select,\n    beginSelections,\n    endSelections,\n    searchListObjectFor,\n    acceptListObjectSearch,\n    applyPatches,\n    selections,\n    selectionsId,\n    clearSelections,\n    motorListProps: {\n      clearSelections,\n      selections,\n      select,\n    }\n  };\n};\n\nexport default useList;\n","export function hyperCubeChartTransform(\n  qData,\n  qHyperCube,\n  // useNumonFirstDim = false,\n  cols\n) {\n  const qNoOfDiemnsions =\n    qHyperCube !== undefined ? qHyperCube.qDimensionInfo.length : 1;\n  const qNoOfMeasures =\n    qHyperCube !== undefined ? qHyperCube.qMeasureInfo.length : 1;\n\n  const measureNames = getMeasureNames(qHyperCube);\n  const dimensionNames = getDimensionNames(qHyperCube);\n\n  const transformedData = qData.qMatrix.map((d, i) => {\n    let data = {};\n    let attrExpItems = {};\n    d.forEach((item, index) => {\n      if (index < qNoOfDiemnsions) {\n        const attrExp = d[index].qAttrExps;\n        if (typeof attrExp !== \"undefined\") {\n          const items = attrExp.qValues;\n\n          items.forEach((qAttrExprInfoItem, itemIndex) => {\n            if (qAttrExprInfoItem.qText !== undefined)\n              attrExpItems[\n                qHyperCube.qDimensionInfo[index].qAttrExprInfo[itemIndex].id\n              ] =\n                qAttrExprInfoItem.qNum !== \"NaN\"\n                  ? qAttrExprInfoItem.qNum\n                  : qAttrExprInfoItem.qText;\n          });\n        }\n      } else {\n        const attrExp = d[index].qAttrExps;\n        if (typeof attrExp !== \"undefined\") {\n          const items = attrExp.qValues;\n\n          items.forEach((qAttrExprInfoItem, itemIndex) => {\n            if (qAttrExprInfoItem.qText !== undefined)\n              attrExpItems[\n                qHyperCube.qMeasureInfo[index - -qNoOfDiemnsions].qAttrExprInfo[\n                  itemIndex\n                ].id\n              ] =\n                qAttrExprInfoItem.qNum !== \"NaN\"\n                  ? qAttrExprInfoItem.qNum\n                  : qAttrExprInfoItem.qText;\n          });\n        }\n      }\n\n      const pair =\n        index < qNoOfDiemnsions\n          ? {\n              [dimensionNames[index]]: d[index].qText,\n              [`elemNumber${index !== 0 ? index : \"\"}`]: d[index].qElemNumber,\n              key: i,\n\n              label: d[index].qText,\n            }\n          : {\n              [measureNames[index - qNoOfDiemnsions]]:\n                cols[index].qNumFormat ||\n                cols[index].qNumType ||\n                cols[index].qNumFmt\n                  ? d[index].qText\n                  : d[index].qNum !== \"NaN\"\n                  ? d[index].qNum\n                  : 0,\n              key: i,\n            };\n\n      data = { ...data, ...pair, ...attrExpItems };\n    });\n    return data;\n  });\n\n  return transformedData;\n}\n\nexport function hyperCubeTransform(\n  qData,\n  qHyperCube,\n  // useNumonFirstDim = false,\n  cols\n) {\n  const transformedData = qData.qMatrix.map((d, i) => {\n    let data = {};\n    d.forEach((item, index) => {\n      const name = cols[index].dataKey;\n      const pair = {\n        [name]: {\n          text: d[index].qText,\n          number: d[index].qNum,\n          elemNumber: d[index].qElemNumber,\n          state: d[index].qState,\n          attrExp: d[index].qAttrExps,\n          columnId: index,\n        },\n        key: i,\n      };\n      data = { ...data, ...pair };\n    });\n    return data;\n  });\n\n  return transformedData;\n}\n\nexport function multiDimHyperCubeTransform(qData, qHyperCube) {\n  const qNoOfDimensions =\n    qHyperCube !== undefined ? qHyperCube.qDimensionInfo.length : 1;\n\n  const measureNames = getMeasureNames(qHyperCube);\n  const dimensionNames = getDimensionNames(qHyperCube);\n\n  let parentText = qData.qMatrix[0][0].qText;\n  let transformedData = [];\n  let series = {};\n\n  qData.qMatrix.map((d, i) => {\n    let key = null;\n    let value = null;\n    let elemNumber = null;\n\n    d.forEach((item, index) => {\n      if (index < qNoOfDimensions && index !== 0) {\n        key = d[index].qText;\n        elemNumber = d[index].qElemNumber;\n      } else if (index !== 0) {\n        value = d[index].qNum;\n      }\n    });\n\n    if (parentText !== d[0].qText) {\n      if (Object.keys(series).length === 0) {\n        series[dimensionNames[0]] = d[0].qText;\n        series[\"qElemNumber\"] = d[0].qElemNumber;\n        series[key] = value;\n        series[`${key}-qElemNumber`] = elemNumber;\n      }\n      transformedData.push(series);\n      series = {};\n    } else {\n      series[dimensionNames[0]] = d[0].qText;\n      series[\"qElemNumber\"] = d[0].qElemNumber;\n      series[key] = value;\n      series[`${key}-qElemNumber`] = elemNumber;\n      series[\"label\"] = d[0].qText;\n    }\n    parentText = d[0].qText;\n  });\n  transformedData.push(series);\n  return transformedData;\n}\n\nexport const getMeasureNames = (qHyperCube) =>\n  qHyperCube.qMeasureInfo.map((d, i) => {\n    const qMeasurePosition = i !== 0 ? i : \"\";\n\n    return d.qFallbackTitle;\n    /*.startsWith(\"=\")\n      ? `value${qMeasurePosition}`\n      : d.qFallbackTitle;*/\n  });\n\nexport const getDimensionNames = (qHyperCube) =>\n  qHyperCube.qDimensionInfo.map((d, i) => d.qFallbackTitle);\n\nexport const getDimensionCategories = (data) => [\n  ...new Set(\n    Array.prototype.concat(\n      ...data.map((d) => d[Object.keys(d)[2]].map((d) => d[Object.keys(d)[0]]))\n    )\n  ),\n];\n\nexport const validData = (qLayout) => {\n  let isValid = true;\n  let dataError = \"\";\n  const { qDimensionInfo, qMeasureInfo } =\n    qLayout.qHyperCube || qLayout.qListObject;\n\n  const DimCheck = () => {\n    //check if an array, to work with HyperCube & ListObject\n    let _qDimensionInfo = Array.isArray(qDimensionInfo)\n      ? qDimensionInfo\n      : [qDimensionInfo];\n    _qDimensionInfo.forEach((qData) => {\n        if (qData.qError) {\n          console.error('There is an issue with your dimension. Please fix this in order to receive the correct data. ', qData.qError)\n        }\n    });\n  };\n\n  const MeasCheck = () => {\n    qMeasureInfo.forEach((qData) => {\n      if (\n        (isNaN(qData.qMax) && isNaN(qData.qMin)) \n      ) {\n        console.error('There is an issue with your measure. It is not returning any data.')\n      }\n    });\n  };\n  \n  if (qDimensionInfo && qMeasureInfo) {\n    DimCheck();\n    MeasCheck();\n  } else if (qDimensionInfo && !qMeasureInfo) {\n    DimCheck();\n  } else if (!qDimensionInfo && qMeasureInfo) {\n    MeasCheck();\n  } else { }\n\n};\n\nexport const numericSortDirection = (sortDirection, defaultSetting = 0) => {\n  let direction;\n  switch (sortDirection.toUpperCase()) {\n    case \"ASC\" || \"ASCENDING\":\n      direction = 1;\n      break;\n    case \"DESC\" || \"DESCENDING\":\n      direction = -1;\n      break;\n    default:\n      direction = defaultSetting;\n  }\n\n  return direction;\n};\n\nexport const orderCols = (cols) => {\n  let dim = [];\n  let meas = [];\n\n  const getDims = (cols) => {\n    cols\n      .filter((col, i) => {\n        const isDimension =\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"dimension\") ||\n          Array.isArray(col.qField) ||\n          (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n        return isDimension;\n      })\n      .map((col) => {\n        dim.push(col);\n        return col;\n      });\n  };\n\n  const getMeas = (cols) => {\n    cols\n      .filter((col, i) => {\n        const isMeasure =\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"measure\") ||\n          (typeof col === \"object\" &&\n            !Array.isArray(col.qField) &&\n            col.qField.startsWith(\"=\"));\n\n        return isMeasure;\n      })\n      .map((col) => {\n        meas.push(col);\n        return col;\n      });\n  };\n\n  //get dimensions\n  getDims(cols);\n  // get measures\n  getMeas(cols);\n  //concatenate dimensions and measures\n  const orderedCols = dim.concat(meas);\n\n  return orderedCols;\n};\n\nexport const getHeader = (qLayout, cols, data) => {\n  if (qLayout) {\n    return [\n      ...qLayout.qHyperCube.qDimensionInfo.map((col, index) => ({\n        title: col.qFallbackTitle,\n        dataIndex: cols[index].dataKey,\n        dataKey: cols[index].dataKey,\n        render: cols[index].render,\n        defaultSortDesc: col.qSortIndicator === \"D\",\n        qInterColumnIndex: index,\n        qPath: `/qHyperCubeDef/qDimensions/${index}`,\n        qSortIndicator: col.qSortIndicator,\n        qReverseSort: col.qReverseSort,\n        qGrandTotals: { qText: null, qNum: null },\n        qColumnType: \"dim\",\n      })),\n      ...qLayout.qHyperCube.qMeasureInfo.map((col, index) => ({\n        title: col.qFallbackTitle,\n        dataIndex:\n          cols[qLayout.qHyperCube.qDimensionInfo.length + index].dataKey,\n        dataKey: cols[qLayout.qHyperCube.qDimensionInfo.length + index].dataKey,\n        render: cols[qLayout.qHyperCube.qDimensionInfo.length + index].render,\n        defaultSortDesc: col.qSortIndicator === \"D\",\n        qInterColumnIndex: index + qLayout.qHyperCube.qDimensionInfo.length,\n        qPath: `/qHyperCubeDef/qMeasures/${index}`,\n        qSortIndicator: col.qSortIndicator,\n        qReverseSort: col.qReverseSort,\n        qGrandTotals: qLayout.qHyperCube.qGrandTotalRow[index],\n        qColumnType: \"meas\",\n      })),\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport default hyperCubeTransform;\n","import {\n  useCallback,\n  useRef,\n  useReducer,\n  useEffect,\n  useContext,\n  useState,\n} from \"react\";\nimport { deepMerge } from \"../utils/object\";\n\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport {\n  hyperCubeChartTransform,\n  multiDimHyperCubeTransform,\n  validData,\n} from \"../utils/hyperCubeUtilities\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: {\n      title,\n      subTitle,\n      metrics,\n      qData,\n      mData,\n      nameKey,\n      valueKey,\n      qListData,\n      dataList,\n      dataKeys,\n      qRData,\n      qLayout,\n      selections,\n    },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        title,\n        subTitle,\n        metrics,\n        qData,\n        mData,\n        nameKey,\n        valueKey,\n        qListData,\n        dataList,\n        dataKeys,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: [],\n  qLists: null,\n  qHyperCubeDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 1000,\n  },\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  qInterColumnSortOrder: [],\n  qSuppressZero: false,\n  qSortByExpression: 0,\n  qSuppressMissing: true,\n  qExpression: null,\n  getQRData: false,\n  qSortByNumeric: -1,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qTitle: null,\n  qSubTitle: null,\n  qMetrics: null,\n  qOtherTotalSpec: \"\",\n};\n\nconst useData = (props) => {\n  const {\n    cols,\n    qLists,\n    qTitle,\n    qSubTitle,\n    qMetrics,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSortByNumeric,\n    qSortByExpression,\n    qSuppressMissing,\n    qExpression,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    title,\n    subTitle,\n    metrics,\n    qData,\n    mData,\n    nameKey,\n    valueKey,\n    qListData,\n    dataList,\n    dataKeys,\n    qRData,\n    qLayout,\n    selections,\n  } = state;\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const qObject = useRef(null);\n\n  const qPage = useRef(qPageProp);\n\n  // error trapping\n  const [error, setError] = useState();\n  // page size\n  const [pageSize, setPageSize] = useState(qPage.current.qHeight);\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = {\n      qInfo: { qType: \"visualization\" },\n    };\n\n    if (qMetrics) {\n      qMetrics.map((metric) => {\n        // This will evaluate to a number if nothing supplied.\n        const metricType = metric.qType ? metric.qType : \"qValueExpression\";\n        qProp[metric.qName] = {\n          [metricType]: {\n            qExpr: metric.qExpr,\n          },\n        };\n      });\n    }\n\n    if (qLists) {\n      qProp.qListObjects = [];\n      qLists.map((list) => {\n        const listDef = {\n          qListObjectDef: {\n            qStateName: \"$\",\n            qLibraryId: \"\",\n            qDef: {\n              qFieldDefs: [Object.values(list)[0]],\n              qFieldLabels: [Object.keys(list)[0]],\n              qSortCriterias: [\n                {\n                  qSortByLoadOrder: 1,\n                },\n              ],\n            },\n            qInitialDataFetch: [\n              {\n                qTop: 0,\n                qHeight: 1,\n                qLeft: 0,\n                qWidth: 1,\n              },\n            ],\n          },\n        };\n        qProp.qListObjects.push(listDef);\n      });\n    }\n\n    if (qHyperCubeDef) {\n      const _qHyperCubeDef = qHyperCubeDef;\n      if (cols && cols[1]) {\n        _qHyperCubeDef.qMeasures[0].qDef = {\n          qDef: cols[1],\n        };\n      }\n      if (cols && cols[0])\n        _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n      qProp.qInfo.qType = \"HyperCube\";\n      qProp.qHyperCubeDef = _qHyperCubeDef;\n\n      return qProp;\n    }\n    const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n    const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n    let sortIndex = 0;\n\n    const qDimensions =\n      cols &&\n      cols\n        .filter((col, i) => {\n          const isDimension =\n            (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n            (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n            (typeof col === \"object\" &&\n              col.qLibraryId &&\n              col.qType &&\n              col.qType === \"dimension\") ||\n            (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n          if (isDimension && !qInterColumnSortOrderSet) {\n            myqInterColumnSortOrder[i] = sortIndex;\n            sortIndex += 1;\n          }\n\n          return isDimension;\n        })\n        .map((col) => {\n          if (typeof col === \"string\") {\n            return {\n              qDef: {\n                qFieldDefs: [col],\n                qSortCriterias: [\n                  {\n                    qSortByAscii,\n                    qSortByLoadOrder,\n                  },\n                ],\n              },\n              qNullSuppression: true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n          if (typeof col === \"object\" && !col.qLibraryId) {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n\n            return {\n              qDef: {\n                qFieldDefs: [col.qField],\n                qFieldLabels: [col.qLabel],\n                qSortCriterias: col.qSortCriterias\n                  ? [col.qSortCriterias]\n                  : [\n                      {\n                        qSortByLoadOrder,\n                        qSortByAscii,\n                      },\n                    ],\n              },\n              qOtherTotalSpec: totalSpec,\n              qOtherLabel:\n                qOtherTotalSpec !== undefined\n                  ? qOtherTotalSpec.qOtherLabel\n                  : \"Others\",\n              qAttributeExpressions,\n              qNullSuppression: col.qNullSuppression\n                ? col.qNullSuppression\n                : true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n          if (typeof col === \"object\" && col.qLibraryId) {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n            return {\n              qLibraryId: col.qLibraryId,\n              qType: col.qType,\n              qOtherTotalSpec: totalSpec,\n              qOtherLabel:\n                qOtherTotalSpec !== undefined\n                  ? qOtherTotalSpec.qOtherLabel\n                  : \"Others\",\n              qAttributeExpressions,\n              qNullSuppression: col.qNullSuppression\n                ? col.qNullSuppression\n                : true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n\n          return col;\n        });\n\n    if (qDimensions && qDimensions.length > 1) {\n      const listDef = {\n        qListObjectDef: {\n          qStateName: \"$\",\n          qLibraryId: \"\",\n          qDef: {\n            qFieldDefs: qDimensions[1].qDef.qFieldDefs,\n            qFieldLabels: [\"multiDimDataKeys\"],\n            qSortCriterias: [\n              {\n                qSortByLoadOrder: 1,\n              },\n            ],\n          },\n          qInitialDataFetch: [\n            {\n              qTop: 0,\n              qHeight: 1,\n              qLeft: 0,\n              qWidth: 1,\n            },\n          ],\n        },\n      };\n      if (typeof qProp.qListObjects === \"undefined\") qProp.qListObjects = [];\n\n      qProp.qListObjects.push(listDef);\n    }\n\n    const qMeasures =\n      cols &&\n      cols\n        .filter((col, i) => {\n          const isMeasure =\n            (typeof col === \"string\" && col.startsWith(\"=\")) ||\n            (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n            (typeof col === \"object\" &&\n              col.qLibraryId &&\n              col.qType &&\n              col.qType === \"measure\") ||\n            (typeof col === \"object\" && col.qField.startsWith(\"=\"));\n          if (isMeasure && !qInterColumnSortOrderSet) {\n            myqInterColumnSortOrder[i] = sortIndex;\n            sortIndex += 1;\n          }\n\n          return isMeasure;\n        })\n        .map((col) => {\n          if (typeof col === \"string\") {\n            return {\n              qDef: {\n                qDef: col,\n                qNumFormat: col.qNumFormat,\n              },\n              qSortBy: {\n                qSortByNumeric,\n                qSortByExpression,\n                qExpression,\n                qSuppressMissing,\n              },\n            };\n          }\n          if (typeof col === \"object\") {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n            return {\n              qDef: {\n                qDef: col.qField,\n                qLabel: col.qLabel,\n                qNumFormat: {\n                  qType: col.qNumType || \"U\",\n                  qUseThou: 1,\n                  qFmt: col.qNumFmt,\n                  qDec: \".\",\n                  qThou: \",\",\n                },\n              },\n              qSortBy: {\n                qSortByNumeric,\n                qSortByExpression,\n                qExpression,\n                qSuppressMissing,\n              },\n              qAttributeExpressions,\n            };\n          }\n\n          return col;\n        });\n\n    qProp.qHyperCubeDef = {\n      qDimensions,\n      qMeasures,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSuppressMissing,\n      qColumnOrder,\n      qCalcCondition,\n      qTitle,\n    };\n\n    return qProp;\n  }, [\n    cols,\n    qTitle,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    try {\n      const qDataPages = await qObject.current.getHyperCubeData(\n        \"/qHyperCubeDef\",\n        [qPage.current]\n      );\n      return qDataPages[0];\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getMultiPageData = useCallback(async (numberOfPages) => {\n    const qObjects = qObject.current;\n    let qPages = qPage.current;\n    let qDataPages = null;\n    let qMatrix = [];\n\n    try {\n      for (var i = 0; i < numberOfPages; i++) {\n        qPages = {\n          ...qPages,\n          ...{ qTop: i * 1000 },\n        };\n        qDataPages = await qObjects.getHyperCubeData(\"/qHyperCubeDef\", [\n          qPages,\n        ]);\n\n        qMatrix.push(...qDataPages[0].qMatrix);\n      }\n\n      const qTails = qDataPages[0].qTails;\n      const qArea = qDataPages[0].qArea;\n\n      return { qTails, qMatrix, qArea };\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getListsFromData = useCallback(async (i) => {\n    return await qObject.current.getListObjectData(\n      `/qListObjects/${i}/qListObjectDef`,\n      [qPage.current]\n    );\n  });\n\n  const getListData = useCallback(async (layout) => {\n    if (!layout.qListObjects) return;\n    return await Promise.all(\n      layout.qListObjects.map(async (list, i) => getListsFromData(i))\n    );\n  }, []);\n\n  const getNameKey = useCallback(async (layout) => {\n    if (layout.qHyperCube.qDimensionInfo.length === 0) return null;\n    return layout.qHyperCube.qDimensionInfo[0].qFallbackTitle;\n  }, []);\n\n  const getValueKey = useCallback(async (layout) => {\n    if (layout.qHyperCube.qMeasureInfo.length === 0) return null;\n    return layout.qHyperCube.qMeasureInfo[0].qFallbackTitle;\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const structureData = useCallback(async (layout, data) => {\n    if (\n      (layout.qHyperCube.qDimensionInfo.length === 0 &&\n        layout.qHyperCube.qMeasureInfo.length === 0) ||\n      !data\n    )\n      return;\n\n    const mData =\n      layout.qHyperCube.qDimensionInfo.length === 1\n        ? hyperCubeChartTransform(data, layout.qHyperCube, cols)\n        : multiDimHyperCubeTransform(data, layout.qHyperCube);\n    return mData;\n  }, []);\n\n  const getDataKeys = useCallback(async (listData, measureInfo) => {\n    if (!listData) {\n      return measureInfo.map((measure) => measure.qFallbackTitle);\n    }\n\n    // Get values for the second dimension.\n    const keys = listData.filter(\n      (item) => Object.keys(item)[0] === \"multiDimDataKeys\"\n    );\n\n    return keys[0].multiDimDataKeys;\n  }, []);\n\n  const getDataKeyList = useCallback(async (listData, layout) => {\n    const listDetail = [];\n\n    if (!layout.qListObjects) return null;\n\n    layout.qListObjects.map((item, index) => {\n      const obj = {};\n      const key = item.qListObject.qDimensionInfo.qFallbackTitle;\n      const items = listData[index][0]\n        ? listData[index][0].qMatrix.map((item) => item[0].qText)\n        : null;\n\n      obj[key] = items;\n      listDetail.push(obj);\n    });\n\n    return listDetail;\n  }, []);\n\n  const getTitle = useCallback(async (layout) => {\n    return layout.qHyperCube.qTitle;\n  }, []);\n\n  const getMetrics = useCallback(async (layout, metrics) => {\n    if (!metrics) return;\n    let metricObj = {};\n\n    metrics.map((metric) => {\n      metricObj[metric.qName] = layout[metric.qName];\n    });\n    return metricObj;\n  }, []);\n\n  const update = useCallback(async () => {\n    const _qLayout = await getLayout();\n    const _qValid = await validData(_qLayout, engine);\n\n    const _qData = await (Math.ceil(_qLayout.qHyperCube.qSize.qcy / pageSize) <=\n    1\n      ? getData()\n      : getMultiPageData(Math.ceil(_qLayout.qHyperCube.qSize.qcy / pageSize)));\n\n    const _qListData = await getListData(_qLayout);\n    const _mData = await structureData(_qLayout, _qData);\n\n    const _nameKey = await getNameKey(_qLayout);\n    const _valueKey = await getValueKey(_qLayout);\n    const _dataList = await getDataKeyList(_qListData, _qLayout);\n\n    const _dataKeys = await getDataKeys(\n      _dataList,\n      _qLayout.qHyperCube.qMeasureInfo\n    );\n\n    const _qTitle = await getTitle(_qLayout);\n    const _qSubTitle = qSubTitle;\n\n    const _qMetrics = await getMetrics(_qLayout, qMetrics);\n    if (_qData && _isMounted.current) {\n      const _selections = _qData.qMatrix.filter((row) => row[0].qState === \"S\");\n\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          subTitle: _qSubTitle,\n          qData: _qData,\n          mData: _mData,\n          nameKey: _nameKey,\n          valueKey: _valueKey,\n          qListData: _qListData,\n          dataList: _dataList,\n          dataKeys: _dataKeys,\n          metrics: _qMetrics,\n          qLayout: _qLayout,\n          selections: _selections,\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          subTitle: _qSubTitle,\n          metrics: _qMetrics,\n          qData: _qData,\n          mData: _mData,\n          nameKey: _nameKey,\n          valueKey: _valueKey,\n          qListData: _qListData,\n          dataList: _dataList,\n          dataKeys: _dataKeys,\n          qLayout: _qLayout,\n        },\n      });\n    }\n    if (getQRData) {\n      const _qRData = await getReducedData();\n      if (_isMounted.current) {\n        dispatch({\n          type: \"updateReducedData\",\n          payload: { qRData: _qRData },\n        });\n      }\n    }\n  }, [getData, getLayout, getQRData, getReducedData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (qElemNumber, _selections, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        qElemNumber,\n        _selections,\n        toggle\n      ),\n    []\n  );\n  // const select = useCallback(\n  //   (qElemNumber, _selections, toggle = true) =>\n  //     qObject.current.selectHyperCubeValues(\n  //       '/qHyperCubeDef',\n  //       qElemNumber,\n  //       _selections,\n  //       toggle\n  //     ),\n  //   []\n  // );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  // takes column data and sorted the table, applies reverse sort\n  const handlerChange = useCallback(\n    async (isMeasure, value) => {\n      // If no sort is set, we need to set a default sort order\n      // if (column.qSortIndicator === \"N\") {\n      //   if (column.qPath.includes(\"qDimensions\")) {\n      //     await applyPatches([\n      //       {\n      //         qOp: \"add\",\n      //         qPath: `${column.qPath}/qDef/qSortCriterias`,\n      //         qValue: JSON.stringify([{ qSortByLoadOrder: 1 }]),\n      //       },\n      //     ]);\n      //   }\n      //   if (column.qPath.includes(\"qMeasures\")) {\n      //     await applyPatches([\n      //       {\n      //         qOp: \"add\",\n      //         qPath: `${column.qPath}/qSortBy`,\n      //         qValue: JSON.stringify({ qSortByLoadOrder: 1 }),\n      //       },\n      //     ]);\n      //   }\n      // }\n      await applyPatches([\n        {\n          qOp: \"replace\",\n          qPath: `/qHyperCubeDef/${\n            isMeasure ? \"qMeasures\" : \"qDimensions\"\n          }/0/qDef/${isMeasure ? \"qDef\" : \"qFieldDefs\"}`,\n          qValue: JSON.stringify(isMeasure ? value : [value]),\n        },\n      ]);\n    },\n    [applyPatches, qLayout]\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n  // const dataSet = { data: mData, dataKeys, dataList, nameKey };\n  const dataSet = {};\n\n  if (mData) dataSet.data = mData;\n  if (mData) dataSet.select = select;\n  if (dataKeys && dataKeys.length !== 0) dataSet.dataKeys = dataKeys;\n  if (dataList) dataSet.dataList = dataList;\n  if (nameKey) dataSet.nameKey = nameKey;\n  if (valueKey) dataSet.valueKey = valueKey;\n\n  return {\n    beginSelections,\n    endSelections,\n    qLayout,\n    qData,\n    mData,\n    qListData,\n    dataList,\n    handlerChange,\n    dataKeys,\n    nameKey,\n    // dataSet: { data: mData, dataKeys, dataList, nameKey },\n    dataSet,\n    title,\n    subTitle,\n    metrics,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n  };\n};\n\nexport default useData;\n","\nfunction createDef(\n  cols,\n  qTitle,\n  qHyperCubeDef,\n  qSortByAscii,\n  qSortByLoadOrder,\n  qInterColumnSortOrder,\n  qSuppressZero,\n  qSortByNumeric,\n  qSortByExpression,\n  qSuppressMissing,\n  qExpression,\n  qColumnOrder,\n  qCalcCondition,\n  qOtherTotalSpec,\n  totalSpec\n) {\n  const qProp = {\n    qInfo: { qType: \"visualization\" },\n  };\n\n  if (qHyperCubeDef) {\n    const _qHyperCubeDef = qHyperCubeDef;\n    if (cols && cols[1]) {\n      _qHyperCubeDef.qMeasures[0].qDef = {\n        qDef: cols[1],\n      };\n    }\n    if (cols && cols[0])\n      _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n    qProp.qInfo.qType = \"HyperCube\";\n    qProp.qHyperCubeDef = _qHyperCubeDef;\n\n    return qProp;\n  }\n  const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n  const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n  let sortIndex = 0;\n\n  const qDimensions = cols\n    .filter((col, i) => {\n      const isDimension =\n        (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n        (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n        (typeof col === \"object\" &&\n          col.qLibraryId &&\n          col.qType &&\n          col.qType === \"dimension\") ||\n        Array.isArray(col.qField) ||\n        (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n      if (isDimension && !qInterColumnSortOrderSet) {\n        myqInterColumnSortOrder[i] = sortIndex;\n        sortIndex += 1;\n      }\n\n      return isDimension;\n    })\n    .map((col) => {\n      if (typeof col === \"string\") {\n        return {\n          qDef: {\n            qFieldDefs: [col],\n            qSortCriterias: [\n              {\n                qSortByAscii,\n                qSortByLoadOrder,\n              },\n            ],\n          },\n          qNullSuppression: true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      if (typeof col === \"object\" && !col.qLibraryId) {\n        return {\n          qDef: {\n            qGrouping: col.qGrouping || \"N\",\n            qFieldDefs: !Array.isArray(col.qField)\n              ? [col.qField]\n              : [...col.qField],\n            qFieldLabels: [col.qLabel],\n            qSortCriterias: col.qSortCriterias\n              ? [col.qSortCriterias]\n              : [\n                  {\n                    qSortByLoadOrder,\n                    qSortByAscii,\n                  },\n                ],\n          },\n          qOtherTotalSpec: totalSpec,\n          qOtherLabel:\n            qOtherTotalSpec !== undefined\n              ? qOtherTotalSpec.qOtherLabel\n              : \"Others\",\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qNullSuppression: col.qNullSuppression ? col.qNullSuppression : true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      if (typeof col === \"object\" && col.qLibraryId) {\n        return {\n          qLibraryId: col.qLibraryId,\n          qType: col.qType,\n          qOtherTotalSpec: totalSpec,\n          qOtherLabel:\n            qOtherTotalSpec !== undefined\n              ? qOtherTotalSpec.qOtherLabel\n              : \"Others\",\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qNullSuppression: col.qNullSuppression ? col.qNullSuppression : true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      return col;\n    });\n\n  const qMeasures = cols\n    .filter((col, i) => {\n      const isMeasure =\n        (typeof col === \"string\" && col.startsWith(\"=\")) ||\n        (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n        (typeof col === \"object\" &&\n          col.qLibraryId &&\n          col.qType &&\n          col.qType === \"measure\") ||\n        (typeof col === \"object\" &&\n          !Array.isArray(col.qField) &&\n          col.qField.startsWith(\"=\"));\n      if (isMeasure && !qInterColumnSortOrderSet) {\n        myqInterColumnSortOrder[i] = sortIndex;\n        sortIndex += 1;\n      }\n\n      return isMeasure;\n    })\n    .map((col) => {\n      if (typeof col === \"string\") {\n        return {\n          qDef: {\n            qDef: col,\n            qNumFormat: col.qNumFormat,\n          },\n          qSortBy: {\n            qSortByNumeric,\n            qSortByExpression,\n            qExpression,\n            qSuppressMissing,\n          },\n        };\n      }\n      if (typeof col === \"object\") {\n        return {\n          qDef: {\n            qDef: col.qField,\n            qLabel: col.qLabel,\n            qNumFormat: {\n              qType: col.qNumType || \"U\",\n              qUseThou: 1,\n              qFmt: col.qNumFmt,\n              qDec: \".\",\n              qThou: \",\",\n            },\n          },\n          qSortBy: {\n            qSortByNumeric,\n            qSortByExpression,\n            qExpression,\n            qSuppressMissing,\n          },\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qChartType: col.qChartType,\n          qShowPoints: col.qShowPoints,\n          qCurve: col.qCurve,\n          qFillStyle: col.qFillStyle,\n          qLegendShape: col.qLegendShape,\n        };\n      }\n\n      return col;\n    });\n\n  qProp.qHyperCubeDef = {\n    qDimensions,\n    qMeasures,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSuppressMissing,\n    qColumnOrder,\n    qCalcCondition,\n    qTitle,\n  };\n\n  return qProp;\n}\n\nexport default createDef;\n","import {\n  useState,\n  useCallback,\n  useRef,\n  useReducer,\n  useEffect,\n  useContext,\n} from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport createDef from \"../utils/createHCDef\";\nimport {\n  getHeader,\n  hyperCubeTransform,\n  hyperCubeChartTransform,\n  orderCols,\n  validData,\n} from \"../utils/hyperCubeUtilities\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  headerGroup: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: {\n      title,\n      qData,\n      dataSet,\n      qRData,\n      headerGroup,\n      qLayout,\n      selections,\n    },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        title,\n        qData,\n        dataSet,\n        headerGroup,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: null,\n  qHyperCubeDef: null,\n  qTitle: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 300,\n  },\n  sortCriteria: {\n    qInterColumnSortOrder: [],\n    qSortByAscii: 1,\n    qSortByLoadOrder: 1,\n    qExpression: null,\n    qSortByNumeric: -1,\n    qSortByExpression: 0,\n  },\n  qSuppressZero: false,\n  qSuppressMissing: true,\n  getQRData: false,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qOtherTotalSpec: \"\",\n};\n\nconst useTable = (props) => {\n  const {\n    cols,\n    qTitle,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    sortCriteria,\n    qSuppressZero,\n    qSuppressMissing,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qExpression,\n    qSortByNumeric,\n    qSortByExpression,\n  } = sortCriteria;\n\n  const {\n    title,\n    qData,\n    dataSet,\n    qRData,\n    headerGroup,\n    qLayout,\n    selections,\n  } = state;\n\n  // load engine from props\n  //const myEngine = props.engine;\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const qObject = useRef(null);\n  const qPage = useRef(qPageProp);\n\n  // error trapping\n  const [error, setError] = useState();\n\n  //======================\n  // PAGING LOGIC\n\n  // page size\n  const [pageSize, setPageSize] = useState(qPage.current.qHeight);\n\n  // current page\n  const [page, _setPage] = useState(0);\n\n  const setPage = useCallback(\n    (_page) => {\n      _setPage(_page);\n      changePage({ qTop: _page * pageSize });\n    },\n    [changePage, pageSize]\n  );\n  window.setPage = setPage;\n\n  // calculated number of pages\n  const [pages, _setPages] = useState(0);\n  const setPages = useCallback(\n    (_pages) => {\n      if (page >= _pages) {\n        setPage(0);\n      }\n      _setPages(_pages);\n    },\n    [page, setPage]\n  );\n\n  //handle page change\n  const handlePageChange = useCallback(\n    (pageIndex) => {\n      setPage(pageIndex);\n    },\n    [setPage]\n  );\n\n  // page increment\n  const incrementPage = () => {\n    const nextPage = page + 1;\n    handlePageChange(nextPage);\n  };\n\n  // page decrement\n  const decrementPage = () => {\n    if (page == 0) {\n      //console.log(pages);\n      handlePageChange(pages - 1);\n    } else {\n      const prevPage = page - 1;\n      handlePageChange(prevPage);\n    }\n  };\n\n  // Find the total size of the Hypercube\n  useEffect(() => {\n    if (!qLayout || !qData) return;\n    setPages(Math.ceil(qLayout.qHyperCube.qSize.qcy / pageSize));\n  }, [qLayout, qData, pageSize, setPage, setPages]);\n\n  //======================\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = createDef(\n      cols,\n      qTitle,\n      qHyperCubeDef,\n      qSortByAscii,\n      qSortByLoadOrder,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSortByNumeric,\n      qSortByExpression,\n      qSuppressMissing,\n      qExpression,\n      qColumnOrder,\n      qCalcCondition,\n      qOtherTotalSpec,\n      totalSpec\n    );\n\n    return qProp;\n  }, [\n    cols,\n    qTitle,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qOtherTotalSpec,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    try {\n      const qDataPages = await qObject.current.getHyperCubeData(\n        \"/qHyperCubeDef\",\n        [qPage.current]\n      );\n      return qDataPages[0];\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getTitle = useCallback(async (layout) => {\n    return layout.qHyperCube.qTitle;\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const structureData = useCallback(async (layout, data, cols) => {\n    // let useNumonFirstDim;\n    const dataSet = hyperCubeTransform(\n      data,\n      layout.qHyperCube,\n      // useNumonFirstDim,\n      cols\n    );\n\n    return dataSet;\n  }, []);\n\n  const update = useCallback(async () => {\n    const _qLayout = await getLayout();\n    const _qTitle = await getTitle(_qLayout);\n    const _qValid = await validData(_qLayout, engine);\n    const _qData = await getData();\n\n    // Order colunns for dataKey\n    const _orderedCols = await orderCols(cols);\n    const _dataSet =\n      _qData && (await structureData(_qLayout, _qData, _orderedCols));\n    const _headerGroup = _qData && (await getHeader(_qLayout, _orderedCols));\n    if (_qData && _isMounted.current) {\n      const _selections = _qData.qMatrix.filter((row) => row[0].qState === \"S\");\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          qData: _qData,\n          dataSet: _dataSet,\n          headerGroup: _headerGroup,\n          qLayout: _qLayout,\n          selections: _selections,\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          qData: _qData,\n          dataSet: _dataSet,\n          headerGroup: _headerGroup,\n          qLayout: _qLayout,\n        },\n      });\n    }\n    if (getQRData) {\n      const _qRData = await getReducedData();\n      if (_isMounted.current) {\n        dispatch({\n          type: \"updateReducedData\",\n          payload: { qRData: _qRData },\n        });\n      }\n    }\n  }, [getData, getLayout, getQRData, getReducedData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (dimNo, qElemNumber, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        dimNo,\n        qElemNumber,\n        toggle\n      ),\n    []\n  );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  // takes column data and sorted the table, applies reverse sort\n  const handleSortChange = useCallback(\n    async (column) => {\n      // If no sort is set, we need to set a default sort order\n      if (column.qSortIndicator === \"N\") {\n        if (column.qPath.includes(\"qDimensions\")) {\n          await applyPatches([\n            {\n              qOp: \"add\",\n              qPath: `${column.qPath}/qDef/qSortCriterias`,\n              qValue: JSON.stringify([{ qSortByLoadOrder: 1 }]),\n            },\n          ]);\n        }\n        if (column.qPath.includes(\"qMeasures\")) {\n          await applyPatches([\n            {\n              qOp: \"add\",\n              qPath: `${column.qPath}/qSortBy`,\n              qValue: JSON.stringify({ qSortByLoadOrder: 1 }),\n            },\n          ]);\n        }\n      }\n      await applyPatches([\n        {\n          qOp: \"replace\",\n          qPath: `${column.qPath}/qDef/qReverseSort`,\n          qValue: JSON.stringify(\n            !column.qReverseSort\n          ) /* JSON.stringify((newSorted[0].desc !== column.defaultSortDesc) !== !!column.qReverseSort) */,\n        },\n        {\n          qOp: \"replace\",\n          qPath: \"/qHyperCubeDef/qInterColumnSortOrder\",\n          qValue: JSON.stringify(\n            [\n              ...qLayout.qHyperCube.qEffectiveInterColumnSortOrder,\n            ].sort((a, b) =>\n              a === column.qInterColumnIndex\n                ? -1\n                : b === column.qInterColumnIndex\n                ? 1\n                : 0\n            )\n          ),\n        },\n      ]);\n      setPage(0);\n    },\n    [applyPatches, qLayout]\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    beginSelections,\n    endSelections,\n    title,\n    qLayout,\n    qData,\n    dataSet,\n    headerGroup,\n    handleSortChange,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n    incrementPage,\n    decrementPage,\n    handlePageChange,\n    page, //current page\n    pageSize, //page size\n    pages, //number of pages\n  };\n};\n\nexport default useTable;\n","import { useState } from \"react\";\nimport utility from \"../utils/CapApiUtils\";\n\n// let qlik;\n// let { qlik } = utility.qlobals;\nlet capabilityApisPromise;\nlet capApiSAASPromise;\n\nconst loadCapSAAS = async (config) => {\n  try {\n    if (capApiSAASPromise) {\n      await capApiSAASPromise;\n\n      return;\n    }\n    const tenantUrl = config.host;\n    const webIntegrationId = config.webIntId;\n\n    const link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = `https://${tenantUrl}/resources/autogenerated/qlik-styles.css`;\n    document.head.appendChild(link);\n    link.loaded = new Promise((resolve) => {\n      link.onload = () => {\n        resolve();\n      };\n    });\n\n    const script = document.createElement(\"script\");\n    script.src = `https://${tenantUrl}/resources/assets/external/requirejs/require.js`;\n    script.onload = async () => {\n      window.require.config({\n        baseUrl: `https://${tenantUrl}/resources`,\n        webIntegrationId,\n      });\n    };\n    document.body.appendChild(script);\n    script.loaded = new Promise((resolve) => {\n      script.onload = () => {\n        resolve();\n      };\n    });\n\n    capApiSAASPromise = Promise.all([link.loaded, script.loaded]);\n    await capApiSAASPromise;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst loadCapabilityApis = async (config) => {\n  try {\n    if (capabilityApisPromise) {\n      await capabilityApisPromise;\n\n      return;\n    }\n    const capabilityApisJS = document.createElement(\"script\");\n    const prefix = config.prefix !== \"\" ? `/${config.prefix}` : \"\";\n    capabilityApisJS.src = `${\n      (config.secure ? \"https://\" : \"http://\") +\n      config.host +\n      (config.port ? `:${config.port}` : \"\") +\n      prefix\n    }/resources/assets/external/requirejs/require.js`;\n    document.head.appendChild(capabilityApisJS);\n    capabilityApisJS.loaded = new Promise((resolve) => {\n      capabilityApisJS.onload = () => {\n        resolve();\n      };\n    });\n    const capabilityApisCSS = document.createElement(\"link\");\n    capabilityApisCSS.href = `${\n      (config.secure ? \"https://\" : \"http://\") +\n      config.host +\n      (config.port ? `:${config.port}` : \"\") +\n      prefix\n    }/resources/autogenerated/qlik-styles.css`;\n    capabilityApisCSS.type = \"text/css\";\n    capabilityApisCSS.rel = \"stylesheet\";\n    document.head.appendChild(capabilityApisCSS);\n    capabilityApisCSS.loaded = new Promise((resolve) => {\n      capabilityApisCSS.onload = () => {\n        resolve();\n      };\n    });\n\n    capabilityApisPromise = Promise.all([\n      capabilityApisJS.loaded,\n      capabilityApisCSS.loaded,\n    ]);\n    await capabilityApisPromise;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nfunction useCapability(config) {\n  const [app, setApp] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const prefix = config.prefix !== \"\" ? `/${config.prefix}/` : \"/\";\n\n        const qConfig = {\n          host: config.host,\n          isSecure: config.secure,\n          port: config.port || 443,\n          prefix,\n          appId: config.appId,\n          webIntegrationId: config.webIntId,\n        };\n\n        try {\n          await loadCapSAAS(qConfig);\n          window.require.config({\n            baseUrl: `https://${qConfig.host}/resources`,\n            webIntegrationId: config.webIntId,\n          });\n\n          window.require([\"js/qlik\"], async (q) => {\n            const app = q.openApp(qConfig.appId, qConfig);\n            // apply theme set in QSE\n            app.theme.get().then((theme) => {\n              theme.apply();\n            });\n            setApp(app);\n\n            return 1;\n          });\n        } catch (error) {\n          throw new Error(error);\n        }\n      } else {\n        try {\n          await loadCapabilityApis(config);\n          const prefix = config.prefix !== \"\" ? `/${config.prefix}/` : \"/\";\n          window.require.config({\n            baseUrl: `${\n              (config.secure ? \"https://\" : \"http://\") +\n              config.host +\n              (config.port ? `:${config.port}` : \"\") +\n              prefix\n            }resources`,\n            paths: {\n              qlik: `${\n                (config.secure ? \"https://\" : \"http://\") +\n                config.host +\n                (config.port ? `:${config.port}` : \"\") +\n                prefix\n              }resources/js/qlik`,\n            },\n            config: {\n              text: {\n                useXhr() {\n                  return true;\n                },\n              },\n            },\n          });\n\n          return new Promise((resolve) => {\n            if (utility.globals.qlik) {\n              const app = utility.globals.qlik.openApp(config.appId, {\n                ...config,\n                isSecure: config.secure,\n                prefix,\n              });\n              // apply theme set in QSE\n              app.theme.get().then((theme) => {\n                theme.apply();\n              });\n              setApp(app);\n            } else {\n              window.require([\"js/qlik\"], (q) => {\n                utility.globals.qlik = q;\n                utility.globals.resize = () => {\n                  q.resize();\n                };\n                const app = q.openApp(config.appId, {\n                  ...config,\n                  isSecure: config.secure,\n                  prefix,\n                });\n                setApp(app);\n\n                return 1;\n              });\n            }\n          });\n        } catch (error) {\n          throw new Error(error);\n        }\n      }\n    })();\n  }, []);\n\n  return { app };\n}\n\nexport default useCapability;\n","import { useState } from \"react\";\nconst enigma = require(\"enigma.js\");\nconst schema = require(\"enigma.js/schemas/12.170.2.json\");\nconst SenseUtilities = require(\"enigma.js/sense-utilities\");\n\nconst MAX_RETRIES = 3;\n\nfunction useGlobal(config) {\n  const responseInterceptors = [\n    {\n      // We only want to handle failed responses from QIX Engine:\n      onRejected: function retryAbortedError(sessionReference, request, error) {\n        console.warn(\n          \"Captured Request: Rejected\",\n          `Error Code: ${error.code} : ${error}`\n        );\n        // We only want to handle aborted QIX errors:\n        if (\n          error.code === schema.enums.LocalizedErrorCode.LOCERR_GENERIC_ABORTED\n        ) {\n          // We keep track of how many consecutive times we have tried to do this call:\n          request.tries = (request.tries || 0) + 1;\n          console.warn(`Captured Request: Retry #${request.tries}`);\n          // We do not want to get stuck in an infinite loop here if something has gone\n          // awry, so we only retry until we have reached MAX_RETRIES:\n          if (request.tries <= MAX_RETRIES) {\n            return request.retry();\n          }\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_GENERIC_INVALID_PARAMETERS\n        ) {\n          return error.code;\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_HC_MODAL_OBJECT_ERROR\n        ) {\n          return error.code;\n        }\n        // If it was not an aborted QIX call, or if we reached MAX_RETRIES, we let the error\n        // trickle down to potential other interceptors, and finally down to resolving/rejecting\n        // the initial promise that the user got when invoking the QIX method:\n        console.warn(error);\n\n        return this.Promise.reject(error);\n      },\n    },\n  ];\n\n  const [globalError, setGlobalError] = useState(false);\n\n  const [errorCode, seErrorCode] = useState(null);\n  const [global, setGlobal] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const tenantUri = config.host;\n        const webIntegrationId = config.webIntId;\n\n        const fetchResult = await fetch(\n          `https://${tenantUri}/api/v1/csrf-token`,\n          {\n            mode: \"cors\", // cors must be enabled\n            credentials: \"include\", // credentials must be included\n            headers: {\n              \"qlik-web-integration-id\": webIntegrationId,\n              \"content-type\": \"application/json\",\n            },\n          }\n        ).catch((error) => {\n          console.log(\"caught failed fetch\", error);\n        });\n\n        const csrfToken = fetchResult.headers.get(\"qlik-csrf-token\");\n        if (csrfToken == null) {\n          console.log(\"Not logged in\");\n          seErrorCode(-1);\n\n          return -1;\n        }\n        const session = enigma.create({\n          schema,\n          url: `wss://${tenantUri}/app/${config.appId}?qlik-web-integration-id=${webIntegrationId}&qlik-csrf-token=${csrfToken}`,\n          createSocket: (url) => new WebSocket(url),\n          responseInterceptors,\n        });\n        session.on(\"suspended\", () => {\n          console.warn(\"Captured session suspended\");\n        });\n        session.on(\"error\", () => {\n          console.warn(\"Captured session error\");\n        });\n        session.on(\"closed\", () => {\n          console.warn(\"Session was closed\");\n          seErrorCode(-3);\n\n          return -3;\n        });\n        const _global = await session.open();\n        const engineVersion = await _global.engineVersion();\n        const docList = await _global.getDocList({});\n        const oSName = await _global.oSName();\n        const oSVersion = await _global.oSVersion();\n        setGlobal({\n          global: _global,\n          docList,\n          engineVersion,\n          oSName,\n          oSVersion,\n        });\n\n        seErrorCode(1);\n\n        return 1;\n      }\n      if (config) {\n        const myConfig = config;\n        const url = SenseUtilities.buildUrl(myConfig);\n        try {\n          const session = enigma.create({\n            schema,\n            url,\n            responseInterceptors,\n          });\n          session.on(\"suspended\", () => {\n            console.warn(\"Captured session suspended\");\n          });\n          session.on(\"error\", () => {\n            console.warn(\"Captured session error\");\n          });\n          session.on(\"closed\", () => {\n            console.warn(\"Session was closed\");\n            seErrorCode(-3);\n\n            return -3;\n          });\n          const _global = await session.open();\n\n          const engineVersion = await _global.engineVersion();\n          const docList = await _global.getDocList({});\n          const oSName = await _global.oSName();\n          const oSVersion = await _global.oSVersion();\n          setGlobal({\n            global: _global,\n            docList,\n            engineVersion,\n            oSName,\n            oSVersion,\n          });\n\n          seErrorCode(1);\n\n          return 1;\n        } catch (err) {\n          console.warn(\"Captured Error\", err);\n          if (err.code === 1003) {\n            setGlobalError(\"No engine. App Not found.\");\n          }\n          seErrorCode(-2);\n\n          return -2;\n        }\n      }\n    })(null);\n  }, []);\n\n  return {\n    ...global,\n    globalError,\n    errorCode,\n  };\n}\n\nexport default useGlobal;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport { deepMerge } from \"../utils/object\";\nimport createDef from \"../utils/createHCDef\";\n\nconst initialProps = {\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 1,\n    qHeight: 1000,\n  },\n  cols: null,\n  qHyperCubeDef: null,\n  config: null,\n};\n\nconst useButton = (props) => {\n  const { qPage: qPageProp, cols, qHyperCubeDef, config } = deepMerge(\n    initialProps,\n    props\n  );\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [qLayout, setQLayout] = useState(null);\n\n  const _isMounted = useRef(true);\n  const qObject = useRef(null);\n  //const qPage = useRef(qPageProp);\n\n  const generateQProp = useCallback(() => {\n    const qProp = createDef(cols, qHyperCubeDef);\n\n    return qProp;\n  }, [cols, qHyperCubeDef]);\n\n  useEffect(() => {\n    if (!engine || !cols) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      setQLayout(await qObject.current.getLayout());\n    })();\n  }, [generateQProp, engine]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  const clearSelections = () => {\n    engine && engine.clearAll();\n  };\n\n  const previousSelection = () => {\n    engine && engine.back();\n  };\n\n  const nextSelection = () => {\n    engine && engine.forward();\n  };\n\n  const select = async (value, field) => {\n    const qDoc = await engine;\n    const qField = await qDoc.getField(field)\n    qField.select(value)\n  }\n\n  const selectValues = async (values, field, toggle=false) => {\n    const sel = await values.map(d => ({'qText': d}))\n    const qDoc = await engine;\n    const qField = await qDoc.getField(field)\n    qField.selectValues(sel,toggle)\n  }\n\n  const doReload = async (qMode, qPartial ) => {\n    const qDoc = await engine;\n    qDoc.doReload(qMode, qPartial, false)\n  }\n\n  const exportData = (filename) => {\n    const { host, secure, port, prefix } = config;\n\n    const id = qLayout.qInfo.qId;\n    const filenameExport = filename || \"Data Export\";\n    const _secure = secure ? \"https://\" : \"http://\";\n    const _port = port ? `:${port}` : \"\";\n    const server = _secure + host + _port + prefix;\n    engine.getObject(id).then((model) => {\n      model.exportData(\"CSV_C\", \"/qHyperCubeDef\", \"Test\", \"P\").then((url) => {\n        console.log(url.qUrl, url.qWarnings);\n        // window.open(server + url.qUrl, '_blank')\n      });\n    });\n  };\n\n  return {\n    clearSelections,\n    previousSelection,\n    nextSelection,\n    qLayout,\n    exportData,\n    select,\n    selectValues,\n    doReload,\n  };\n};\n\nexport default useButton;\n","import { useState, useEffect, useRef, useContext, useCallback } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nlet qDoc = null;\nlet qObject = null;\n\nconst useSelectionObject = () => {\n  const { engine } = useContext(EngineContext) || {};\n\n  const _isMounted = useRef(true);\n  const [qLayout, setQLayout] = useState(null);\n  const [selections, setSelections] = useState(null);\n\n  const update = useCallback(async () => {\n    const _qLayout = await qObject.getLayout();\n    const sel = await getSelections(_qLayout);\n    if (_isMounted.current) {\n      setQLayout(_qLayout);\n      setSelections(sel);\n    }\n  }, []);\n\n  const getSelections = (v) => {\n    const selections = v.qSelectionObject.qSelections;\n    return selections;\n  };\n\n  const clearSelections = async (field, value) => {\n    if (field) {\n      const qField = await qDoc.getField(field);\n      if (value) {\n        await qField.toggleSelect(value);\n      } else {\n        await qField.clear();\n      }\n    } else {\n      qDoc.clearAll();\n    }\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line no-empty\n    if (engine === undefined) {\n    } else {\n      (async () => {\n        const qProp = {\n          qInfo: { qType: \"SelectionObject\" },\n          qSelectionObjectDef: {},\n        };\n        qDoc = await engine;\n        qObject = await qDoc.createSessionObject(qProp);\n        qObject.on(\"changed\", () => {\n          update();\n        });\n        update();\n      })();\n    }\n  }, [engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return { qLayout, selections, clearSelections };\n};\n\nexport default useSelectionObject;\n","import Uid from \"./Uid\";\n\nconst globals = {\n  qlik: null,\n  resize: null,\n};\n\nexport default { Uid, globals };\n","function uid(length) {\n  const ALPHABET = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const ID_LENGTH = length || 8;\n  let rtn = \"\";\n  for (let i = 0; i < ID_LENGTH; i += 1) {\n    rtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n  }\n  return rtn;\n}\n\nexport default uid;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport { deepMerge } from \"../utils/object\";\n\nconst initialProps = {\n  id: null,\n  // qName: null,\n  comment: undefined,\n  numberPresentation: undefined,\n  includeInBookmark: false,\n  definition: null,\n};\n\nconst useVariable = (props) => {\n  const name = typeof props === \"string\" ? props : props.name || null;\n\n  const {\n    id,\n    // qName,\n    comment,\n    numberPresentation,\n    includeInBookmark,\n    definition,\n  } = deepMerge(initialProps, props);\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [qLayout, setQLayout] = useState(null);\n  const [qProperties, setQProperties] = useState(null);\n  const [error, setError] = useState(null);\n\n  const qObject = useRef(null);\n\n  const generateQProp = (\n    qId,\n    qName,\n    qComment,\n    qNumberPresentation,\n    qIncludeInBookmark,\n    qDefinition\n  ) => {\n    const qProp = {\n      qInfo: {\n        qId,\n        qType: \"Variable\",\n      },\n      qMetaDef: {},\n      qName,\n      qComment,\n      qNumberPresentation,\n      qIncludeInBookmark,\n      qDefinition: qDefinition.toString(),\n    };\n\n    return qProp;\n  };\n\n  const getVaribale = async (\n    qId,\n    qName,\n    qComment,\n    qNumberPresentation,\n    qIncludeInBookmark,\n    qDefinition\n  ) => {\n    const qDoc = await engine;\n\n    let qLocalObject;\n\n    if (!qId && !qName && !qDefinition) {\n      const qSessionObject = await qDoc.createSessionObject({\n        qInfo: {\n          qId: \"VL01\",\n          qType: \"VariableList\",\n        },\n        qVariableListDef: {\n          qType: \"variable\",\n        },\n      });\n      qLocalObject = await qSessionObject.getLayout();\n      setQLayout(qLocalObject);\n    }\n    if (qId && !qDefinition) {\n      qLocalObject = await qDoc.getVariableById({\n        qId,\n      });\n    }\n    if (qName && !qDefinition) {\n      qLocalObject = await qDoc.getVariableByName({\n        qName,\n      });\n    }\n    if (qName && qDefinition) {\n      try {\n        qLocalObject = await qDoc.getVariableByName({\n          qName,\n        });\n      } catch (err) {\n        if (!qLocalObject) {\n          qLocalObject = await qDoc.createSessionVariable(\n            generateQProp(\n              qId,\n              qName,\n              qComment,\n              qNumberPresentation,\n              qIncludeInBookmark,\n              qDefinition\n            )\n          );\n\n          qObject.current = await qLocalObject;\n          update(qObject.current);\n        }\n        if ((error.code = 18001)) {\n          setError(\"Variable already exists\");\n        } else {\n          setError(err);\n        }\n      }\n    }\n\n    return qLocalObject;\n  };\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n  const getProperties = useCallback(() => qObject.current.getProperties(), []);\n\n  const setProperties = useCallback(async (props) => {\n    const {\n      qId,\n      qName,\n      qComment,\n      qNumberPresentation,\n      qIncludeInBookmark,\n      qDefinition,\n    } = props;\n    if (qObject.current) {\n      const qProperties = await getProperties();\n\n      const qObject = await qObject.current.setProperties(\n        generateQProp(\n          qId || qProperties.qInfo.qId,\n          qName || qProperties.qName,\n          qComment || qProperties.qComment,\n          qNumberPresentation || qProperties.qNumberPresentation,\n          qIncludeInBookmark || qProperties.qIncludeInBookmark,\n          qDefinition.toString() || qProperties.qDefinition.toString()\n        )\n      );\n      update(qObject.current);\n    }\n  }, []);\n\n  const setValue = useCallback(async (value) => {\n    if (qObject.current) {\n      const qProperties = await getProperties();\n\n      const qObject = await qObject.current.setProperties(\n        generateQProp(\n          qProperties.qInfo.qId,\n          qProperties.qName,\n          qProperties.qComment,\n          qProperties.qNumberPresentation,\n          qProperties.qIncludeInBookmark,\n          value.toString()\n        )\n      );\n      update(qObject.current);\n    }\n  }, []);\n\n  const update = useCallback(async (qObj) => {\n    const _qLayout = await getLayout();\n    _qLayout.value =\n      _qLayout.qNum === \"number\" ? _qLayout.qNum : _qLayout.qText;\n    setQLayout(_qLayout);\n    setQProperties(await getProperties());\n  }, []);\n\n  useEffect(() => {\n    if (!engine) return;\n\n    (async () => {\n      const qDoc = await engine;\n\n      try {\n        qObject.current = await getVaribale(\n          id,\n          name,\n          comment,\n          numberPresentation,\n          includeInBookmark,\n          definition\n        );\n\n        qObject.current.on(\"changed\", () => {\n          update(qObject.current);\n        });\n\n        update(qObject.current);\n      } catch (err) {\n        if (err.code === -2) {\n          setError(\"Variable Not Found\");\n        } else {\n          setError(err);\n        }\n      }\n    })();\n  }, [id, name, engine]);\n\n  if (qLayout && qLayout.qVariableList) {\n    qLayout.variableList = qLayout.qVariableList.qItems;\n  }\n\n  return {\n    qLayout,\n    ...qLayout,\n    qProperties,\n    setProperties,\n    setValue,\n    error,\n  };\n};\n\nexport default useVariable;\n","import React, { useEffect, useState } from \"react\";\nimport ReactWaterMark from \"react-watermark-component\"\nimport { EngineContext } from \"../../contexts/EngineProvider\";\nimport Login from \"../Login\";\nimport NotConnected from \"../NotConnected\";\nimport useEngine from \"../../hooks/useEngine\";\nimport { LicenseCheck } from \"../License/LicenseCheck\"\n\nfunction Motor({\n  engine,\n  children,\n  licenseKey,\n  config,\n  logo,\n  logoWidth,\n  logoHeight,\n  header,\n  body,\n  bodySub,\n  size,\n  buttonText,\n  buttonFontColor,\n  buttonColor,\n  backgroundColor,\n  loginfontFamily,\n  NotConnectedheader,\n  NotConnectedBody,\n  NotConnectedButtonText,\n}) {\n\n  //const [myTheme, setMyTheme] = useState(defaultTheme)\n  const [myConfig, setMyConfig] = useState(config);\n  const [validLicense, setValidLicense] = useState(true)\n  const newEngine =  engine ? { engine: engine, engineError: null, errorCode: null } :  useEngine(myConfig)\n\n  // check license key\n  const userKey = licenseKey ? LicenseCheck(licenseKey) : []\n\n  // check if license key is valid\n  useEffect(() => {\n    userKey.length > 0 ? setValidLicense(true) : setValidLicense(false)\n  },[licenseKey])\n  \n  const text = `Powered by Motor`;\n  const beginAlarm = function() { console.error('start alarm!'); };\n  \n  const options = {\n    chunkWidth: 200,\n    chunkHeight: 90,\n    textAlign: \"left\",\n    textBaseline: \"bottom\",\n    globalAlpha: 0.27,\n    font: \"16px Roboto sans-serif\",\n    rotateAngle: -0.19,\n    fillStyle: \"#666\",\n  };\n\n  return (\n    <EngineContext.Provider value={newEngine}>\n        <Login\n          config={myConfig}\n          logo={logo}\n          logoHeight={logoHeight}\n          logoWidth={logoWidth}\n          header={header}\n          body={body}\n          bodySub={bodySub}\n          size={size}\n          backgroundColor={backgroundColor}\n          buttonText={buttonText}\n          buttonFontColor={buttonFontColor}\n          buttonColor={buttonColor}\n          loginfontFamily={loginfontFamily}\n        />\n        <NotConnected\n          config={myConfig}\n          header={NotConnectedheader}\n          body={NotConnectedBody}\n          size={size}\n          buttonText={NotConnectedButtonText}\n          backgroundColor={backgroundColor}\n          buttonFontColor={buttonFontColor}\n          buttonColor={buttonColor}\n          loginfontFamily={loginfontFamily}\n        />\n        { !validLicense ? \n            <ReactWaterMark\n              waterMarkText={text}\n              openSecurityDefense\n              securityAlarm={beginAlarm}\n              options={options}\n            >\n            {children}\n           </ReactWaterMark>\n           :\n           <div>\n            {children}\n           </div>\n        }\n    </EngineContext.Provider>\n  );\n}\n\nexport default Motor;\n","import CryptoAES from 'crypto-js/aes'\nimport CryptoENC from 'crypto-js/enc-utf8'\n\nexport function LicenseCheck (userInput) {\n  \n  var i;\n  const licenses = []\n\n  //Create array of unencrypted licernses\n  for (i = 1; i < 101; i++) {\n    licenses.push(\"MotorLicense-\"+i)\n  }\n\n  var decrypt = CryptoAES.decrypt(userInput, \"S@few/M0t0r\");\n  var input = decrypt.toString(CryptoENC)\n\n  //filter license\n  var licenseExists = licenses.filter(lic => { return lic == input } );\n\n  return licenseExists\n}\n\n  /*\n  //Encrypt all the licenses\n  licenses.map(data => {\n    var encrypt = CryptoAES.encrypt(data, \"S@few/M0t0r\");\n    var key = encrypt.toString()\n    encryptedList.push(key)\n  })\n  */\n\n\n  //var encrypt = CryptoAES.encrypt(\"MotorLicense-1\", \"S@few/M0t0r\");\n  //var decrypt = CryptoAES.decrypt(encrypt.toString(), \"S@few/M0t0r\");\n  \n  //var decrypt = CryptoAES.decrypt('U2FsdGVkX18F0eIS4Rkz49TnlMpqP3Yfos8sRJ/GvNY=', \"S@few/M0t0r\");\n  //console.log(decrypt.toString(CryptoENC))\n  //console.log(decrypt.toString(CryptoJS.enc.Hex))\n","import { useContext, useState, useEffect } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useApp = () => {\n  const { engine } = useContext(EngineContext) || {};\n  const [qApp, setApp] = useState();\n\n  const doReload = async (qMode, qPartial) => {\n    const qDoc = await engine;\n    qDoc.doReload(qMode, qPartial, false);\n  };\n\n  useEffect(\n    () =>\n      (async () => {\n        if (engine === undefined) {\n        } else {\n          const qDoc = await engine;\n\n          const appProperties = await qDoc.getAppProperties();\n\n          setApp({\n            app: qDoc,\n            appProperties,\n            ...appProperties,\n            doReload,\n          });\n        }\n      })(),\n    [engine]\n  );\n\n  return {\n    ...qApp,\n  };\n};\n\nexport default useApp;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\n// const initialProps = {\n//   qId: null,\n// };\n\nconst useBookmark = (props) => {\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [bookmarks, setBookmarks] = useState(null);\n  const [error, setError] = useState(null);\n\n  const qObject = useRef(null);\n\n  const getBookmark = useCallback(\n    (qId) =>\n      qObject.current.getBookmark({\n        qId: qId,\n      }),\n    []\n  );\n\n  const getBookmarkLayout = async (qId) => {\n    const bookmark = await qObject.current.getBookmark({\n      qId,\n    });\n\n    return await bookmark.getLayout();\n  };\n\n  const applyBookmark = async (qId) => {\n    const bookmarkApplied =\n      qObject.current &&\n      qObject.current.applyBookmark({\n        qId,\n      });\n    if (bookmarkApplied) {\n      const appliedBookmark = await getBookmark(qId);\n      const bookmarkInfo = await appliedBookmark.getLayout();\n\n      setBookmarks({ ...bookmarks, appliedBookmark, bookmarkInfo });\n    }\n  };\n\n  const updateBookmark = async (qId, qTitle, qDescription) => {\n    const bookmark = await getBookmark(qId);\n\n    await bookmark.setProperties({\n      qProp: {\n        qInfo: {\n          qId,\n          qType: \"bookmark\",\n        },\n        qMetaDef: {\n          title: qTitle,\n          description: qDescription,\n        },\n      },\n    });\n\n    updateBookmarks();\n  };\n\n  const updateBookmarks = async () => {\n    const bookmarks = await getBookmarks();\n\n    const bookmarkList = bookmarks.map((d, i) => {\n      return {\n        id: d.qInfo.qId,\n        title: d.qMeta.title,\n        description: d.qMeta.description,\n        modifiedDate: d.qData.qBookmark.qUtcModifyTime,\n      };\n    });\n    setBookmarks({ bookmarks, bookmarkList });\n  };\n\n  const destroyBookmark = async (qId) => {\n    const bookmarkDestroyed = await qObject.current.destroyBookmark({\n      qId,\n    });\n\n    updateBookmarks();\n    return bookmarkDestroyed;\n  };\n\n  const createBookmark = async (qTitle, qDescription, qId = null) => {\n    const bookmarkCreated = await qObject.current.createBookmark({\n      qProp: {\n        qInfo: {\n          qId: qId,\n          qType: \"bookmark\",\n        },\n        qMetaDef: {\n          title: qTitle || \"Unnamed bookmark\",\n          description: qDescription,\n        },\n      },\n    });\n    const newBookmark = await bookmarkCreated.getLayout();\n\n    updateBookmarks();\n    return newBookmark;\n  };\n\n  const getBookmarks = useCallback(() =>\n    qObject.current.getBookmarks({\n      qOptions: {\n        qTypes: [\"bookmark\"],\n        qData: {},\n      },\n    })\n  );\n\n  const update = useCallback(async () => {\n    updateBookmarks();\n  }, []);\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n\n    (async () => {\n      const qDoc = await engine;\n\n      try {\n        qObject.current = qDoc;\n\n        qObject.current.on(\"changed\", () => {\n          update();\n        });\n        update();\n      } catch (err) {\n        if (err.code === -2) {\n          setError(\"Bookmark Not Found\");\n        } else {\n          setError(err);\n        }\n      }\n    })();\n  }, [engine]);\n\n  return {\n    ...bookmarks,\n    applyBookmark,\n    createBookmark,\n    destroyBookmark,\n    getBookmark,\n    getBookmarkLayout,\n    updateBookmark,\n    error,\n  };\n};\n\nexport default useBookmark;\n","import { useContext, useState, useEffect } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useLayout = () => {\n  const { engine } = useContext(EngineContext) || {};\n  const [layout, setLayout] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(\n    () =>\n      (async () => {\n        if (!engine) return;\n        try {\n          const qDoc = await engine;\n\n          const appLayout = await qDoc.getAppLayout();\n          setLayout({\n            appLayout,\n            ...appLayout,\n          });\n        } catch (err) {\n          setError(err);\n        }\n      })(),\n    [engine]\n  );\n\n  return {\n    ...layout,\n    error,\n  };\n};\n\nexport default useLayout;\n","import { useState, useEffect, useCallback, useRef, useContext } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useSearch = ({ searchValue, dimensions, qCount, qGroupItemCount }) => {\n  \n  const [groupResults, setGroupResults] = useState([]);\n  const [flatResults, setFlatResults] = useState([]);\n  const _isMounted = useRef(true);\n  const { engine } = useContext(EngineContext) || {};\n\n  useEffect(() => {\n    if (engine === undefined) {\n    } else {\n      (async () => {\n        try {\n          const qDoc = await engine;\n          const search = await qDoc.searchResults(\n            {\n              qSearchFields: dimensions,\n            },\n            [searchValue],\n            {\n              qOffset: 0,\n              qCount,\n              qGroupItemOptions: [\n                {\n                  qGroupItemType: \"FIELD\",\n                  qOffset: 0,\n                  qCount: qGroupItemCount,\n                },\n              ],\n            }\n          );\n          const res = await search;\n          const _groupRes = await groupRes(res)\n          const _flattenRes = await flattenRes(_groupRes)\n          setGroupResults(_groupRes);\n          setFlatResults(_flattenRes);\n          if (_isMounted.current) {\n            setGroupResults(_groupRes);\n            setFlatResults(_flattenRes);\n          }\n        } catch (e) {\n          console.warn(e);\n        }\n      })();\n    }\n  }, [engine, searchValue, qCount, qGroupItemCount, dimensions]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  const groupRes = v => {\n    let arr = []\n    let series = {};\n    v.qSearchGroupArray.map(d => {\n      series['id'] = d.qId\n      series['dimension'] = d.qItems[0].qIdentifier\n      series['value'] =  d.qItems[0].qItemMatches\n      arr.push(series)\n      series = {};\n    })\n    return arr\n  }\n\n  const flattenRes = v => {\n    const arr = [];\n    let series = {}\n    v.map(d => {\n      d.value.map(item => {\n        series['dimension'] = d.dimension\n        series['value'] = item.qText\n        arr.push(series)\n        series = {};\n      })\n    })\n    return arr\n\n  }\n\n  const groupSelect = useCallback((id) =>\n    (async () => {\n      const qDoc = await engine;\n      // eslint-disable-next-line no-unused-expressions\n      qDoc.selectAssociations(\n        {\n          qSearchFields: dimensions,\n          qContext: 'CurrentSelections'\n        },\n        [searchValue],\n        id\n        ),\n      [];\n    })()\n  );\n\n  const flatSelect = useCallback((dim, value) =>\n    (async () => {\n      const qDoc = await engine;\n      // eslint-disable-next-line no-unused-expressions\n      const qField = await qDoc.getField(dim)\n      qField.select(value)\n    })()\n  );\n\n  return {\n    groupResults,\n    flatResults,\n    flatSelect,\n    groupSelect,\n  };\n};\n\nexport default useSearch;\n"],"names":["EngineContext","React","createContext","StyledLogin","config","header","body","bodySub","buttonText","buttonFontColor","buttonColor","logo","loginfontFamily","tenantUri","host","webIntegrationId","webIntId","_jsx","style","position","top","left","zIndex","width","height","backgroundColor","display","_jsxs","justifyContent","flexDirection","margin","padding","border","borderRadius","minWidth","alignSelf","fontFamily","boxSizing","borderBottom","WebkitBoxPack","WebkitJustifyContent","msFlexPack","overflow","WebkitFlexDirection","msFlexDirection","WebkitFlex","msFlex","flex","size","fontSize","src","logoHeight","logoWidth","alt","WebkitAlignItems","WebkitBoxAlign","msFlexAlign","alignItems","cursor","color","outline","WebkitTransition","transition","onClick","loginUrl","URL","searchParams","append","window","location","href","Login","rest","errorCode","useContext","propTypes","PropTypes","object","string","oneOf","defaultProps","StyledNotConnected","focusable","align","direction","reload","enigma","require","schema","SenseUtilities","useEngine","responseInterceptors","onRejected","sessionReference","request","error","console","warn","code","enums","LocalizedErrorCode","LOCERR_GENERIC_ABORTED","tries","retry","LOCERR_GENERIC_INVALID_PARAMETERS","LOCERR_HC_MODAL_OBJECT_ERROR","Promise","reject","useState","engineError","setEngineError","seErrorCode","url","buildUrl","recover","result","session","create","on","open","_global","openDoc","appId","_doc","setEngine","e","then","err","qcs","fetch","mode","credentials","headers","log","fetchResult","csrfToken","get","_exit2","createSocket","WebSocket","engine","NotConnected","engineContext","engineConfigContext","isObject","item","Array","isArray","deepMerge","target","sources","length","output","forEach","source","Object","keys","key","initialState","qData","qRData","qLayout","selections","reducer","state","action","payload","type","Error","initialProps","cols","qHyperCubeDef","qPage","qTop","qLeft","qWidth","qHeight","qSortByAscii","qSortByLoadOrder","qInterColumnSortOrder","qSuppressZero","qSortByExpression","qSuppressMissing","qExpression","getQRData","qSortByNumeric","qColumnOrder","qCalcCondition","undefined","qOtherTotalSpec","qDoc","qObject","listData","selectionsId","autoSortByState","dimension","label","qListObjectDef","getMeasureNames","qHyperCube","qMeasureInfo","map","d","i","qFallbackTitle","getDimensionNames","qDimensionInfo","validData","qListObject","DimCheck","qError","MeasCheck","isNaN","qMax","qMin","_catch","pact","value","s","o","_settle","bind","v","observer","_Pact","prototype","onFulfilled","this","callback","_this","thenable","title","subTitle","metrics","mData","nameKey","valueKey","qListData","dataList","dataKeys","qLists","qTitle","qSubTitle","qMetrics","createDef","totalSpec","qProp","qInfo","qType","_qHyperCubeDef","qMeasures","qDef","qDimensions","qFieldDefs","myqInterColumnSortOrder","qInterColumnSortOrderSet","sortIndex","filter","col","isDimension","startsWith","qLibraryId","qField","qSortCriterias","qNullSuppression","qShowTotalsAbove","qOtherLabel","qAttributeExpressions","qCondBackgroundFormat","qAttribute","id","qCondTextFormat","qCondChartColor","qGrouping","qFieldLabels","qLabel","isMeasure","qNumFormat","qSortBy","qNumType","qUseThou","qFmt","qNumFmt","qDec","qThou","qChartType","qShowPoints","qCurve","qFillStyle","qLegendShape","headerGroup","dataSet","capabilityApisPromise","capApiSAASPromise","sortCriteria","Uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","globals","qlik","resize","comment","numberPresentation","includeInBookmark","definition","children","licenseKey","NotConnectedheader","NotConnectedBody","NotConnectedButtonText","myConfig","validLicense","setValidLicense","newEngine","userKey","userInput","licenses","push","input","CryptoAES","decrypt","toString","CryptoENC","lic","LicenseCheck","useEffect","Provider","ReactWaterMark","waterMarkText","openSecurityDefense","securityAlarm","options","chunkWidth","chunkHeight","textAlign","textBaseline","globalAlpha","font","rotateAngle","fillStyle","qApp","setApp","doReload","qMode","qPartial","getAppProperties","appProperties","app","props","bookmarks","setBookmarks","setError","useRef","getBookmark","useCallback","qId","current","updateBookmarks","getBookmarks","bookmarkList","qMeta","description","modifiedDate","qBookmark","qUtcModifyTime","qOptions","qTypes","update","applyBookmark","bookmarkApplied","appliedBookmark","getLayout","bookmarkInfo","createBookmark","qDescription","qMetaDef","bookmarkCreated","newBookmark","destroyBookmark","bookmarkDestroyed","getBookmarkLayout","bookmark","updateBookmark","setProperties","setQLayout","_isMounted","generateQProp","createSessionObject","clearSelections","clearAll","previousSelection","back","nextSelection","forward","exportData","filename","getObject","model","qUrl","qWarnings","select","field","getField","selectValues","values","toggle","qText","sel","qConfig","isSecure","secure","port","prefix","tenantUrl","link","document","createElement","rel","head","appendChild","loaded","resolve","onload","script","baseUrl","all","loadCapSAAS","q","openApp","theme","apply","capabilityApisJS","capabilityApisCSS","loadCapabilityApis","paths","text","useXhr","utility","qPageProp","useReducer","dispatch","pageSize","qOtherMode","qOtherCounted","qOtherCount","metric","qName","qExpr","qListObjects","list","listDef","qStateName","qInitialDataFetch","entries","getData","getHyperCubeData","qDataPages","getMultiPageData","numberOfPages","qObjects","qPages","qMatrix","qTails","qArea","test","stage","shouldContinue","_isSettledPact","updateValue","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","getListsFromData","getListObjectData","getListData","layout","getNameKey","getValueKey","getReducedData","_qPage","round","getHyperCubeReducedData","structureData","data","qNoOfDiemnsions","measureNames","dimensionNames","attrExpItems","index","attrExp","qAttrExps","qValues","qAttrExprInfoItem","itemIndex","qAttrExprInfo","qNum","pair","qElemNumber","hyperCubeChartTransform","qNoOfDimensions","parentText","transformedData","series","elemNumber","multiDimHyperCubeTransform","getDataKeys","measureInfo","measure","multiDimDataKeys","getDataKeyList","listDetail","obj","items","getTitle","getMetrics","metricObj","_qLayout","_qValid","ceil","qSize","qcy","_qData","_qListData","_mData","_nameKey","_valueKey","_dataList","_dataKeys","_qTitle","_qSubTitle","_qMetrics","_selections","row","qState","_qRData","changePage","newPage","beginSelections","endSelections","qAccept","selectHyperCubeValues","applyPatches","patches","handlerChange","qOp","qPath","qValue","JSON","stringify","globalError","setGlobalError","engineVersion","getDocList","docList","oSName","oSVersion","setGlobal","global","setLayout","getAppLayout","appLayout","currentColumn","qShowAlternatives","qAutoSortByState","qDisplayNumberOfRows","_listData","number","qNumber","_selId","ignoreLock","selectListObjectValues","searchListObjectFor","acceptListObjectSearch","abortModal","motorListProps","searchValue","dimensions","qCount","qGroupItemCount","groupResults","setGroupResults","flatResults","setFlatResults","searchResults","qSearchFields","qOffset","qGroupItemOptions","qGroupItemType","search","res","groupRes","_groupRes","flattenRes","_flattenRes","arr","qSearchGroupArray","qItems","qIdentifier","qItemMatches","groupSelect","selectAssociations","qContext","flatSelect","dim","setSelections","getSelections","qSelectionObject","qSelections","qSelectionObjectDef","toggleSelect","clear","page","_setPage","setPage","_page","pages","_setPages","setPages","_pages","handlePageChange","pageIndex","dataKey","columnId","hyperCubeTransform","meas","getDims","getMeas","concat","orderCols","_orderedCols","_dataSet","_headerGroup","dataIndex","render","defaultSortDesc","qSortIndicator","qInterColumnIndex","qReverseSort","qGrandTotals","qColumnType","qGrandTotalRow","getHeader","dimNo","handleSortChange","column","qEffectiveInterColumnSortOrder","sort","a","b","includes","incrementPage","decrementPage","name","qProperties","setQProperties","qComment","qNumberPresentation","qIncludeInBookmark","qDefinition","getProperties","setValue","qObj","getVariableByName","qLocalObject","createSessionVariable","getVariableById","qVariableListDef","qSessionObject","getVaribale","qVariableList","variableList"],"mappings":"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"}