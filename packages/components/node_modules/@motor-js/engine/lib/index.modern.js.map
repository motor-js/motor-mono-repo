{"version":3,"file":"index.modern.js","sources":["../src/contexts/EngineProvider.jsx","../src/components/Login/StyledLogin.jsx","../src/components/Login/Login.jsx","../src/components/NotConnected/StyledNotConnected.jsx","../src/hooks/useEngine.jsx","../src/components/NotConnected/NotConnected.jsx","../src/components/Motor/Motor.jsx","../src/components/License/LicenseCheck.js","../src/utils/object.js","../src/hooks/useHyperCube.jsx","../src/hooks/useList.jsx","../src/utils/hyperCubeUtilities.js","../src/hooks/useData.jsx","../src/utils/createHCDef.js","../src/hooks/useTable.jsx","../src/hooks/useGlobal.jsx","../src/hooks/useButton.jsx","../src/hooks/useSearch.jsx","../src/hooks/useSelections.jsx","../src/utils/CapApiUtils/index.js","../src/utils/CapApiUtils/Uid.js","../src/hooks/useCapability.jsx","../src/hooks/useApp.jsx","../src/hooks/useLayout.jsx","../src/hooks/useVariable.jsx","../src/hooks/useBookmark.jsx"],"sourcesContent":["import React from 'react'\n\nexport const EngineContext = React.createContext()\n","import React from \"react\";\n\nconst StyledLogin = ({\n  config,\n  header,\n  body,\n  bodySub,\n  size,\n  buttonText,\n  backgroundColor,\n  buttonFontColor,\n  buttonColor,\n  logo,\n  logoHeight,\n  logoWidth,\n  loginfontFamily,\n}) => {\n  const tenantUri = config.host;\n  const webIntegrationId = config.webIntId;\n\n  const goToLogin = () => {\n    const loginUrl = new URL(`https://${tenantUri}/login`);\n    loginUrl.searchParams.append(\"returnto\", window.location.href);\n    loginUrl.searchParams.append(\"qlik-web-integration-id\", webIntegrationId);\n    window.location.href = loginUrl;\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: 1040,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundColor: \"rgba(105, 105, 105, 0.8)\",\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          position: \"relative\",\n          margin: 0.2,\n          padding: \"5px\",\n          backgroundColor,\n          border: \"1px solid gray\",\n          borderRadius: \"8px\",\n          width: \"30%\",\n          minWidth: \"350px\",\n          top: \"30%\",\n          left: \"35%\",\n          alignSelf: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: \"-webkit-box\",\n            // display: \"-webkit-flex\",\n            // display: \"-ms-flexbox\",\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            borderBottom: \"solid 1px #ced4da\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"row\",\n            msFlexDirection: \"row\",\n            flexDirection: \"row\",\n            WebkitFlex: \"0 0 auto\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div size={size} style={{ padding: \"0.6rem\", fontSize: \"18px\" }}>\n            {logo ? (\n              <img\n                src={logo}\n                height={logoHeight}\n                width={logoWidth}\n                alt=\"Logo\"\n              ></img>\n            ) : (\n              header\n            )}\n          </div>\n        </div>\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: -webkit-box;\n            // display: -webkit-flex;\n            // display: -ms-flexbox;\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            padding: \"0.8rem\",\n            WebkitAlignItems: \"center\",\n            WebkitBoxAlign: \"center\",\n            msFlexAlign: \"center\",\n            alignItems: \"center\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"column\",\n            msFlexDirection: \"column\",\n            flexDirection: \"column\",\n            WebkitFlex: \"column\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div style={{ padding: \"0.6rem\", fontSize: \"14px\" }}>{body}</div>\n          <div style={{ padding: \"0.6rem\", fontSize: \"14px\" }}>{bodySub}</div>\n          <button\n            style={{\n              fontFamily: loginfontFamily,\n              fontSize: \"14px\",\n              cursor: \"pointer\",\n              position: \"relative\",\n              margin: \"5px\",\n              backgroundColor: buttonColor,\n              borderRadius: \"8px\",\n              color: buttonFontColor,\n              border: 0,\n              outline: \"none\",\n              WebkitTransition: \"none\",\n              transition: \"none\",\n              padding: \"0.7em 1.7em\",\n            }}\n            onClick={goToLogin}\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledLogin;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledLogin from \"./StyledLogin\";\nimport { EngineContext } from \"../../contexts/EngineProvider\";\n\nconst Login = ({ config, ...rest }) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const { errorCode } = useContext(EngineContext);\n\n  return (\n    <div style={{ display: errorCode === -1 ? \"\" : \"none\" }}>\n      {config && errorCode && <StyledLogin config={config} {...rest} />}\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  config: PropTypes.object,\n  header: PropTypes.string,\n  body: PropTypes.string,\n  bodySub: PropTypes.string,\n  size: PropTypes.oneOf([\"tiny\", \"small\", \"medium\", \"large\", \"xlarge\"]),\n  buttonText: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  buttonFontColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  logo: PropTypes.string,\n  logoHeight: PropTypes.string,\n  logoWidth: PropTypes.string,\n  header: PropTypes.string,\n  loginfontFamily: PropTypes.string,\n};\n\nLogin.defaultProps = {\n  config: null,\n  logo: null,\n  logoHeight: null,\n  logoWidth: null,\n  header: \"Welcome to your motor js mashup\",\n  body: \"Please log on to access your application\",\n  bodySub: \"\",\n  size: \"medium\",\n  buttonText: \"Login\",\n  backgroundColor: \"white\",\n  buttonFontColor: \"white\",\n  buttonColor: \"#ff6961\",\n  loginfontFamily: \"Inter,sans-serif\",\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst StyledNotConnected = ({\n  header,\n  body,\n  size,\n  buttonText,\n  backgroundColor,\n  buttonFontColor,\n  buttonColor,\n  loginfontFamily,\n}) => {\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: 1040,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundColor: \"rgba(105, 105, 105, 0.8)\",\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          position: \"relative\",\n          margin: 0.2,\n          padding: \"5px\",\n          backgroundColor,\n          border: \"1px solid gray\",\n          borderRadius: \"8px\",\n          width: \"30%\",\n          minWidth: \"350px\",\n          top: \"30%\",\n          left: \"35%\",\n          alignSelf: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            fontFamily: loginfontFamily,\n            width: \"100%\",\n            // display: \"-webkit-box\",\n            // display: \"-webkit-flex\",\n            // display: \"-ms-flexbox\",\n            display: \"flex\",\n            boxSizing: \"border-box\",\n            borderBottom: \"solid 1px #ced4da\",\n            WebkitBoxPack: \"center\",\n            WebkitJustifyContent: \"center\",\n            msFlexPack: \"center\",\n            justifyContent: \"center\",\n            overflow: \"visible\",\n            WebkitFlexDirection: \"row\",\n            msFlexDirection: \"row\",\n            flexDirection: \"row\",\n            WebkitFlex: \"0 0 auto\",\n            msFlex: \"0 0 auto\",\n            flex: \"0 0 auto\",\n          }}\n        >\n          <div size={size} style={{ padding: \"0.8rem\", fontSize: \"16px\" }}>\n            {header}\n          </div>\n        </div>\n        <div\n          focusable={false}\n          width=\"100%\"\n          // justifyContent=\"center\"\n          align=\"center\"\n          direction=\"column\"\n          padding=\"0.8rem\"\n        >\n          <div\n            size={size}\n            style={{\n              padding: \"0.6rem\",\n              fontSize: \"14px\",\n              fontFamily: loginfontFamily,\n            }}\n          >\n            {body}\n          </div>\n          <button\n            style={{\n              fontFamily: loginfontFamily,\n              fontSize: \"14px\",\n              cursor: \"pointer\",\n              position: \"relative\",\n              margin: \"5px\",\n              backgroundColor: buttonColor,\n              borderRadius: \"8px\",\n              color: buttonFontColor,\n              border: 0,\n              outline: \"none\",\n              WebkitTransition: \"none\",\n              transition: \"none\",\n              padding: \"0.7em 1.7em\",\n            }}\n            // eslint-disable-next-line  no-restricted-globals\n            onClick={() => location.reload()}\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StyledNotConnected;\n","import { useState } from \"react\";\nconst enigma = require(\"enigma.js\");\nconst schema = require(\"enigma.js/schemas/12.170.2.json\");\nconst SenseUtilities = require(\"enigma.js/sense-utilities\");\n\nconst MAX_RETRIES = 3;\n\nfunction useEngine(config) {\n  const responseInterceptors = [\n    {\n      // We only want to handle failed responses from QIX Engine:\n      onRejected: function retryAbortedError(sessionReference, request, error) {\n        console.warn(\n          \"Captured Request: Rejected\",\n          `Error Code: ${error.code} : ${error}`\n        );\n        // We only want to handle aborted QIX errors:\n        if (\n          error.code === schema.enums.LocalizedErrorCode.LOCERR_GENERIC_ABORTED\n        ) {\n          // We keep track of how many consecutive times we have tried to do this call:\n          request.tries = (request.tries || 0) + 1;\n          console.warn(`Captured Request: Retry #${request.tries}`);\n          // We do not want to get stuck in an infinite loop here if something has gone\n          // awry, so we only retry until we have reached MAX_RETRIES:\n          if (request.tries <= MAX_RETRIES) {\n            return request.retry();\n          }\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_GENERIC_INVALID_PARAMETERS\n        ) {\n          return error.code;\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_HC_MODAL_OBJECT_ERROR\n        ) {\n          return error.code;\n        }\n        // If it was not an aborted QIX call, or if we reached MAX_RETRIES, we let the error\n        // trickle down to potential other interceptors, and finally down to resolving/rejecting\n        // the initial promise that the user got when invoking the QIX method:\n        console.warn(error);\n\n        return this.Promise.reject(error);\n      },\n    },\n  ];\n\n  const [engineError, setEngineError] = useState(false);\n  const [errorCode, seErrorCode] = useState(null);\n  const [engine, setEngine] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const tenantUri = config.host;\n        const webIntegrationId = config.webIntId;\n\n        const fetchResult = await fetch(\n          `https://${tenantUri}/api/v1/csrf-token`,\n          {\n            mode: \"cors\", // cors must be enabled\n            credentials: \"include\", // credentials must be included\n            headers: {\n              \"qlik-web-integration-id\": webIntegrationId,\n              \"content-type\": \"application/json\",\n            },\n          }\n        ).catch((error) => {\n          console.log(\"caught failed fetch\", error);\n        });\n\n        const csrfToken = fetchResult.headers.get(\"qlik-csrf-token\");\n        if (csrfToken == null) {\n          console.log(\"Not logged in\");\n          seErrorCode(-1);\n\n          return -1;\n        }\n        const session = enigma.create({\n          schema,\n          url: `wss://${tenantUri}/app/${config.appId}?qlik-web-integration-id=${webIntegrationId}&qlik-csrf-token=${csrfToken}`,\n          createSocket: (url) => new WebSocket(url),\n          responseInterceptors,\n        });\n        session.on(\"suspended\", () => {\n          console.warn(\"Captured session suspended\");\n        });\n        session.on(\"error\", () => {\n          console.warn(\"Captured session error\");\n        });\n        session.on(\"closed\", () => {\n          console.warn(\"Session was closed\");\n          seErrorCode(-3);\n\n          return -3;\n        });\n        const _global = await session.open();\n        const _doc = await _global.openDoc(config.appId);\n        setEngine(_doc);\n        seErrorCode(1);\n\n        return 1;\n      }\n      if (config) {\n        const myConfig = config;\n        const url = SenseUtilities.buildUrl(myConfig);\n        try {\n          const session = enigma.create({\n            schema,\n            url,\n            responseInterceptors,\n          });\n          session.on(\"suspended\", () => {\n            console.warn(\"Captured session suspended\");\n          });\n          session.on(\"error\", () => {\n            console.warn(\"Captured session error\");\n          });\n          session.on(\"closed\", () => {\n            console.warn(\"Session was closed\");\n            seErrorCode(-3);\n\n            return -3;\n          });\n          const _global = await session.open();\n          const _doc = await _global.openDoc(config.appId);\n          setEngine(_doc);\n          seErrorCode(1);\n\n          return 1;\n        } catch (err) {\n          console.warn(\"Captured Error\", err);\n          if (err.code === 1003) {\n            setEngineError(\"No engine. App Not found.\");\n          }\n          seErrorCode(-2);\n\n          return -2;\n        }\n      }\n    })();\n  }, []);\n\n  return { engine, engineError, errorCode };\n}\n\nexport default useEngine;","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledNotConnected from \"./StyledNotConnected\";\nimport { EngineContext } from \"../../contexts/EngineProvider\";\nimport useEngine from \"../../hooks/useEngine\";\n\nconst NotConnected = ({ config, ...rest }) => {\n  // const { errorCode } = useContext(EngineContext) || useEngine(myConfig);\n  const engineContext = useContext(EngineContext);\n  const engineConfigContext = useEngine(config);\n  const { errorCode } = engineContext || engineConfigContext;\n\n  return (\n    <div\n      // errorCode={errorCode}\n      style={{ display: errorCode === -3 ? \"\" : \"none\" }}\n    >\n      {config && errorCode && <StyledNotConnected {...rest} />}\n    </div>\n  );\n};\n\nNotConnected.propTypes = {\n  header: PropTypes.string,\n  body: PropTypes.string,\n  size: PropTypes.oneOf([\"tiny\", \"small\", \"medium\", \"large\", \"xlarge\"]),\n  buttonText: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  buttonFontColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  loginfontFamily: PropTypes.string,\n};\n\nNotConnected.defaultProps = {\n  header: \"Connection to server lost\",\n  body: \"Please reload the page to refresh the dashboard\",\n  size: \"medium\",\n  buttonText: \"Reload Page\",\n  backgroundColor: \"white\",\n  buttonFontColor: \"white\",\n  buttonColor: \"#ff6961\",\n  loginfontFamily: \"Inter,sans-serif\",\n};\n\nexport default NotConnected;\n","import React, { useEffect, useState } from \"react\";\nimport ReactWaterMark from \"react-watermark-component\"\nimport { EngineContext } from \"../../contexts/EngineProvider\";\nimport Login from \"../Login\";\nimport NotConnected from \"../NotConnected\";\nimport useEngine from \"../../hooks/useEngine\";\nimport { LicenseCheck } from \"../License/LicenseCheck\"\n\nfunction Motor({\n  engine,\n  children,\n  licenseKey,\n  config,\n  logo,\n  logoWidth,\n  logoHeight,\n  header,\n  body,\n  bodySub,\n  size,\n  buttonText,\n  buttonFontColor,\n  buttonColor,\n  backgroundColor,\n  loginfontFamily,\n  NotConnectedheader,\n  NotConnectedBody,\n  NotConnectedButtonText,\n}) {\n\n  //const [myTheme, setMyTheme] = useState(defaultTheme)\n  const [myConfig, setMyConfig] = useState(config);\n  const [validLicense, setValidLicense] = useState(true)\n  const newEngine =  engine ? { engine: engine, engineError: null, errorCode: null } :  useEngine(myConfig)\n\n  // check license key\n  const userKey = licenseKey ? LicenseCheck(licenseKey) : []\n\n  // check if license key is valid\n  useEffect(() => {\n    userKey.length > 0 ? setValidLicense(true) : setValidLicense(false)\n  },[licenseKey])\n  \n  const text = `Powered by Motor`;\n  const beginAlarm = function() { console.error('start alarm!'); };\n  \n  const options = {\n    chunkWidth: 200,\n    chunkHeight: 90,\n    textAlign: \"left\",\n    textBaseline: \"bottom\",\n    globalAlpha: 0.27,\n    font: \"16px Roboto sans-serif\",\n    rotateAngle: -0.19,\n    fillStyle: \"#666\",\n  };\n\n  return (\n    <EngineContext.Provider value={newEngine}>\n        <Login\n          config={myConfig}\n          logo={logo}\n          logoHeight={logoHeight}\n          logoWidth={logoWidth}\n          header={header}\n          body={body}\n          bodySub={bodySub}\n          size={size}\n          backgroundColor={backgroundColor}\n          buttonText={buttonText}\n          buttonFontColor={buttonFontColor}\n          buttonColor={buttonColor}\n          loginfontFamily={loginfontFamily}\n        />\n        <NotConnected\n          config={myConfig}\n          header={NotConnectedheader}\n          body={NotConnectedBody}\n          size={size}\n          buttonText={NotConnectedButtonText}\n          backgroundColor={backgroundColor}\n          buttonFontColor={buttonFontColor}\n          buttonColor={buttonColor}\n          loginfontFamily={loginfontFamily}\n        />\n        { !validLicense ? \n            <ReactWaterMark\n              waterMarkText={text}\n              openSecurityDefense\n              securityAlarm={beginAlarm}\n              options={options}\n            >\n            {children}\n           </ReactWaterMark>\n           :\n           <div>\n            {children}\n           </div>\n        }\n    </EngineContext.Provider>\n  );\n}\n\nexport default Motor;\n","import CryptoAES from 'crypto-js/aes'\nimport CryptoENC from 'crypto-js/enc-utf8'\n\nexport function LicenseCheck (userInput) {\n  \n  var i;\n  const licenses = []\n\n  //Create array of unencrypted licernses\n  for (i = 1; i < 101; i++) {\n    licenses.push(\"MotorLicense-\"+i)\n  }\n\n  var decrypt = CryptoAES.decrypt(userInput, \"S@few/M0t0r\");\n  var input = decrypt.toString(CryptoENC)\n\n  //filter license\n  var licenseExists = licenses.filter(lic => { return lic == input } );\n\n  return licenseExists\n}\n\n  /*\n  //Encrypt all the licenses\n  licenses.map(data => {\n    var encrypt = CryptoAES.encrypt(data, \"S@few/M0t0r\");\n    var key = encrypt.toString()\n    encryptedList.push(key)\n  })\n  */\n\n\n  //var encrypt = CryptoAES.encrypt(\"MotorLicense-1\", \"S@few/M0t0r\");\n  //var decrypt = CryptoAES.decrypt(encrypt.toString(), \"S@few/M0t0r\");\n  \n  //var decrypt = CryptoAES.decrypt('U2FsdGVkX18F0eIS4Rkz49TnlMpqP3Yfos8sRJ/GvNY=', \"S@few/M0t0r\");\n  //console.log(decrypt.toString(CryptoENC))\n  //console.log(decrypt.toString(CryptoJS.enc.Hex))\n","export const isObject = (item) =>\n  item && typeof item === \"object\" && !Array.isArray(item);\n\nexport const deepFreeze = (obj) => {\n  Object.keys(obj).forEach(\n    (key) => key && isObject(obj[key]) && Object.freeze(obj[key])\n  );\n\n  return Object.freeze(obj);\n};\n\nexport const deepMerge = (target, ...sources) => {\n  if (!sources.length) {\n    return target;\n  }\n  // making sure to not change target (immutable)\n  const output = { ...target };\n  sources.forEach((source) => {\n    if (isObject(source)) {\n      Object.keys(source).forEach((key) => {\n        if (isObject(source[key])) {\n          if (!output[key]) {\n            output[key] = { ...source[key] };\n          } else {\n            output[key] = deepMerge(output[key], source[key]);\n          }\n        } else {\n          output[key] = source[key];\n        }\n      });\n    }\n  });\n\n  return output;\n};\n","import { useCallback, useRef, useReducer, useEffect, useContext } from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: { qData, qRData, qLayout, selections },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        qData,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: null,\n  qHyperCubeDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 1000,\n  },\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  qInterColumnSortOrder: [],\n  qSuppressZero: false,\n  qSortByExpression: 0,\n  qSuppressMissing: true,\n  qExpression: null,\n  getQRData: false,\n  qSortByNumeric: -1,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qOtherTotalSpec: \"\",\n};\n\nconst useHyperCube = (props) => {\n  const {\n    cols,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSortByNumeric,\n    qSortByExpression,\n    qSuppressMissing,\n    qExpression,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { qData, qRData, qLayout, selections } = state;\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const qObject = useRef(null);\n\n  const qPage = useRef(qPageProp);\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = {\n      qInfo: { qType: \"visualization\" },\n    };\n\n    if (qHyperCubeDef) {\n      const _qHyperCubeDef = qHyperCubeDef;\n      if (cols && cols[1]) {\n        _qHyperCubeDef.qMeasures[0].qDef = {\n          qDef: cols[1],\n        };\n      }\n      if (cols && cols[0])\n        _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n      qProp.qInfo.qType = \"HyperCube\";\n      qProp.qHyperCubeDef = _qHyperCubeDef;\n\n      return qProp;\n    }\n    const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n    const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n    let sortIndex = 0;\n\n    const qDimensions = cols\n      .filter((col, i) => {\n        const isDimension =\n          (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n          (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"dimension\") ||\n          (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n        if (isDimension && !qInterColumnSortOrderSet) {\n          myqInterColumnSortOrder[i] = sortIndex;\n          sortIndex += 1;\n        }\n\n        return isDimension;\n      })\n      .map((col) => {\n        if (typeof col === \"string\") {\n          return {\n            qDef: {\n              qFieldDefs: [col],\n              qSortCriterias: [\n                {\n                  qSortByAscii,\n                  qSortByLoadOrder,\n                },\n              ],\n            },\n            qNullSuppression: true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n        if (typeof col === \"object\" && !col.qLibraryId) {\n          return {\n            qDef: {\n              qFieldDefs: [col.qField],\n              qFieldLabels: [col.qLabel],\n              qSortCriterias: col.qSortCriterias\n                ? [col.qSortCriterias]\n                : [\n                    {\n                      qSortByLoadOrder,\n                      qSortByAscii,\n                    },\n                  ],\n            },\n            qOtherTotalSpec: totalSpec,\n            qOtherLabel:\n              qOtherTotalSpec !== undefined\n                ? qOtherTotalSpec.qOtherLabel\n                : \"Others\",\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qNullSuppression: col.qNullSuppression\n              ? col.qNullSuppression\n              : true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n        if (typeof col === \"object\" && col.qLibraryId) {\n          return {\n            qLibraryId: col.qLibraryId,\n            qType: col.qType,\n            qOtherTotalSpec: totalSpec,\n            qOtherLabel:\n              qOtherTotalSpec !== undefined\n                ? qOtherTotalSpec.qOtherLabel\n                : \"Others\",\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qNullSuppression: col.qNullSuppression\n              ? col.qNullSuppression\n              : true,\n            qSuppressMissing: true,\n            qShowTotalsAbove: true,\n          };\n        }\n\n        return col;\n      });\n\n    const qMeasures = cols\n      .filter((col, i) => {\n        const isMeasure =\n          (typeof col === \"string\" && col.startsWith(\"=\")) ||\n          (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"measure\") ||\n          (typeof col === \"object\" && col.qField.startsWith(\"=\"));\n        if (isMeasure && !qInterColumnSortOrderSet) {\n          myqInterColumnSortOrder[i] = sortIndex;\n          sortIndex += 1;\n        }\n\n        return isMeasure;\n      })\n      .map((col) => {\n        if (typeof col === \"string\") {\n          return {\n            qDef: {\n              qDef: col,\n              qNumFormat: col.qNumFormat,\n            },\n            qSortBy: {\n              qSortByNumeric,\n              qSortByExpression,\n              qExpression,\n              qSuppressMissing,\n            },\n          };\n        }\n        if (typeof col === \"object\") {\n          return {\n            qDef: {\n              qDef: col.qField,\n              qLabel: col.qLabel,\n              qNumFormat: {\n                qType: col.qNumType || \"U\",\n                qUseThou: 1,\n                qFmt: col.qNumFmt,\n                qDec: \".\",\n                qThou: \",\",\n              },\n            },\n            qSortBy: {\n              qSortByNumeric,\n              qSortByExpression,\n              qExpression,\n              qSuppressMissing,\n            },\n            qAttributeExpressions: [\n              {\n                // cell background color\n                qExpression: col.qCondBackgroundFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellBackgroundColor\",\n              },\n              {\n                // cell text color\n                qExpression: col.qCondTextFormat,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"cellForegroundColor\",\n              },\n              {\n                // chart fill color\n                qExpression: col.qCondChartColor,\n                qLibraryId: \"\",\n                qAttribute: false,\n                id: \"colorTheme\",\n              },\n            ],\n            qChartType: col.qChartType,\n            qShowPoints: col.qShowPoints,\n            qCurve: col.qCurve,\n            qFillStyle: col.qFillStyle,\n            qLegendShape: col.qLegendShape,\n          };\n        }\n\n        return col;\n      });\n\n    qProp.qHyperCubeDef = {\n      qDimensions,\n      qMeasures,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSuppressMissing,\n      qColumnOrder,\n      qCalcCondition,\n    };\n\n    return qProp;\n  }, [\n    cols,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    const qDataPages = await qObject.current.getHyperCubeData(\n      \"/qHyperCubeDef\",\n      [qPage.current]\n    );\n\n    return qDataPages[0];\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const update = useCallback(\n    async (measureInfo) => {\n      const _qLayout = await getLayout();\n      const _qData = await getData();\n      if (_qData && _isMounted.current) {\n        const _selections = _qData.qMatrix.filter(\n          (row) => row[0].qState === \"S\"\n        );\n\n        if (measureInfo) {\n          measureInfo.map((d, i) => {\n            if (_qLayout.qHyperCube.qMeasureInfo[i]) {\n              _qLayout.qHyperCube.qMeasureInfo[i].qChartType = d.qChartType;\n              _qLayout.qHyperCube.qMeasureInfo[i].qShowPoints = d.qShowPoints;\n              _qLayout.qHyperCube.qMeasureInfo[i].qCurve = d.qCurve;\n              _qLayout.qHyperCube.qMeasureInfo[i].qFillStyle = d.qFillStyle;\n              _qLayout.qHyperCube.qMeasureInfo[i].qLegendShape = d.qLegendShape;\n              // _qLayout.qHyperCube.qMeasureInfo[i].qLegendShape =\n              //   d.qLegendShape === \"dashed\" ? \"5,2\" : null;\n            }\n          });\n        }\n\n        dispatch({\n          type: \"update\",\n          payload: {\n            qData: _qData,\n            qLayout: _qLayout,\n            selections: _selections,\n          },\n        });\n      } else if (_isMounted.current) {\n        dispatch({\n          type: \"update\",\n          payload: {\n            qData: _qData,\n            qLayout: _qLayout,\n          },\n        });\n      }\n      if (getQRData) {\n        const _qRData = await getReducedData();\n        if (_isMounted.current) {\n          dispatch({\n            type: \"updateReducedData\",\n            payload: { qRData: _qRData },\n          });\n        }\n      }\n    },\n    [getData, getLayout, getQRData, getReducedData]\n  );\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (qElemNumber, _selections, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        qElemNumber,\n        _selections,\n        toggle\n      ),\n    []\n  );\n  // const select = useCallback(\n  //   (qElemNumber, _selections, toggle = true) =>\n  //     qObject.current.selectHyperCubeValues(\n  //       '/qHyperCubeDef',\n  //       qElemNumber,\n  //       _selections,\n  //       toggle\n  //     ),\n  //   []\n  // );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    beginSelections,\n    endSelections,\n    qLayout,\n    qData,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n  };\n};\n\nexport default useHyperCube;\n","import { useCallback, useRef, useReducer, useEffect, useContext } from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst initialState = {\n  qDoc: null,\n  qObject: null,\n  qData: null,\n  listData: null,\n  selections: null,\n  selectionsId: null,\n};\n\nfunction reducer(state, action) {\n  const {\n    payload: { qData, listData, selections, selectionsId, qDoc },\n    type,\n  } = action;\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        qData,\n        listData,\n        selections,\n        selectionsId\n      };\n    case \"init\":\n      return {\n        ...state,\n        qDoc,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  autoSortByState: 1,\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  dimension: null,\n  label: null,\n  qListObjectDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 1,\n    qHeight: 10000,\n  },\n};\n\nconst useList = (props) => {\n  const {\n    qPage: qPageProp,\n    dimension,\n    qListObjectDef,\n    qSortByAscii,\n    qSortByLoadOrder,\n    autoSortByState,\n  } = deepMerge(initialProps, props);\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { listData, selections, selectionsId } = state;\n\n  const qObject = useRef(null);\n  const qPage = useRef(qPageProp);\n\n  /** Generate the Definition file */\n  const generateQProp = useCallback(\n    (currentColumn = 0) => {\n      const qProp = { qInfo: { qType: \"visualization\" } };\n      if (qListObjectDef) {\n        qProp.qListObjectDef = qListObjectDef;\n      } else {\n        const qDimensions = dimension\n          .filter(\n            (col) =>\n              (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n              (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n              (typeof col === \"object\" &&\n                col.qLibraryId &&\n                col.qType &&\n                col.qType === \"dimension\")\n          )\n          .map((col) => {\n            if (typeof col === \"string\") {\n              return {\n                qDef: {\n                  qFieldDefs: [col],\n                  qSortCriterias: [{ qSortByLoadOrder, qSortByAscii }],\n                },\n              };\n            }\n\n            return col;\n          });\n        const qLibraryId = {\n          qLibraryId:\n            typeof dimension[0] === \"object\" && dimension[0].qLibraryId\n              ? dimension[0].qLibraryId\n              : \"\",\n        };\n        const qDef = qDimensions[currentColumn];\n        qProp.qListObjectDef = {\n          ...qLibraryId,\n          ...qDef,\n          qShowAlternatives: true,\n          qAutoSortByState: { qDisplayNumberOfRows: autoSortByState },\n        };\n      }\n\n      return qProp;\n    },\n    [autoSortByState, dimension, qListObjectDef, qSortByAscii, qSortByLoadOrder]\n  );\n\n  // Edit to extract all data\n  const getData = useCallback(async () => {\n    const qDataPages = await qObject.current.getListObjectData(\n      \"/qListObjectDef\",\n      [qPage.current]\n    );\n    return qDataPages[0];\n  }, []);\n\n  const structureData = useCallback(async (_qData) => {\n    if (!listData) {\n      \n      if (!_qData) return null;\n      let _listData = []\n      _qData.qMatrix.map((d, i) => {\n        _listData.push({\n          key: d[0].qElemNumber,\n          text: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n          number: d[0].qNumber,\n          state: d[0].qState,\n          value: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n          label: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        });\n      });\n      // Get Selections\n      const _selections = _listData && _listData.filter(row => row.state === \"S\");\n      // Get Selection ID\n      const _selId = _selections && _selections.map(d => d.key);\n\n      return { _selId, _selections, _listData };\n    }\n  }, [listData]);\n\n  /*const getSelections = (data) => {\n    console.log('GET SEL')\n    const sel = data.qMatrix.filter((row) => row[0].qState === \"S\");\n    const arr = [];\n    sel.map((d) => {\n      arr.push({\n        key: d[0].qElemNumber,\n        text: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        number: d[0].qNumber,\n        state: d[0].qState,\n        value: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n        label: typeof d[0].qText !== \"undefined\" ? d[0].qText : \"undefined\",\n      });\n    });\n    return arr;\n  };\n\n  const getSelectionsId = (data) => {\n    const sel = data.qMatrix.filter((row) => row[0].qState === \"S\");\n    const arr = [];\n    sel.map((d) => {\n      arr.push(d[0].qElemNumber);\n    });\n    return arr;\n  };\n  */\n\n  const update = useCallback(async () => {\n    const _qData = await getData();\n    const { _selId, _selections, _listData } = await structureData(_qData);\n    if (_qData && _isMounted.current) {\n     // const _selections = await getSelections(_qData);\n     // const _selId = await getSelectionsId(_qData);\n      dispatch({\n        type: \"update\",\n        payload: {\n          listData: _listData,\n          selections: _selections,\n          selectionsId: _selId\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          listData: _listData,\n        },\n      });\n    }\n  }, [getData, structureData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = { ...qPage.current, ...newPage };\n\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = async () => {\n    // Make sure we close all other open selections. We usually get that when we have morethan one dropDown in the same page and while one is open, we click on the second one\n    await state.qDoc.abortModal(true);\n    await qObject.current.beginSelections([\"/qListObjectDef\"]);\n  };\n\n  const endSelections = async (qAccept) => {\n    // await state.qEngine.abortModal(true)\n    await qObject.current.endSelections(qAccept);\n  };\n\n  const select = useCallback(\n    (qElemNumber, toggle = true, ignoreLock = false) =>\n      qObject.current.selectListObjectValues(\n        \"/qListObjectDef\",\n        qElemNumber,\n        toggle,\n        ignoreLock\n      ),\n    []\n  );\n\n  const searchListObjectFor = useCallback(\n    (string) => qObject.current.searchListObjectFor(\"/qListObjectDef\", string),\n    []\n  );\n\n  const acceptListObjectSearch = useCallback(\n    (ignoreLock = false) =>\n      qObject.current.acceptListObjectSearch(\n        \"/qListObjectDef\",\n        true,\n        ignoreLock\n      ),\n    []\n  );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  const clearSelections = useCallback(\n    () => qObject.current.clearSelections(\"/qListObjectDef\"),\n    []\n  );\n\n  useEffect(() => {\n    if (!engine || qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      // ToDo: make sure init is not called on every render - convert qDoc to qEngine\n      if (_isMounted.current) dispatch({ type: \"init\", payload: { qDoc } });\n      qObject.current.on(\"changed\", () => {\n        update();\n      });\n      update();\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    listData,\n    changePage,\n    select,\n    beginSelections,\n    endSelections,\n    searchListObjectFor,\n    acceptListObjectSearch,\n    applyPatches,\n    selections,\n    selectionsId,\n    clearSelections,\n    motorListProps: {\n      clearSelections,\n      selections,\n      select,\n    }\n  };\n};\n\nexport default useList;\n","export function hyperCubeChartTransform(\n  qData,\n  qHyperCube,\n  // useNumonFirstDim = false,\n  cols\n) {\n  const qNoOfDiemnsions =\n    qHyperCube !== undefined ? qHyperCube.qDimensionInfo.length : 1;\n  const qNoOfMeasures =\n    qHyperCube !== undefined ? qHyperCube.qMeasureInfo.length : 1;\n\n  const measureNames = getMeasureNames(qHyperCube);\n  const dimensionNames = getDimensionNames(qHyperCube);\n\n  const transformedData = qData.qMatrix.map((d, i) => {\n    let data = {};\n    let attrExpItems = {};\n    d.forEach((item, index) => {\n      if (index < qNoOfDiemnsions) {\n        const attrExp = d[index].qAttrExps;\n        if (typeof attrExp !== \"undefined\") {\n          const items = attrExp.qValues;\n\n          items.forEach((qAttrExprInfoItem, itemIndex) => {\n            if (qAttrExprInfoItem.qText !== undefined)\n              attrExpItems[\n                qHyperCube.qDimensionInfo[index].qAttrExprInfo[itemIndex].id\n              ] =\n                qAttrExprInfoItem.qNum !== \"NaN\"\n                  ? qAttrExprInfoItem.qNum\n                  : qAttrExprInfoItem.qText;\n          });\n        }\n      } else {\n        const attrExp = d[index].qAttrExps;\n        if (typeof attrExp !== \"undefined\") {\n          const items = attrExp.qValues;\n\n          items.forEach((qAttrExprInfoItem, itemIndex) => {\n            if (qAttrExprInfoItem.qText !== undefined)\n              attrExpItems[\n                qHyperCube.qMeasureInfo[index - -qNoOfDiemnsions].qAttrExprInfo[\n                  itemIndex\n                ].id\n              ] =\n                qAttrExprInfoItem.qNum !== \"NaN\"\n                  ? qAttrExprInfoItem.qNum\n                  : qAttrExprInfoItem.qText;\n          });\n        }\n      }\n\n      const pair =\n        index < qNoOfDiemnsions\n          ? {\n              [dimensionNames[index]]: d[index].qText,\n              [`elemNumber${index !== 0 ? index : \"\"}`]: d[index].qElemNumber,\n              key: i,\n\n              label: d[index].qText,\n            }\n          : {\n              [measureNames[index - qNoOfDiemnsions]]:\n                cols[index].qNumFormat ||\n                cols[index].qNumType ||\n                cols[index].qNumFmt\n                  ? d[index].qText\n                  : d[index].qNum !== \"NaN\"\n                  ? d[index].qNum\n                  : 0,\n              key: i,\n            };\n\n      data = { ...data, ...pair, ...attrExpItems };\n    });\n    return data;\n  });\n\n  return transformedData;\n}\n\nexport function hyperCubeTransform(\n  qData,\n  qHyperCube,\n  // useNumonFirstDim = false,\n  cols\n) {\n  const transformedData = qData.qMatrix.map((d, i) => {\n    let data = {};\n    d.forEach((item, index) => {\n      const name = cols[index].dataKey;\n      const pair = {\n        [name]: {\n          text: d[index].qText,\n          number: d[index].qNum,\n          elemNumber: d[index].qElemNumber,\n          state: d[index].qState,\n          attrExp: d[index].qAttrExps,\n          columnId: index,\n        },\n        key: i,\n      };\n      data = { ...data, ...pair };\n    });\n    return data;\n  });\n\n  return transformedData;\n}\n\nexport function multiDimHyperCubeTransform(qData, qHyperCube) {\n  const qNoOfDimensions =\n    qHyperCube !== undefined ? qHyperCube.qDimensionInfo.length : 1;\n\n  const measureNames = getMeasureNames(qHyperCube);\n  const dimensionNames = getDimensionNames(qHyperCube);\n\n  let parentText = qData.qMatrix[0][0].qText;\n  let transformedData = [];\n  let series = {};\n\n  qData.qMatrix.map((d, i) => {\n    let key = null;\n    let value = null;\n    let elemNumber = null;\n\n    d.forEach((item, index) => {\n      if (index < qNoOfDimensions && index !== 0) {\n        key = d[index].qText;\n        elemNumber = d[index].qElemNumber;\n      } else if (index !== 0) {\n        value = d[index].qNum;\n      }\n    });\n\n    if (parentText !== d[0].qText) {\n      if (Object.keys(series).length === 0) {\n        series[dimensionNames[0]] = d[0].qText;\n        series[\"qElemNumber\"] = d[0].qElemNumber;\n        series[key] = value;\n        series[`${key}-qElemNumber`] = elemNumber;\n      }\n      transformedData.push(series);\n      series = {};\n    } else {\n      series[dimensionNames[0]] = d[0].qText;\n      series[\"qElemNumber\"] = d[0].qElemNumber;\n      series[key] = value;\n      series[`${key}-qElemNumber`] = elemNumber;\n      series[\"label\"] = d[0].qText;\n    }\n    parentText = d[0].qText;\n  });\n  transformedData.push(series);\n  return transformedData;\n}\n\nexport const getMeasureNames = (qHyperCube) =>\n  qHyperCube.qMeasureInfo.map((d, i) => {\n    const qMeasurePosition = i !== 0 ? i : \"\";\n\n    return d.qFallbackTitle;\n    /*.startsWith(\"=\")\n      ? `value${qMeasurePosition}`\n      : d.qFallbackTitle;*/\n  });\n\nexport const getDimensionNames = (qHyperCube) =>\n  qHyperCube.qDimensionInfo.map((d, i) => d.qFallbackTitle);\n\nexport const getDimensionCategories = (data) => [\n  ...new Set(\n    Array.prototype.concat(\n      ...data.map((d) => d[Object.keys(d)[2]].map((d) => d[Object.keys(d)[0]]))\n    )\n  ),\n];\n\nexport const validData = (qLayout) => {\n  let isValid = true;\n  let dataError = \"\";\n  const { qDimensionInfo, qMeasureInfo } =\n    qLayout.qHyperCube || qLayout.qListObject;\n\n  const DimCheck = () => {\n    //check if an array, to work with HyperCube & ListObject\n    let _qDimensionInfo = Array.isArray(qDimensionInfo)\n      ? qDimensionInfo\n      : [qDimensionInfo];\n    _qDimensionInfo.forEach((qData) => {\n        if (qData.qError) {\n          console.error('There is an issue with your dimension. Please fix this in order to receive the correct data. ', qData.qError)\n        }\n    });\n  };\n\n  const MeasCheck = () => {\n    qMeasureInfo.forEach((qData) => {\n      if (\n        (isNaN(qData.qMax) && isNaN(qData.qMin)) \n      ) {\n        console.error('There is an issue with your measure. It is not returning any data.')\n      }\n    });\n  };\n  \n  if (qDimensionInfo && qMeasureInfo) {\n    DimCheck();\n    MeasCheck();\n  } else if (qDimensionInfo && !qMeasureInfo) {\n    DimCheck();\n  } else if (!qDimensionInfo && qMeasureInfo) {\n    MeasCheck();\n  } else { }\n\n};\n\nexport const numericSortDirection = (sortDirection, defaultSetting = 0) => {\n  let direction;\n  switch (sortDirection.toUpperCase()) {\n    case \"ASC\" || \"ASCENDING\":\n      direction = 1;\n      break;\n    case \"DESC\" || \"DESCENDING\":\n      direction = -1;\n      break;\n    default:\n      direction = defaultSetting;\n  }\n\n  return direction;\n};\n\nexport const orderCols = (cols) => {\n  let dim = [];\n  let meas = [];\n\n  const getDims = (cols) => {\n    cols\n      .filter((col, i) => {\n        const isDimension =\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"dimension\") ||\n          Array.isArray(col.qField) ||\n          (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n        return isDimension;\n      })\n      .map((col) => {\n        dim.push(col);\n        return col;\n      });\n  };\n\n  const getMeas = (cols) => {\n    cols\n      .filter((col, i) => {\n        const isMeasure =\n          (typeof col === \"object\" &&\n            col.qLibraryId &&\n            col.qType &&\n            col.qType === \"measure\") ||\n          (typeof col === \"object\" &&\n            !Array.isArray(col.qField) &&\n            col.qField.startsWith(\"=\"));\n\n        return isMeasure;\n      })\n      .map((col) => {\n        meas.push(col);\n        return col;\n      });\n  };\n\n  //get dimensions\n  getDims(cols);\n  // get measures\n  getMeas(cols);\n  //concatenate dimensions and measures\n  const orderedCols = dim.concat(meas);\n\n  return orderedCols;\n};\n\nexport const getHeader = (qLayout, cols, data) => {\n  if (qLayout) {\n    return [\n      ...qLayout.qHyperCube.qDimensionInfo.map((col, index) => ({\n        title: col.qFallbackTitle,\n        dataIndex: cols[index].dataKey,\n        dataKey: cols[index].dataKey,\n        render: cols[index].render,\n        defaultSortDesc: col.qSortIndicator === \"D\",\n        qInterColumnIndex: index,\n        qPath: `/qHyperCubeDef/qDimensions/${index}`,\n        qSortIndicator: col.qSortIndicator,\n        qReverseSort: col.qReverseSort,\n        qGrandTotals: { qText: null, qNum: null },\n        qColumnType: \"dim\",\n      })),\n      ...qLayout.qHyperCube.qMeasureInfo.map((col, index) => ({\n        title: col.qFallbackTitle,\n        dataIndex:\n          cols[qLayout.qHyperCube.qDimensionInfo.length + index].dataKey,\n        dataKey: cols[qLayout.qHyperCube.qDimensionInfo.length + index].dataKey,\n        render: cols[qLayout.qHyperCube.qDimensionInfo.length + index].render,\n        defaultSortDesc: col.qSortIndicator === \"D\",\n        qInterColumnIndex: index + qLayout.qHyperCube.qDimensionInfo.length,\n        qPath: `/qHyperCubeDef/qMeasures/${index}`,\n        qSortIndicator: col.qSortIndicator,\n        qReverseSort: col.qReverseSort,\n        qGrandTotals: qLayout.qHyperCube.qGrandTotalRow[index],\n        qColumnType: \"meas\",\n      })),\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport default hyperCubeTransform;\n","import {\n  useCallback,\n  useRef,\n  useReducer,\n  useEffect,\n  useContext,\n  useState,\n} from \"react\";\nimport { deepMerge } from \"../utils/object\";\n\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport {\n  hyperCubeChartTransform,\n  multiDimHyperCubeTransform,\n  validData,\n} from \"../utils/hyperCubeUtilities\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: {\n      title,\n      subTitle,\n      metrics,\n      qData,\n      mData,\n      nameKey,\n      valueKey,\n      qListData,\n      dataList,\n      dataKeys,\n      qRData,\n      qLayout,\n      selections,\n    },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        title,\n        subTitle,\n        metrics,\n        qData,\n        mData,\n        nameKey,\n        valueKey,\n        qListData,\n        dataList,\n        dataKeys,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: [],\n  qLists: null,\n  qHyperCubeDef: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 1000,\n  },\n  qSortByAscii: 1,\n  qSortByLoadOrder: 1,\n  qInterColumnSortOrder: [],\n  qSuppressZero: false,\n  qSortByExpression: 0,\n  qSuppressMissing: true,\n  qExpression: null,\n  getQRData: false,\n  qSortByNumeric: -1,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qTitle: null,\n  qSubTitle: null,\n  qMetrics: null,\n  qOtherTotalSpec: \"\",\n};\n\nconst useData = (props) => {\n  const {\n    cols,\n    qLists,\n    qTitle,\n    qSubTitle,\n    qMetrics,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSortByNumeric,\n    qSortByExpression,\n    qSuppressMissing,\n    qExpression,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    title,\n    subTitle,\n    metrics,\n    qData,\n    mData,\n    nameKey,\n    valueKey,\n    qListData,\n    dataList,\n    dataKeys,\n    qRData,\n    qLayout,\n    selections,\n  } = state;\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n\n  const qObject = useRef(null);\n\n  const qPage = useRef(qPageProp);\n\n  // error trapping\n  const [error, setError] = useState();\n  // page size\n  const [pageSize, setPageSize] = useState(qPage.current.qHeight);\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = {\n      qInfo: { qType: \"visualization\" },\n    };\n\n    if (qMetrics) {\n      qMetrics.map((metric) => {\n        // This will evaluate to a number if nothing supplied.\n        const metricType = metric.qType ? metric.qType : \"qValueExpression\";\n        qProp[metric.qName] = {\n          [metricType]: {\n            qExpr: metric.qExpr,\n          },\n        };\n      });\n    }\n\n    if (qLists) {\n      qProp.qListObjects = [];\n      qLists.map((list) => {\n        const listDef = {\n          qListObjectDef: {\n            qStateName: \"$\",\n            qLibraryId: \"\",\n            qDef: {\n              qFieldDefs: [Object.values(list)[0]],\n              qFieldLabels: [Object.keys(list)[0]],\n              qSortCriterias: [\n                {\n                  qSortByLoadOrder: 1,\n                },\n              ],\n            },\n            qInitialDataFetch: [\n              {\n                qTop: 0,\n                qHeight: 1,\n                qLeft: 0,\n                qWidth: 1,\n              },\n            ],\n          },\n        };\n        qProp.qListObjects.push(listDef);\n      });\n    }\n\n    if (qHyperCubeDef) {\n      const _qHyperCubeDef = qHyperCubeDef;\n      if (cols && cols[1]) {\n        _qHyperCubeDef.qMeasures[0].qDef = {\n          qDef: cols[1],\n        };\n      }\n      if (cols && cols[0])\n        _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n      qProp.qInfo.qType = \"HyperCube\";\n      qProp.qHyperCubeDef = _qHyperCubeDef;\n\n      return qProp;\n    }\n    const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n    const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n    let sortIndex = 0;\n\n    const qDimensions =\n      cols &&\n      cols\n        .filter((col, i) => {\n          const isDimension =\n            (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n            (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n            (typeof col === \"object\" &&\n              col.qLibraryId &&\n              col.qType &&\n              col.qType === \"dimension\") ||\n            (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n          if (isDimension && !qInterColumnSortOrderSet) {\n            myqInterColumnSortOrder[i] = sortIndex;\n            sortIndex += 1;\n          }\n\n          return isDimension;\n        })\n        .map((col) => {\n          if (typeof col === \"string\") {\n            return {\n              qDef: {\n                qFieldDefs: [col],\n                qSortCriterias: [\n                  {\n                    qSortByAscii,\n                    qSortByLoadOrder,\n                  },\n                ],\n              },\n              qNullSuppression: true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n          if (typeof col === \"object\" && !col.qLibraryId) {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n\n            return {\n              qDef: {\n                qFieldDefs: [col.qField],\n                qFieldLabels: [col.qLabel],\n                qSortCriterias: col.qSortCriterias\n                  ? [col.qSortCriterias]\n                  : [\n                      {\n                        qSortByLoadOrder,\n                        qSortByAscii,\n                      },\n                    ],\n              },\n              qOtherTotalSpec: totalSpec,\n              qOtherLabel:\n                qOtherTotalSpec !== undefined\n                  ? qOtherTotalSpec.qOtherLabel\n                  : \"Others\",\n              qAttributeExpressions,\n              qNullSuppression: col.qNullSuppression\n                ? col.qNullSuppression\n                : true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n          if (typeof col === \"object\" && col.qLibraryId) {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n            return {\n              qLibraryId: col.qLibraryId,\n              qType: col.qType,\n              qOtherTotalSpec: totalSpec,\n              qOtherLabel:\n                qOtherTotalSpec !== undefined\n                  ? qOtherTotalSpec.qOtherLabel\n                  : \"Others\",\n              qAttributeExpressions,\n              qNullSuppression: col.qNullSuppression\n                ? col.qNullSuppression\n                : true,\n              qSuppressMissing: true,\n              qShowTotalsAbove: true,\n            };\n          }\n\n          return col;\n        });\n\n    if (qDimensions && qDimensions.length > 1) {\n      const listDef = {\n        qListObjectDef: {\n          qStateName: \"$\",\n          qLibraryId: \"\",\n          qDef: {\n            qFieldDefs: qDimensions[1].qDef.qFieldDefs,\n            qFieldLabels: [\"multiDimDataKeys\"],\n            qSortCriterias: [\n              {\n                qSortByLoadOrder: 1,\n              },\n            ],\n          },\n          qInitialDataFetch: [\n            {\n              qTop: 0,\n              qHeight: 1,\n              qLeft: 0,\n              qWidth: 1,\n            },\n          ],\n        },\n      };\n      if (typeof qProp.qListObjects === \"undefined\") qProp.qListObjects = [];\n\n      qProp.qListObjects.push(listDef);\n    }\n\n    const qMeasures =\n      cols &&\n      cols\n        .filter((col, i) => {\n          const isMeasure =\n            (typeof col === \"string\" && col.startsWith(\"=\")) ||\n            (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n            (typeof col === \"object\" &&\n              col.qLibraryId &&\n              col.qType &&\n              col.qType === \"measure\") ||\n            (typeof col === \"object\" && col.qField.startsWith(\"=\"));\n          if (isMeasure && !qInterColumnSortOrderSet) {\n            myqInterColumnSortOrder[i] = sortIndex;\n            sortIndex += 1;\n          }\n\n          return isMeasure;\n        })\n        .map((col) => {\n          if (typeof col === \"string\") {\n            return {\n              qDef: {\n                qDef: col,\n                qNumFormat: col.qNumFormat,\n              },\n              qSortBy: {\n                qSortByNumeric,\n                qSortByExpression,\n                qExpression,\n                qSuppressMissing,\n              },\n            };\n          }\n          if (typeof col === \"object\") {\n            const qAttributeExpressions = [];\n            if (col.qAttributeExpressions) {\n              for (const [id, qExpression] of Object.entries(\n                col.qAttributeExpressions\n              )) {\n                qAttributeExpressions.push({\n                  id,\n                  qExpression,\n                  qLibraryId: \"\",\n                  qAttribute: false,\n                });\n              }\n            }\n            return {\n              qDef: {\n                qDef: col.qField,\n                qLabel: col.qLabel,\n                qNumFormat: {\n                  qType: col.qNumType || \"U\",\n                  qUseThou: 1,\n                  qFmt: col.qNumFmt,\n                  qDec: \".\",\n                  qThou: \",\",\n                },\n              },\n              qSortBy: {\n                qSortByNumeric,\n                qSortByExpression,\n                qExpression,\n                qSuppressMissing,\n              },\n              qAttributeExpressions,\n            };\n          }\n\n          return col;\n        });\n\n    qProp.qHyperCubeDef = {\n      qDimensions,\n      qMeasures,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSuppressMissing,\n      qColumnOrder,\n      qCalcCondition,\n      qTitle,\n    };\n\n    return qProp;\n  }, [\n    cols,\n    qTitle,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    try {\n      const qDataPages = await qObject.current.getHyperCubeData(\n        \"/qHyperCubeDef\",\n        [qPage.current]\n      );\n      return qDataPages[0];\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getMultiPageData = useCallback(async (numberOfPages) => {\n    const qObjects = qObject.current;\n    let qPages = qPage.current;\n    let qDataPages = null;\n    let qMatrix = [];\n\n    try {\n      for (var i = 0; i < numberOfPages; i++) {\n        qPages = {\n          ...qPages,\n          ...{ qTop: i * 1000 },\n        };\n        qDataPages = await qObjects.getHyperCubeData(\"/qHyperCubeDef\", [\n          qPages,\n        ]);\n\n        qMatrix.push(...qDataPages[0].qMatrix);\n      }\n\n      const qTails = qDataPages[0].qTails;\n      const qArea = qDataPages[0].qArea;\n\n      return { qTails, qMatrix, qArea };\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getListsFromData = useCallback(async (i) => {\n    return await qObject.current.getListObjectData(\n      `/qListObjects/${i}/qListObjectDef`,\n      [qPage.current]\n    );\n  });\n\n  const getListData = useCallback(async (layout) => {\n    if (!layout.qListObjects) return;\n    return await Promise.all(\n      layout.qListObjects.map(async (list, i) => getListsFromData(i))\n    );\n  }, []);\n\n  const getNameKey = useCallback(async (layout) => {\n    if (layout.qHyperCube.qDimensionInfo.length === 0) return null;\n    return layout.qHyperCube.qDimensionInfo[0].qFallbackTitle;\n  }, []);\n\n  const getValueKey = useCallback(async (layout) => {\n    if (layout.qHyperCube.qMeasureInfo.length === 0) return null;\n    return layout.qHyperCube.qMeasureInfo[0].qFallbackTitle;\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const structureData = useCallback(async (layout, data) => {\n    if (\n      (layout.qHyperCube.qDimensionInfo.length === 0 &&\n        layout.qHyperCube.qMeasureInfo.length === 0) ||\n      !data\n    )\n      return;\n\n    const mData =\n      layout.qHyperCube.qDimensionInfo.length === 1\n        ? hyperCubeChartTransform(data, layout.qHyperCube, cols)\n        : multiDimHyperCubeTransform(data, layout.qHyperCube);\n    return mData;\n  }, []);\n\n  const getDataKeys = useCallback(async (listData, measureInfo) => {\n    if (!listData) {\n      return measureInfo.map((measure) => measure.qFallbackTitle);\n    }\n\n    // Get values for the second dimension.\n    const keys = listData.filter(\n      (item) => Object.keys(item)[0] === \"multiDimDataKeys\"\n    );\n\n    return keys[0].multiDimDataKeys;\n  }, []);\n\n  const getDataKeyList = useCallback(async (listData, layout) => {\n    const listDetail = [];\n\n    if (!layout.qListObjects) return null;\n\n    layout.qListObjects.map((item, index) => {\n      const obj = {};\n      const key = item.qListObject.qDimensionInfo.qFallbackTitle;\n      const items = listData[index][0]\n        ? listData[index][0].qMatrix.map((item) => item[0].qText)\n        : null;\n\n      obj[key] = items;\n      listDetail.push(obj);\n    });\n\n    return listDetail;\n  }, []);\n\n  const getTitle = useCallback(async (layout) => {\n    return layout.qHyperCube.qTitle;\n  }, []);\n\n  const getMetrics = useCallback(async (layout, metrics) => {\n    if (!metrics) return;\n    let metricObj = {};\n\n    metrics.map((metric) => {\n      metricObj[metric.qName] = layout[metric.qName];\n    });\n    return metricObj;\n  }, []);\n\n  const update = useCallback(async () => {\n    const _qLayout = await getLayout();\n    const _qValid = await validData(_qLayout, engine);\n\n    const _qData = await (Math.ceil(_qLayout.qHyperCube.qSize.qcy / pageSize) <=\n    1\n      ? getData()\n      : getMultiPageData(Math.ceil(_qLayout.qHyperCube.qSize.qcy / pageSize)));\n\n    const _qListData = await getListData(_qLayout);\n    const _mData = await structureData(_qLayout, _qData);\n\n    const _nameKey = await getNameKey(_qLayout);\n    const _valueKey = await getValueKey(_qLayout);\n    const _dataList = await getDataKeyList(_qListData, _qLayout);\n\n    const _dataKeys = await getDataKeys(\n      _dataList,\n      _qLayout.qHyperCube.qMeasureInfo\n    );\n\n    const _qTitle = await getTitle(_qLayout);\n    const _qSubTitle = qSubTitle;\n\n    const _qMetrics = await getMetrics(_qLayout, qMetrics);\n    if (_qData && _isMounted.current) {\n      const _selections = _qData.qMatrix.filter((row) => row[0].qState === \"S\");\n\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          subTitle: _qSubTitle,\n          qData: _qData,\n          mData: _mData,\n          nameKey: _nameKey,\n          valueKey: _valueKey,\n          qListData: _qListData,\n          dataList: _dataList,\n          dataKeys: _dataKeys,\n          metrics: _qMetrics,\n          qLayout: _qLayout,\n          selections: _selections,\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          subTitle: _qSubTitle,\n          metrics: _qMetrics,\n          qData: _qData,\n          mData: _mData,\n          nameKey: _nameKey,\n          valueKey: _valueKey,\n          qListData: _qListData,\n          dataList: _dataList,\n          dataKeys: _dataKeys,\n          qLayout: _qLayout,\n        },\n      });\n    }\n    if (getQRData) {\n      const _qRData = await getReducedData();\n      if (_isMounted.current) {\n        dispatch({\n          type: \"updateReducedData\",\n          payload: { qRData: _qRData },\n        });\n      }\n    }\n  }, [getData, getLayout, getQRData, getReducedData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (qElemNumber, _selections, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        qElemNumber,\n        _selections,\n        toggle\n      ),\n    []\n  );\n  // const select = useCallback(\n  //   (qElemNumber, _selections, toggle = true) =>\n  //     qObject.current.selectHyperCubeValues(\n  //       '/qHyperCubeDef',\n  //       qElemNumber,\n  //       _selections,\n  //       toggle\n  //     ),\n  //   []\n  // );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  // takes column data and sorted the table, applies reverse sort\n  const handlerChange = useCallback(\n    async (isMeasure, value) => {\n      // If no sort is set, we need to set a default sort order\n      // if (column.qSortIndicator === \"N\") {\n      //   if (column.qPath.includes(\"qDimensions\")) {\n      //     await applyPatches([\n      //       {\n      //         qOp: \"add\",\n      //         qPath: `${column.qPath}/qDef/qSortCriterias`,\n      //         qValue: JSON.stringify([{ qSortByLoadOrder: 1 }]),\n      //       },\n      //     ]);\n      //   }\n      //   if (column.qPath.includes(\"qMeasures\")) {\n      //     await applyPatches([\n      //       {\n      //         qOp: \"add\",\n      //         qPath: `${column.qPath}/qSortBy`,\n      //         qValue: JSON.stringify({ qSortByLoadOrder: 1 }),\n      //       },\n      //     ]);\n      //   }\n      // }\n      await applyPatches([\n        {\n          qOp: \"replace\",\n          qPath: `/qHyperCubeDef/${\n            isMeasure ? \"qMeasures\" : \"qDimensions\"\n          }/0/qDef/${isMeasure ? \"qDef\" : \"qFieldDefs\"}`,\n          qValue: JSON.stringify(isMeasure ? value : [value]),\n        },\n      ]);\n    },\n    [applyPatches, qLayout]\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n  // const dataSet = { data: mData, dataKeys, dataList, nameKey };\n  const dataSet = {};\n\n  if (mData) dataSet.data = mData;\n  if (mData) dataSet.select = select;\n  if (dataKeys && dataKeys.length !== 0) dataSet.dataKeys = dataKeys;\n  if (dataList) dataSet.dataList = dataList;\n  if (nameKey) dataSet.nameKey = nameKey;\n  if (valueKey) dataSet.valueKey = valueKey;\n\n  return {\n    beginSelections,\n    endSelections,\n    qLayout,\n    qData,\n    mData,\n    qListData,\n    dataList,\n    handlerChange,\n    dataKeys,\n    nameKey,\n    // dataSet: { data: mData, dataKeys, dataList, nameKey },\n    dataSet,\n    title,\n    subTitle,\n    metrics,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n  };\n};\n\nexport default useData;\n","\nfunction createDef(\n  cols,\n  qTitle,\n  qHyperCubeDef,\n  qSortByAscii,\n  qSortByLoadOrder,\n  qInterColumnSortOrder,\n  qSuppressZero,\n  qSortByNumeric,\n  qSortByExpression,\n  qSuppressMissing,\n  qExpression,\n  qColumnOrder,\n  qCalcCondition,\n  qOtherTotalSpec,\n  totalSpec\n) {\n  const qProp = {\n    qInfo: { qType: \"visualization\" },\n  };\n\n  if (qHyperCubeDef) {\n    const _qHyperCubeDef = qHyperCubeDef;\n    if (cols && cols[1]) {\n      _qHyperCubeDef.qMeasures[0].qDef = {\n        qDef: cols[1],\n      };\n    }\n    if (cols && cols[0])\n      _qHyperCubeDef.qDimensions[0].qDef.qFieldDefs = [cols[0]];\n    qProp.qInfo.qType = \"HyperCube\";\n    qProp.qHyperCubeDef = _qHyperCubeDef;\n\n    return qProp;\n  }\n  const myqInterColumnSortOrder = qInterColumnSortOrder || [];\n  const qInterColumnSortOrderSet = !!qInterColumnSortOrder;\n  let sortIndex = 0;\n\n  const qDimensions = cols\n    .filter((col, i) => {\n      const isDimension =\n        (typeof col === \"string\" && !col.startsWith(\"=\")) ||\n        (typeof col === \"object\" && col.qDef && col.qDef.qFieldDefs) ||\n        (typeof col === \"object\" &&\n          col.qLibraryId &&\n          col.qType &&\n          col.qType === \"dimension\") ||\n        Array.isArray(col.qField) ||\n        (typeof col === \"object\" && !col.qField.startsWith(\"=\"));\n\n      if (isDimension && !qInterColumnSortOrderSet) {\n        myqInterColumnSortOrder[i] = sortIndex;\n        sortIndex += 1;\n      }\n\n      return isDimension;\n    })\n    .map((col) => {\n      if (typeof col === \"string\") {\n        return {\n          qDef: {\n            qFieldDefs: [col],\n            qSortCriterias: [\n              {\n                qSortByAscii,\n                qSortByLoadOrder,\n              },\n            ],\n          },\n          qNullSuppression: true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      if (typeof col === \"object\" && !col.qLibraryId) {\n        return {\n          qDef: {\n            qGrouping: col.qGrouping || \"N\",\n            qFieldDefs: !Array.isArray(col.qField)\n              ? [col.qField]\n              : [...col.qField],\n            qFieldLabels: [col.qLabel],\n            qSortCriterias: col.qSortCriterias\n              ? [col.qSortCriterias]\n              : [\n                  {\n                    qSortByLoadOrder,\n                    qSortByAscii,\n                  },\n                ],\n          },\n          qOtherTotalSpec: totalSpec,\n          qOtherLabel:\n            qOtherTotalSpec !== undefined\n              ? qOtherTotalSpec.qOtherLabel\n              : \"Others\",\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qNullSuppression: col.qNullSuppression ? col.qNullSuppression : true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      if (typeof col === \"object\" && col.qLibraryId) {\n        return {\n          qLibraryId: col.qLibraryId,\n          qType: col.qType,\n          qOtherTotalSpec: totalSpec,\n          qOtherLabel:\n            qOtherTotalSpec !== undefined\n              ? qOtherTotalSpec.qOtherLabel\n              : \"Others\",\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qNullSuppression: col.qNullSuppression ? col.qNullSuppression : true,\n          qSuppressMissing: true,\n          qShowTotalsAbove: true,\n        };\n      }\n      return col;\n    });\n\n  const qMeasures = cols\n    .filter((col, i) => {\n      const isMeasure =\n        (typeof col === \"string\" && col.startsWith(\"=\")) ||\n        (typeof col === \"object\" && col.qDef && col.qDef.qDef) ||\n        (typeof col === \"object\" &&\n          col.qLibraryId &&\n          col.qType &&\n          col.qType === \"measure\") ||\n        (typeof col === \"object\" &&\n          !Array.isArray(col.qField) &&\n          col.qField.startsWith(\"=\"));\n      if (isMeasure && !qInterColumnSortOrderSet) {\n        myqInterColumnSortOrder[i] = sortIndex;\n        sortIndex += 1;\n      }\n\n      return isMeasure;\n    })\n    .map((col) => {\n      if (typeof col === \"string\") {\n        return {\n          qDef: {\n            qDef: col,\n            qNumFormat: col.qNumFormat,\n          },\n          qSortBy: {\n            qSortByNumeric,\n            qSortByExpression,\n            qExpression,\n            qSuppressMissing,\n          },\n        };\n      }\n      if (typeof col === \"object\") {\n        return {\n          qDef: {\n            qDef: col.qField,\n            qLabel: col.qLabel,\n            qNumFormat: {\n              qType: col.qNumType || \"U\",\n              qUseThou: 1,\n              qFmt: col.qNumFmt,\n              qDec: \".\",\n              qThou: \",\",\n            },\n          },\n          qSortBy: {\n            qSortByNumeric,\n            qSortByExpression,\n            qExpression,\n            qSuppressMissing,\n          },\n          qAttributeExpressions: [\n            {\n              // cell background color\n              qExpression: col.qCondBackgroundFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellBackgroundColor\",\n            },\n            {\n              // cell text color\n              qExpression: col.qCondTextFormat,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"cellForegroundColor\",\n            },\n            {\n              // chart fill color\n              qExpression: col.qCondChartColor,\n              qLibraryId: \"\",\n              qAttribute: false,\n              id: \"colorTheme\",\n            },\n          ],\n          qChartType: col.qChartType,\n          qShowPoints: col.qShowPoints,\n          qCurve: col.qCurve,\n          qFillStyle: col.qFillStyle,\n          qLegendShape: col.qLegendShape,\n        };\n      }\n\n      return col;\n    });\n\n  qProp.qHyperCubeDef = {\n    qDimensions,\n    qMeasures,\n    qInterColumnSortOrder,\n    qSuppressZero,\n    qSuppressMissing,\n    qColumnOrder,\n    qCalcCondition,\n    qTitle,\n  };\n\n  return qProp;\n}\n\nexport default createDef;\n","import {\n  useState,\n  useCallback,\n  useRef,\n  useReducer,\n  useEffect,\n  useContext,\n} from \"react\";\nimport { deepMerge } from \"../utils/object\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport createDef from \"../utils/createHCDef\";\nimport {\n  getHeader,\n  hyperCubeTransform,\n  hyperCubeChartTransform,\n  orderCols,\n  validData,\n} from \"../utils/hyperCubeUtilities\";\n\nconst initialState = {\n  qData: null,\n  qRData: null,\n  qLayout: null,\n  headerGroup: null,\n  selections: null,\n};\n\n// details used to determine chart type for combo chart\n\nfunction reducer(state, action) {\n  const {\n    payload: {\n      title,\n      qData,\n      dataSet,\n      qRData,\n      headerGroup,\n      qLayout,\n      selections,\n    },\n    type,\n  } = action;\n\n  switch (type) {\n    case \"update\":\n      return {\n        ...state,\n        title,\n        qData,\n        dataSet,\n        headerGroup,\n        qLayout,\n        selections,\n      };\n    case \"updateReducedData\":\n      return {\n        ...state,\n        qRData,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nconst initialProps = {\n  cols: null,\n  qHyperCubeDef: null,\n  qTitle: null,\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 10,\n    qHeight: 300,\n  },\n  sortCriteria: {\n    qInterColumnSortOrder: [],\n    qSortByAscii: 1,\n    qSortByLoadOrder: 1,\n    qExpression: null,\n    qSortByNumeric: -1,\n    qSortByExpression: 0,\n  },\n  qSuppressZero: false,\n  qSuppressMissing: true,\n  getQRData: false,\n  qColumnOrder: [],\n  qCalcCondition: undefined,\n  qOtherTotalSpec: \"\",\n};\n\nconst useTable = (props) => {\n  const {\n    cols,\n    qTitle,\n    qHyperCubeDef,\n    qPage: qPageProp,\n    sortCriteria,\n    qSuppressZero,\n    qSuppressMissing,\n    qColumnOrder,\n    qCalcCondition,\n    getQRData,\n    qOtherTotalSpec,\n  } = deepMerge(initialProps, props);\n\n  const _isMounted = useRef(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByLoadOrder,\n    qExpression,\n    qSortByNumeric,\n    qSortByExpression,\n  } = sortCriteria;\n\n  const {\n    title,\n    qData,\n    dataSet,\n    qRData,\n    headerGroup,\n    qLayout,\n    selections,\n  } = state;\n\n  // load engine from props\n  //const myEngine = props.engine;\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const qObject = useRef(null);\n  const qPage = useRef(qPageProp);\n\n  // error trapping\n  const [error, setError] = useState();\n\n  //======================\n  // PAGING LOGIC\n\n  // page size\n  const [pageSize, setPageSize] = useState(qPage.current.qHeight);\n\n  // current page\n  const [page, _setPage] = useState(0);\n\n  const setPage = useCallback(\n    (_page) => {\n      _setPage(_page);\n      changePage({ qTop: _page * pageSize });\n    },\n    [changePage, pageSize]\n  );\n  window.setPage = setPage;\n\n  // calculated number of pages\n  const [pages, _setPages] = useState(0);\n  const setPages = useCallback(\n    (_pages) => {\n      if (page >= _pages) {\n        setPage(0);\n      }\n      _setPages(_pages);\n    },\n    [page, setPage]\n  );\n\n  //handle page change\n  const handlePageChange = useCallback(\n    (pageIndex) => {\n      setPage(pageIndex);\n    },\n    [setPage]\n  );\n\n  // page increment\n  const incrementPage = () => {\n    const nextPage = page + 1;\n    handlePageChange(nextPage);\n  };\n\n  // page decrement\n  const decrementPage = () => {\n    if (page == 0) {\n      //console.log(pages);\n      handlePageChange(pages - 1);\n    } else {\n      const prevPage = page - 1;\n      handlePageChange(prevPage);\n    }\n  };\n\n  // Find the total size of the Hypercube\n  useEffect(() => {\n    if (!qLayout || !qData) return;\n    setPages(Math.ceil(qLayout.qHyperCube.qSize.qcy / pageSize));\n  }, [qLayout, qData, pageSize, setPage, setPages]);\n\n  //======================\n\n  // Build qOtherTotalSpec object\n  let totalSpec;\n\n  if (typeof qOtherTotalSpec === \"object\") {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: qOtherTotalSpec.qOtherCount,\n    };\n  } else if (qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_COUNTED\",\n      qOtherCounted: \"8\",\n    };\n  } else if (!qOtherTotalSpec) {\n    totalSpec = {\n      qOtherMode: \"OTHER_OFF\",\n      qOtherCounted: \"\",\n    };\n  }\n\n  const generateQProp = useCallback(() => {\n    const qProp = createDef(\n      cols,\n      qTitle,\n      qHyperCubeDef,\n      qSortByAscii,\n      qSortByLoadOrder,\n      qInterColumnSortOrder,\n      qSuppressZero,\n      qSortByNumeric,\n      qSortByExpression,\n      qSuppressMissing,\n      qExpression,\n      qColumnOrder,\n      qCalcCondition,\n      qOtherTotalSpec,\n      totalSpec\n    );\n\n    return qProp;\n  }, [\n    cols,\n    qTitle,\n    qExpression,\n    qHyperCubeDef,\n    qInterColumnSortOrder,\n    qSortByAscii,\n    qSortByExpression,\n    qSortByLoadOrder,\n    qSuppressMissing,\n    qOtherTotalSpec,\n    qSuppressZero,\n  ]);\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n\n  const getData = useCallback(async () => {\n    try {\n      const qDataPages = await qObject.current.getHyperCubeData(\n        \"/qHyperCubeDef\",\n        [qPage.current]\n      );\n      return qDataPages[0];\n    } catch (error) {\n      setError(error); // from creation or business logic\n    }\n  }, []);\n\n  const getTitle = useCallback(async (layout) => {\n    return layout.qHyperCube.qTitle;\n  }, []);\n\n  const getReducedData = useCallback(\n    () => async () => {\n      const { qWidth } = qPage.current;\n      const _qPage = {\n        qTop: 0,\n        qLeft: 0,\n        qWidth,\n        qHeight: Math.round(10000 / qWidth),\n      };\n      const qDataPages = await qObject.current.getHyperCubeReducedData(\n        \"/qHyperCubeDef\",\n        [_qPage],\n        -1,\n        \"D1\"\n      );\n\n      return qDataPages[0];\n    },\n    []\n  );\n\n  const structureData = useCallback(async (layout, data, cols) => {\n    // let useNumonFirstDim;\n    const dataSet = hyperCubeTransform(\n      data,\n      layout.qHyperCube,\n      // useNumonFirstDim,\n      cols\n    );\n\n    return dataSet;\n  }, []);\n\n  const update = useCallback(async () => {\n    const _qLayout = await getLayout();\n    const _qTitle = await getTitle(_qLayout);\n    const _qValid = await validData(_qLayout, engine);\n    const _qData = await getData();\n\n    // Order colunns for dataKey\n    const _orderedCols = await orderCols(cols);\n    const _dataSet =\n      _qData && (await structureData(_qLayout, _qData, _orderedCols));\n    const _headerGroup = _qData && (await getHeader(_qLayout, _orderedCols));\n    if (_qData && _isMounted.current) {\n      const _selections = _qData.qMatrix.filter((row) => row[0].qState === \"S\");\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          qData: _qData,\n          dataSet: _dataSet,\n          headerGroup: _headerGroup,\n          qLayout: _qLayout,\n          selections: _selections,\n        },\n      });\n    } else if (_isMounted.current) {\n      dispatch({\n        type: \"update\",\n        payload: {\n          title: _qTitle,\n          qData: _qData,\n          dataSet: _dataSet,\n          headerGroup: _headerGroup,\n          qLayout: _qLayout,\n        },\n      });\n    }\n    if (getQRData) {\n      const _qRData = await getReducedData();\n      if (_isMounted.current) {\n        dispatch({\n          type: \"updateReducedData\",\n          payload: { qRData: _qRData },\n        });\n      }\n    }\n  }, [getData, getLayout, getQRData, getReducedData]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      qPage.current = {\n        ...qPage.current,\n        ...newPage,\n      };\n      update();\n    },\n    [update]\n  );\n\n  const beginSelections = useCallback(\n    () => qObject.current.beginSelections([\"/qHyperCubeDef\"]),\n    [true]\n  );\n\n  const endSelections = useCallback(\n    (qAccept) => qObject.current.endSelections(qAccept),\n    []\n  );\n\n  const select = useCallback(\n    (dimNo, qElemNumber, toggle = false) =>\n      qObject.current.selectHyperCubeValues(\n        \"/qHyperCubeDef\",\n        dimNo,\n        qElemNumber,\n        toggle\n      ),\n    []\n  );\n\n  const applyPatches = useCallback(\n    (patches) => qObject.current.applyPatches(patches),\n    []\n  );\n\n  // takes column data and sorted the table, applies reverse sort\n  const handleSortChange = useCallback(\n    async (column) => {\n      // If no sort is set, we need to set a default sort order\n      if (column.qSortIndicator === \"N\") {\n        if (column.qPath.includes(\"qDimensions\")) {\n          await applyPatches([\n            {\n              qOp: \"add\",\n              qPath: `${column.qPath}/qDef/qSortCriterias`,\n              qValue: JSON.stringify([{ qSortByLoadOrder: 1 }]),\n            },\n          ]);\n        }\n        if (column.qPath.includes(\"qMeasures\")) {\n          await applyPatches([\n            {\n              qOp: \"add\",\n              qPath: `${column.qPath}/qSortBy`,\n              qValue: JSON.stringify({ qSortByLoadOrder: 1 }),\n            },\n          ]);\n        }\n      }\n      await applyPatches([\n        {\n          qOp: \"replace\",\n          qPath: `${column.qPath}/qDef/qReverseSort`,\n          qValue: JSON.stringify(\n            !column.qReverseSort\n          ) /* JSON.stringify((newSorted[0].desc !== column.defaultSortDesc) !== !!column.qReverseSort) */,\n        },\n        {\n          qOp: \"replace\",\n          qPath: \"/qHyperCubeDef/qInterColumnSortOrder\",\n          qValue: JSON.stringify(\n            [\n              ...qLayout.qHyperCube.qEffectiveInterColumnSortOrder,\n            ].sort((a, b) =>\n              a === column.qInterColumnIndex\n                ? -1\n                : b === column.qInterColumnIndex\n                ? 1\n                : 0\n            )\n          ),\n        },\n      ]);\n      setPage(0);\n    },\n    [applyPatches, qLayout]\n  );\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      qObject.current.on(\"changed\", () => {\n        update(qProp.qHyperCubeDef.qMeasures);\n      });\n      update(qProp.qHyperCubeDef.qMeasures);\n    })();\n  }, [generateQProp, engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return {\n    beginSelections,\n    endSelections,\n    title,\n    qLayout,\n    qData,\n    dataSet,\n    headerGroup,\n    handleSortChange,\n    qRData,\n    changePage,\n    selections,\n    select,\n    applyPatches,\n    incrementPage,\n    decrementPage,\n    handlePageChange,\n    page, //current page\n    pageSize, //page size\n    pages, //number of pages\n  };\n};\n\nexport default useTable;\n","import { useState } from \"react\";\nconst enigma = require(\"enigma.js\");\nconst schema = require(\"enigma.js/schemas/12.170.2.json\");\nconst SenseUtilities = require(\"enigma.js/sense-utilities\");\n\nconst MAX_RETRIES = 3;\n\nfunction useGlobal(config) {\n  const responseInterceptors = [\n    {\n      // We only want to handle failed responses from QIX Engine:\n      onRejected: function retryAbortedError(sessionReference, request, error) {\n        console.warn(\n          \"Captured Request: Rejected\",\n          `Error Code: ${error.code} : ${error}`\n        );\n        // We only want to handle aborted QIX errors:\n        if (\n          error.code === schema.enums.LocalizedErrorCode.LOCERR_GENERIC_ABORTED\n        ) {\n          // We keep track of how many consecutive times we have tried to do this call:\n          request.tries = (request.tries || 0) + 1;\n          console.warn(`Captured Request: Retry #${request.tries}`);\n          // We do not want to get stuck in an infinite loop here if something has gone\n          // awry, so we only retry until we have reached MAX_RETRIES:\n          if (request.tries <= MAX_RETRIES) {\n            return request.retry();\n          }\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_GENERIC_INVALID_PARAMETERS\n        ) {\n          return error.code;\n        }\n        if (\n          error.code ===\n          schema.enums.LocalizedErrorCode.LOCERR_HC_MODAL_OBJECT_ERROR\n        ) {\n          return error.code;\n        }\n        // If it was not an aborted QIX call, or if we reached MAX_RETRIES, we let the error\n        // trickle down to potential other interceptors, and finally down to resolving/rejecting\n        // the initial promise that the user got when invoking the QIX method:\n        console.warn(error);\n\n        return this.Promise.reject(error);\n      },\n    },\n  ];\n\n  const [globalError, setGlobalError] = useState(false);\n\n  const [errorCode, seErrorCode] = useState(null);\n  const [global, setGlobal] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const tenantUri = config.host;\n        const webIntegrationId = config.webIntId;\n\n        const fetchResult = await fetch(\n          `https://${tenantUri}/api/v1/csrf-token`,\n          {\n            mode: \"cors\", // cors must be enabled\n            credentials: \"include\", // credentials must be included\n            headers: {\n              \"qlik-web-integration-id\": webIntegrationId,\n              \"content-type\": \"application/json\",\n            },\n          }\n        ).catch((error) => {\n          console.log(\"caught failed fetch\", error);\n        });\n\n        const csrfToken = fetchResult.headers.get(\"qlik-csrf-token\");\n        if (csrfToken == null) {\n          console.log(\"Not logged in\");\n          seErrorCode(-1);\n\n          return -1;\n        }\n        const session = enigma.create({\n          schema,\n          url: `wss://${tenantUri}/app/${config.appId}?qlik-web-integration-id=${webIntegrationId}&qlik-csrf-token=${csrfToken}`,\n          createSocket: (url) => new WebSocket(url),\n          responseInterceptors,\n        });\n        session.on(\"suspended\", () => {\n          console.warn(\"Captured session suspended\");\n        });\n        session.on(\"error\", () => {\n          console.warn(\"Captured session error\");\n        });\n        session.on(\"closed\", () => {\n          console.warn(\"Session was closed\");\n          seErrorCode(-3);\n\n          return -3;\n        });\n        const _global = await session.open();\n        const engineVersion = await _global.engineVersion();\n        const docList = await _global.getDocList({});\n        const oSName = await _global.oSName();\n        const oSVersion = await _global.oSVersion();\n        setGlobal({\n          global: _global,\n          docList,\n          engineVersion,\n          oSName,\n          oSVersion,\n        });\n\n        seErrorCode(1);\n\n        return 1;\n      }\n      if (config) {\n        const myConfig = config;\n        const url = SenseUtilities.buildUrl(myConfig);\n        try {\n          const session = enigma.create({\n            schema,\n            url,\n            responseInterceptors,\n          });\n          session.on(\"suspended\", () => {\n            console.warn(\"Captured session suspended\");\n          });\n          session.on(\"error\", () => {\n            console.warn(\"Captured session error\");\n          });\n          session.on(\"closed\", () => {\n            console.warn(\"Session was closed\");\n            seErrorCode(-3);\n\n            return -3;\n          });\n          const _global = await session.open();\n\n          const engineVersion = await _global.engineVersion();\n          const docList = await _global.getDocList({});\n          const oSName = await _global.oSName();\n          const oSVersion = await _global.oSVersion();\n          setGlobal({\n            global: _global,\n            docList,\n            engineVersion,\n            oSName,\n            oSVersion,\n          });\n\n          seErrorCode(1);\n\n          return 1;\n        } catch (err) {\n          console.warn(\"Captured Error\", err);\n          if (err.code === 1003) {\n            setGlobalError(\"No engine. App Not found.\");\n          }\n          seErrorCode(-2);\n\n          return -2;\n        }\n      }\n    })(null);\n  }, []);\n\n  return {\n    ...global,\n    globalError,\n    errorCode,\n  };\n}\n\nexport default useGlobal;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport { deepMerge } from \"../utils/object\";\nimport createDef from \"../utils/createHCDef\";\n\nconst initialProps = {\n  qPage: {\n    qTop: 0,\n    qLeft: 0,\n    qWidth: 1,\n    qHeight: 1000,\n  },\n  cols: null,\n  qHyperCubeDef: null,\n  config: null,\n};\n\nconst useButton = (props) => {\n  const { qPage: qPageProp, cols, qHyperCubeDef, config } = deepMerge(\n    initialProps,\n    props\n  );\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [qLayout, setQLayout] = useState(null);\n\n  const _isMounted = useRef(true);\n  const qObject = useRef(null);\n  //const qPage = useRef(qPageProp);\n\n  const generateQProp = useCallback(() => {\n    const qProp = createDef(cols, qHyperCubeDef);\n\n    return qProp;\n  }, [cols, qHyperCubeDef]);\n\n  useEffect(() => {\n    if (!engine || !cols) return;\n    if (qObject.current) return;\n    (async () => {\n      const qProp = generateQProp();\n      const qDoc = await engine;\n      qObject.current = await qDoc.createSessionObject(qProp);\n      setQLayout(await qObject.current.getLayout());\n    })();\n  }, [generateQProp, engine]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  const clearSelections = () => {\n    engine && engine.clearAll();\n  };\n\n  const previousSelection = () => {\n    engine && engine.back();\n  };\n\n  const nextSelection = () => {\n    engine && engine.forward();\n  };\n\n  const select = async (value, field) => {\n    const qDoc = await engine;\n    const qField = await qDoc.getField(field)\n    qField.select(value)\n  }\n\n  const selectValues = async (values, field, toggle=false) => {\n    const sel = await values.map(d => ({'qText': d}))\n    const qDoc = await engine;\n    const qField = await qDoc.getField(field)\n    qField.selectValues(sel,toggle)\n  }\n\n  const doReload = async (qMode, qPartial ) => {\n    const qDoc = await engine;\n    qDoc.doReload(qMode, qPartial, false)\n  }\n\n  const exportData = (filename) => {\n    const { host, secure, port, prefix } = config;\n\n    const id = qLayout.qInfo.qId;\n    const filenameExport = filename || \"Data Export\";\n    const _secure = secure ? \"https://\" : \"http://\";\n    const _port = port ? `:${port}` : \"\";\n    const server = _secure + host + _port + prefix;\n    engine.getObject(id).then((model) => {\n      model.exportData(\"CSV_C\", \"/qHyperCubeDef\", \"Test\", \"P\").then((url) => {\n        console.log(url.qUrl, url.qWarnings);\n        // window.open(server + url.qUrl, '_blank')\n      });\n    });\n  };\n\n  return {\n    clearSelections,\n    previousSelection,\n    nextSelection,\n    qLayout,\n    exportData,\n    select,\n    selectValues,\n    doReload,\n  };\n};\n\nexport default useButton;\n","import { useState, useEffect, useCallback, useRef, useContext } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useSearch = ({ searchValue, dimensions, qCount, qGroupItemCount }) => {\n  \n  const [groupResults, setGroupResults] = useState([]);\n  const [flatResults, setFlatResults] = useState([]);\n  const _isMounted = useRef(true);\n  const { engine } = useContext(EngineContext) || {};\n\n  useEffect(() => {\n    if (engine === undefined) {\n    } else {\n      (async () => {\n        try {\n          const qDoc = await engine;\n          const search = await qDoc.searchResults(\n            {\n              qSearchFields: dimensions,\n            },\n            [searchValue],\n            {\n              qOffset: 0,\n              qCount,\n              qGroupItemOptions: [\n                {\n                  qGroupItemType: \"FIELD\",\n                  qOffset: 0,\n                  qCount: qGroupItemCount,\n                },\n              ],\n            }\n          );\n          const res = await search;\n          const _groupRes = await groupRes(res)\n          const _flattenRes = await flattenRes(_groupRes)\n          setGroupResults(_groupRes);\n          setFlatResults(_flattenRes);\n          if (_isMounted.current) {\n            setGroupResults(_groupRes);\n            setFlatResults(_flattenRes);\n          }\n        } catch (e) {\n          console.warn(e);\n        }\n      })();\n    }\n  }, [engine, searchValue, qCount, qGroupItemCount, dimensions]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  const groupRes = v => {\n    let arr = []\n    let series = {};\n    v.qSearchGroupArray.map(d => {\n      series['id'] = d.qId\n      series['dimension'] = d.qItems[0].qIdentifier\n      series['value'] =  d.qItems[0].qItemMatches\n      arr.push(series)\n      series = {};\n    })\n    return arr\n  }\n\n  const flattenRes = v => {\n    const arr = [];\n    let series = {}\n    v.map(d => {\n      d.value.map(item => {\n        series['dimension'] = d.dimension\n        series['value'] = item.qText\n        arr.push(series)\n        series = {};\n      })\n    })\n    return arr\n\n  }\n\n  const groupSelect = useCallback((id) =>\n    (async () => {\n      const qDoc = await engine;\n      // eslint-disable-next-line no-unused-expressions\n      qDoc.selectAssociations(\n        {\n          qSearchFields: dimensions,\n          qContext: 'CurrentSelections'\n        },\n        [searchValue],\n        id\n        ),\n      [];\n    })()\n  );\n\n  const flatSelect = useCallback((dim, value) =>\n    (async () => {\n      const qDoc = await engine;\n      // eslint-disable-next-line no-unused-expressions\n      const qField = await qDoc.getField(dim)\n      qField.select(value)\n    })()\n  );\n\n  return {\n    groupResults,\n    flatResults,\n    flatSelect,\n    groupSelect,\n  };\n};\n\nexport default useSearch;\n","import { useState, useEffect, useRef, useContext, useCallback } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nlet qDoc = null;\nlet qObject = null;\n\nconst useSelectionObject = () => {\n  const { engine } = useContext(EngineContext) || {};\n\n  const _isMounted = useRef(true);\n  const [qLayout, setQLayout] = useState(null);\n  const [selections, setSelections] = useState(null);\n\n  const update = useCallback(async () => {\n    const _qLayout = await qObject.getLayout();\n    const sel = await getSelections(_qLayout);\n    if (_isMounted.current) {\n      setQLayout(_qLayout);\n      setSelections(sel);\n    }\n  }, []);\n\n  const getSelections = (v) => {\n    const selections = v.qSelectionObject.qSelections;\n    return selections;\n  };\n\n  const clearSelections = async (field, value) => {\n    if (field) {\n      const qField = await qDoc.getField(field);\n      if (value) {\n        await qField.toggleSelect(value);\n      } else {\n        await qField.clear();\n      }\n    } else {\n      qDoc.clearAll();\n    }\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line no-empty\n    if (engine === undefined) {\n    } else {\n      (async () => {\n        const qProp = {\n          qInfo: { qType: \"SelectionObject\" },\n          qSelectionObjectDef: {},\n        };\n        qDoc = await engine;\n        qObject = await qDoc.createSessionObject(qProp);\n        qObject.on(\"changed\", () => {\n          update();\n        });\n        update();\n      })();\n    }\n  }, [engine, update]);\n\n  useEffect(() => () => (_isMounted.current = false), []);\n\n  return { qLayout, selections, clearSelections };\n};\n\nexport default useSelectionObject;\n","import Uid from \"./Uid\";\n\nconst globals = {\n  qlik: null,\n  resize: null,\n};\n\nexport default { Uid, globals };\n","function uid(length) {\n  const ALPHABET = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const ID_LENGTH = length || 8;\n  let rtn = \"\";\n  for (let i = 0; i < ID_LENGTH; i += 1) {\n    rtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n  }\n  return rtn;\n}\n\nexport default uid;\n","import { useState } from \"react\";\nimport utility from \"../utils/CapApiUtils\";\n\n// let qlik;\n// let { qlik } = utility.qlobals;\nlet capabilityApisPromise;\nlet capApiSAASPromise;\n\nconst loadCapSAAS = async (config) => {\n  try {\n    if (capApiSAASPromise) {\n      await capApiSAASPromise;\n\n      return;\n    }\n    const tenantUrl = config.host;\n    const webIntegrationId = config.webIntId;\n\n    const link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = `https://${tenantUrl}/resources/autogenerated/qlik-styles.css`;\n    document.head.appendChild(link);\n    link.loaded = new Promise((resolve) => {\n      link.onload = () => {\n        resolve();\n      };\n    });\n\n    const script = document.createElement(\"script\");\n    script.src = `https://${tenantUrl}/resources/assets/external/requirejs/require.js`;\n    script.onload = async () => {\n      window.require.config({\n        baseUrl: `https://${tenantUrl}/resources`,\n        webIntegrationId,\n      });\n    };\n    document.body.appendChild(script);\n    script.loaded = new Promise((resolve) => {\n      script.onload = () => {\n        resolve();\n      };\n    });\n\n    capApiSAASPromise = Promise.all([link.loaded, script.loaded]);\n    await capApiSAASPromise;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst loadCapabilityApis = async (config) => {\n  try {\n    if (capabilityApisPromise) {\n      await capabilityApisPromise;\n\n      return;\n    }\n    const capabilityApisJS = document.createElement(\"script\");\n    const prefix = config.prefix !== \"\" ? `/${config.prefix}` : \"\";\n    capabilityApisJS.src = `${\n      (config.secure ? \"https://\" : \"http://\") +\n      config.host +\n      (config.port ? `:${config.port}` : \"\") +\n      prefix\n    }/resources/assets/external/requirejs/require.js`;\n    document.head.appendChild(capabilityApisJS);\n    capabilityApisJS.loaded = new Promise((resolve) => {\n      capabilityApisJS.onload = () => {\n        resolve();\n      };\n    });\n    const capabilityApisCSS = document.createElement(\"link\");\n    capabilityApisCSS.href = `${\n      (config.secure ? \"https://\" : \"http://\") +\n      config.host +\n      (config.port ? `:${config.port}` : \"\") +\n      prefix\n    }/resources/autogenerated/qlik-styles.css`;\n    capabilityApisCSS.type = \"text/css\";\n    capabilityApisCSS.rel = \"stylesheet\";\n    document.head.appendChild(capabilityApisCSS);\n    capabilityApisCSS.loaded = new Promise((resolve) => {\n      capabilityApisCSS.onload = () => {\n        resolve();\n      };\n    });\n\n    capabilityApisPromise = Promise.all([\n      capabilityApisJS.loaded,\n      capabilityApisCSS.loaded,\n    ]);\n    await capabilityApisPromise;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nfunction useCapability(config) {\n  const [app, setApp] = useState(() => {\n    (async () => {\n      if (config && config.qcs) {\n        const prefix = config.prefix !== \"\" ? `/${config.prefix}/` : \"/\";\n\n        const qConfig = {\n          host: config.host,\n          isSecure: config.secure,\n          port: config.port || 443,\n          prefix,\n          appId: config.appId,\n          webIntegrationId: config.webIntId,\n        };\n\n        try {\n          await loadCapSAAS(qConfig);\n          window.require.config({\n            baseUrl: `https://${qConfig.host}/resources`,\n            webIntegrationId: config.webIntId,\n          });\n\n          window.require([\"js/qlik\"], async (q) => {\n            const app = q.openApp(qConfig.appId, qConfig);\n            // apply theme set in QSE\n            app.theme.get().then((theme) => {\n              theme.apply();\n            });\n            setApp(app);\n\n            return 1;\n          });\n        } catch (error) {\n          throw new Error(error);\n        }\n      } else {\n        try {\n          await loadCapabilityApis(config);\n          const prefix = config.prefix !== \"\" ? `/${config.prefix}/` : \"/\";\n          window.require.config({\n            baseUrl: `${\n              (config.secure ? \"https://\" : \"http://\") +\n              config.host +\n              (config.port ? `:${config.port}` : \"\") +\n              prefix\n            }resources`,\n            paths: {\n              qlik: `${\n                (config.secure ? \"https://\" : \"http://\") +\n                config.host +\n                (config.port ? `:${config.port}` : \"\") +\n                prefix\n              }resources/js/qlik`,\n            },\n            config: {\n              text: {\n                useXhr() {\n                  return true;\n                },\n              },\n            },\n          });\n\n          return new Promise((resolve) => {\n            if (utility.globals.qlik) {\n              const app = utility.globals.qlik.openApp(config.appId, {\n                ...config,\n                isSecure: config.secure,\n                prefix,\n              });\n              // apply theme set in QSE\n              app.theme.get().then((theme) => {\n                theme.apply();\n              });\n              setApp(app);\n            } else {\n              window.require([\"js/qlik\"], (q) => {\n                utility.globals.qlik = q;\n                utility.globals.resize = () => {\n                  q.resize();\n                };\n                const app = q.openApp(config.appId, {\n                  ...config,\n                  isSecure: config.secure,\n                  prefix,\n                });\n                setApp(app);\n\n                return 1;\n              });\n            }\n          });\n        } catch (error) {\n          throw new Error(error);\n        }\n      }\n    })();\n  }, []);\n\n  return { app };\n}\n\nexport default useCapability;\n","import { useContext, useState, useEffect } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useApp = () => {\n  const { engine } = useContext(EngineContext) || {};\n  const [qApp, setApp] = useState();\n\n  const doReload = async (qMode, qPartial) => {\n    const qDoc = await engine;\n    qDoc.doReload(qMode, qPartial, false);\n  };\n\n  useEffect(\n    () =>\n      (async () => {\n        if (engine === undefined) {\n        } else {\n          const qDoc = await engine;\n\n          const appProperties = await qDoc.getAppProperties();\n\n          setApp({\n            app: qDoc,\n            appProperties,\n            ...appProperties,\n            doReload,\n          });\n        }\n      })(),\n    [engine]\n  );\n\n  return {\n    ...qApp,\n  };\n};\n\nexport default useApp;\n","import { useContext, useState, useEffect } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\nconst useLayout = () => {\n  const { engine } = useContext(EngineContext) || {};\n  const [layout, setLayout] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(\n    () =>\n      (async () => {\n        if (!engine) return;\n        try {\n          const qDoc = await engine;\n\n          const appLayout = await qDoc.getAppLayout();\n          setLayout({\n            appLayout,\n            ...appLayout,\n          });\n        } catch (err) {\n          setError(err);\n        }\n      })(),\n    [engine]\n  );\n\n  return {\n    ...layout,\n    error,\n  };\n};\n\nexport default useLayout;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\nimport { deepMerge } from \"../utils/object\";\n\nconst initialProps = {\n  id: null,\n  // qName: null,\n  comment: undefined,\n  numberPresentation: undefined,\n  includeInBookmark: false,\n  definition: null,\n};\n\nconst useVariable = (props) => {\n  const name = typeof props === \"string\" ? props : props.name || null;\n\n  const {\n    id,\n    // qName,\n    comment,\n    numberPresentation,\n    includeInBookmark,\n    definition,\n  } = deepMerge(initialProps, props);\n\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [qLayout, setQLayout] = useState(null);\n  const [qProperties, setQProperties] = useState(null);\n  const [error, setError] = useState(null);\n\n  const qObject = useRef(null);\n\n  const generateQProp = (\n    qId,\n    qName,\n    qComment,\n    qNumberPresentation,\n    qIncludeInBookmark,\n    qDefinition\n  ) => {\n    const qProp = {\n      qInfo: {\n        qId,\n        qType: \"Variable\",\n      },\n      qMetaDef: {},\n      qName,\n      qComment,\n      qNumberPresentation,\n      qIncludeInBookmark,\n      qDefinition: qDefinition.toString(),\n    };\n\n    return qProp;\n  };\n\n  const getVaribale = async (\n    qId,\n    qName,\n    qComment,\n    qNumberPresentation,\n    qIncludeInBookmark,\n    qDefinition\n  ) => {\n    const qDoc = await engine;\n\n    let qLocalObject;\n\n    if (!qId && !qName && !qDefinition) {\n      const qSessionObject = await qDoc.createSessionObject({\n        qInfo: {\n          qId: \"VL01\",\n          qType: \"VariableList\",\n        },\n        qVariableListDef: {\n          qType: \"variable\",\n        },\n      });\n      qLocalObject = await qSessionObject.getLayout();\n      setQLayout(qLocalObject);\n    }\n    if (qId && !qDefinition) {\n      qLocalObject = await qDoc.getVariableById({\n        qId,\n      });\n    }\n    if (qName && !qDefinition) {\n      qLocalObject = await qDoc.getVariableByName({\n        qName,\n      });\n    }\n    if (qName && qDefinition) {\n      try {\n        qLocalObject = await qDoc.getVariableByName({\n          qName,\n        });\n      } catch (err) {\n        if (!qLocalObject) {\n          qLocalObject = await qDoc.createSessionVariable(\n            generateQProp(\n              qId,\n              qName,\n              qComment,\n              qNumberPresentation,\n              qIncludeInBookmark,\n              qDefinition\n            )\n          );\n\n          qObject.current = await qLocalObject;\n          update(qObject.current);\n        }\n        if ((error.code = 18001)) {\n          setError(\"Variable already exists\");\n        } else {\n          setError(err);\n        }\n      }\n    }\n\n    return qLocalObject;\n  };\n\n  const getLayout = useCallback(() => qObject.current.getLayout(), []);\n  const getProperties = useCallback(() => qObject.current.getProperties(), []);\n\n  const setProperties = useCallback(async (props) => {\n    const {\n      qId,\n      qName,\n      qComment,\n      qNumberPresentation,\n      qIncludeInBookmark,\n      qDefinition,\n    } = props;\n    if (qObject.current) {\n      const qProperties = await getProperties();\n\n      const qObject = await qObject.current.setProperties(\n        generateQProp(\n          qId || qProperties.qInfo.qId,\n          qName || qProperties.qName,\n          qComment || qProperties.qComment,\n          qNumberPresentation || qProperties.qNumberPresentation,\n          qIncludeInBookmark || qProperties.qIncludeInBookmark,\n          qDefinition.toString() || qProperties.qDefinition.toString()\n        )\n      );\n      update(qObject.current);\n    }\n  }, []);\n\n  const setValue = useCallback(async (value) => {\n    if (qObject.current) {\n      const qProperties = await getProperties();\n\n      const qObject = await qObject.current.setProperties(\n        generateQProp(\n          qProperties.qInfo.qId,\n          qProperties.qName,\n          qProperties.qComment,\n          qProperties.qNumberPresentation,\n          qProperties.qIncludeInBookmark,\n          value.toString()\n        )\n      );\n      update(qObject.current);\n    }\n  }, []);\n\n  const update = useCallback(async (qObj) => {\n    const _qLayout = await getLayout();\n    _qLayout.value =\n      _qLayout.qNum === \"number\" ? _qLayout.qNum : _qLayout.qText;\n    setQLayout(_qLayout);\n    setQProperties(await getProperties());\n  }, []);\n\n  useEffect(() => {\n    if (!engine) return;\n\n    (async () => {\n      const qDoc = await engine;\n\n      try {\n        qObject.current = await getVaribale(\n          id,\n          name,\n          comment,\n          numberPresentation,\n          includeInBookmark,\n          definition\n        );\n\n        qObject.current.on(\"changed\", () => {\n          update(qObject.current);\n        });\n\n        update(qObject.current);\n      } catch (err) {\n        if (err.code === -2) {\n          setError(\"Variable Not Found\");\n        } else {\n          setError(err);\n        }\n      }\n    })();\n  }, [id, name, engine]);\n\n  if (qLayout && qLayout.qVariableList) {\n    qLayout.variableList = qLayout.qVariableList.qItems;\n  }\n\n  return {\n    qLayout,\n    ...qLayout,\n    qProperties,\n    setProperties,\n    setValue,\n    error,\n  };\n};\n\nexport default useVariable;\n","import { useContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { EngineContext } from \"../contexts/EngineProvider\";\n\n// const initialProps = {\n//   qId: null,\n// };\n\nconst useBookmark = (props) => {\n  const { engine, engineError } = useContext(EngineContext) || {};\n  const [bookmarks, setBookmarks] = useState(null);\n  const [error, setError] = useState(null);\n\n  const qObject = useRef(null);\n\n  const getBookmark = useCallback(\n    (qId) =>\n      qObject.current.getBookmark({\n        qId: qId,\n      }),\n    []\n  );\n\n  const getBookmarkLayout = async (qId) => {\n    const bookmark = await qObject.current.getBookmark({\n      qId,\n    });\n\n    return await bookmark.getLayout();\n  };\n\n  const applyBookmark = async (qId) => {\n    const bookmarkApplied =\n      qObject.current &&\n      qObject.current.applyBookmark({\n        qId,\n      });\n    if (bookmarkApplied) {\n      const appliedBookmark = await getBookmark(qId);\n      const bookmarkInfo = await appliedBookmark.getLayout();\n\n      setBookmarks({ ...bookmarks, appliedBookmark, bookmarkInfo });\n    }\n  };\n\n  const updateBookmark = async (qId, qTitle, qDescription) => {\n    const bookmark = await getBookmark(qId);\n\n    await bookmark.setProperties({\n      qProp: {\n        qInfo: {\n          qId,\n          qType: \"bookmark\",\n        },\n        qMetaDef: {\n          title: qTitle,\n          description: qDescription,\n        },\n      },\n    });\n\n    updateBookmarks();\n  };\n\n  const updateBookmarks = async () => {\n    const bookmarks = await getBookmarks();\n\n    const bookmarkList = bookmarks.map((d, i) => {\n      return {\n        id: d.qInfo.qId,\n        title: d.qMeta.title,\n        description: d.qMeta.description,\n        modifiedDate: d.qData.qBookmark.qUtcModifyTime,\n      };\n    });\n    setBookmarks({ bookmarks, bookmarkList });\n  };\n\n  const destroyBookmark = async (qId) => {\n    const bookmarkDestroyed = await qObject.current.destroyBookmark({\n      qId,\n    });\n\n    updateBookmarks();\n    return bookmarkDestroyed;\n  };\n\n  const createBookmark = async (qTitle, qDescription, qId = null) => {\n    const bookmarkCreated = await qObject.current.createBookmark({\n      qProp: {\n        qInfo: {\n          qId: qId,\n          qType: \"bookmark\",\n        },\n        qMetaDef: {\n          title: qTitle || \"Unnamed bookmark\",\n          description: qDescription,\n        },\n      },\n    });\n    const newBookmark = await bookmarkCreated.getLayout();\n\n    updateBookmarks();\n    return newBookmark;\n  };\n\n  const getBookmarks = useCallback(() =>\n    qObject.current.getBookmarks({\n      qOptions: {\n        qTypes: [\"bookmark\"],\n        qData: {},\n      },\n    })\n  );\n\n  const update = useCallback(async () => {\n    updateBookmarks();\n  }, []);\n\n  useEffect(() => {\n    if (!engine) return;\n    if (qObject.current) return;\n\n    (async () => {\n      const qDoc = await engine;\n\n      try {\n        qObject.current = qDoc;\n\n        qObject.current.on(\"changed\", () => {\n          update();\n        });\n        update();\n      } catch (err) {\n        if (err.code === -2) {\n          setError(\"Bookmark Not Found\");\n        } else {\n          setError(err);\n        }\n      }\n    })();\n  }, [engine]);\n\n  return {\n    ...bookmarks,\n    applyBookmark,\n    createBookmark,\n    destroyBookmark,\n    getBookmark,\n    getBookmarkLayout,\n    updateBookmark,\n    error,\n  };\n};\n\nexport default useBookmark;\n"],"names":["EngineContext","React","createContext","StyledLogin","config","header","body","bodySub","size","buttonText","backgroundColor","buttonFontColor","buttonColor","logo","logoHeight","logoWidth","loginfontFamily","tenantUri","host","webIntegrationId","webIntId","_jsx","style","position","top","left","zIndex","width","height","display","_jsxs","justifyContent","flexDirection","margin","padding","border","borderRadius","minWidth","alignSelf","fontFamily","boxSizing","borderBottom","WebkitBoxPack","WebkitJustifyContent","msFlexPack","overflow","WebkitFlexDirection","msFlexDirection","WebkitFlex","msFlex","flex","fontSize","src","alt","WebkitAlignItems","WebkitBoxAlign","msFlexAlign","alignItems","cursor","color","outline","WebkitTransition","transition","onClick","loginUrl","URL","searchParams","append","window","location","href","Login","_ref","rest","errorCode","useContext","propTypes","PropTypes","object","string","oneOf","defaultProps","StyledNotConnected","focusable","align","direction","reload","enigma","require","schema","SenseUtilities","useEngine","responseInterceptors","onRejected","sessionReference","request","error","console","warn","code","enums","LocalizedErrorCode","LOCERR_GENERIC_ABORTED","tries","retry","LOCERR_GENERIC_INVALID_PARAMETERS","LOCERR_HC_MODAL_OBJECT_ERROR","Promise","reject","engineError","setEngineError","useState","seErrorCode","engine","setEngine","qcs","csrfToken","fetch","mode","credentials","headers","catch","log","get","session","create","url","appId","createSocket","WebSocket","on","_global","open","_doc","openDoc","buildUrl","err","NotConnected","engineContext","engineConfigContext","Motor","children","licenseKey","NotConnectedheader","NotConnectedBody","NotConnectedButtonText","myConfig","setMyConfig","validLicense","setValidLicense","newEngine","userKey","userInput","i","licenses","push","input","CryptoAES","decrypt","toString","CryptoENC","filter","lic","LicenseCheck","useEffect","length","Provider","value","ReactWaterMark","waterMarkText","openSecurityDefense","securityAlarm","options","chunkWidth","chunkHeight","textAlign","textBaseline","globalAlpha","font","rotateAngle","fillStyle","isObject","item","Array","isArray","deepMerge","target","sources","output","forEach","source","Object","keys","key","initialState","qData","qRData","qLayout","selections","reducer","state","action","payload","type","Error","initialProps","cols","qHyperCubeDef","qPage","qTop","qLeft","qWidth","qHeight","qSortByAscii","qSortByLoadOrder","qInterColumnSortOrder","qSuppressZero","qSortByExpression","qSuppressMissing","qExpression","getQRData","qSortByNumeric","qColumnOrder","qCalcCondition","undefined","qOtherTotalSpec","useHyperCube","props","qPageProp","_isMounted","useRef","dispatch","useReducer","qObject","totalSpec","qOtherMode","qOtherCounted","qOtherCount","generateQProp","useCallback","qProp","qInfo","qType","_qHyperCubeDef","qMeasures","qDef","qDimensions","qFieldDefs","myqInterColumnSortOrder","qInterColumnSortOrderSet","sortIndex","col","isDimension","startsWith","qLibraryId","qField","map","qSortCriterias","qNullSuppression","qShowTotalsAbove","qOtherLabel","qAttributeExpressions","qCondBackgroundFormat","qAttribute","id","qCondTextFormat","qCondChartColor","qFieldLabels","qLabel","isMeasure","qNumFormat","qSortBy","qNumType","qUseThou","qFmt","qNumFmt","qDec","qThou","qChartType","qShowPoints","qCurve","qFillStyle","qLegendShape","getLayout","current","getData","async","getHyperCubeData","getReducedData","_qPage","Math","round","getHyperCubeReducedData","update","_qLayout","_qData","_selections","qMatrix","row","qState","measureInfo","d","qHyperCube","qMeasureInfo","_qRData","changePage","newPage","beginSelections","endSelections","qAccept","select","qElemNumber","toggle","selectHyperCubeValues","applyPatches","patches","qDoc","createSessionObject","listData","selectionsId","autoSortByState","dimension","label","qListObjectDef","useList","currentColumn","qShowAlternatives","qAutoSortByState","qDisplayNumberOfRows","getListObjectData","structureData","_listData","text","qText","number","qNumber","_selId","ignoreLock","selectListObjectValues","searchListObjectFor","acceptListObjectSearch","clearSelections","abortModal","motorListProps","getMeasureNames","qFallbackTitle","getDimensionNames","qDimensionInfo","validData","qListObject","DimCheck","qError","MeasCheck","isNaN","qMax","qMin","title","subTitle","metrics","mData","nameKey","valueKey","qListData","dataList","dataKeys","qLists","qTitle","qSubTitle","qMetrics","useData","setError","pageSize","setPageSize","metric","qName","qExpr","qListObjects","list","listDef","qStateName","values","qInitialDataFetch","entries","getMultiPageData","qObjects","qPages","qDataPages","numberOfPages","qTails","qArea","getListsFromData","getListData","layout","all","getNameKey","getValueKey","data","qNoOfDiemnsions","measureNames","dimensionNames","attrExpItems","index","attrExp","qAttrExps","qValues","qAttrExprInfoItem","itemIndex","qAttrExprInfo","qNum","hyperCubeChartTransform","qNoOfDimensions","parentText","transformedData","series","elemNumber","multiDimHyperCubeTransform","getDataKeys","multiDimDataKeys","measure","getDataKeyList","listDetail","obj","items","getTitle","getMetrics","metricObj","ceil","qSize","qcy","_qListData","_mData","_nameKey","_valueKey","_dataList","_dataKeys","_qTitle","_qSubTitle","_qMetrics","handlerChange","qOp","qPath","qValue","JSON","stringify","dataSet","createDef","qGrouping","headerGroup","sortCriteria","useTable","page","_setPage","setPage","_page","pages","_setPages","setPages","_pages","handlePageChange","pageIndex","dataKey","columnId","hyperCubeTransform","_orderedCols","dim","meas","getDims","getMeas","concat","orderCols","_dataSet","_headerGroup","dataIndex","render","defaultSortDesc","qSortIndicator","qInterColumnIndex","qReverseSort","qGrandTotals","qColumnType","qGrandTotalRow","getHeader","dimNo","handleSortChange","column","includes","qEffectiveInterColumnSortOrder","sort","a","b","incrementPage","decrementPage","useGlobal","globalError","setGlobalError","global","setGlobal","engineVersion","docList","getDocList","oSName","oSVersion","useButton","setQLayout","clearAll","previousSelection","back","nextSelection","forward","exportData","filename","getObject","qId","then","model","qUrl","qWarnings","field","getField","selectValues","sel","doReload","qMode","qPartial","useSearch","searchValue","dimensions","qCount","qGroupItemCount","groupResults","setGroupResults","flatResults","setFlatResults","search","searchResults","qSearchFields","qOffset","qGroupItemOptions","qGroupItemType","res","_groupRes","groupRes","_flattenRes","flattenRes","e","v","arr","qSearchGroupArray","qItems","qIdentifier","qItemMatches","groupSelect","selectAssociations","qContext","flatSelect","useSelectionObject","setSelections","getSelections","qSelectionObject","qSelections","qSelectionObjectDef","toggleSelect","clear","ALPHABET","ID_LENGTH","rtn","charAt","floor","random","globals","qlik","resize","capabilityApisPromise","capApiSAASPromise","useCapability","app","setApp","qConfig","isSecure","secure","port","prefix","tenantUrl","link","document","createElement","rel","head","appendChild","loaded","resolve","onload","script","baseUrl","loadCapSAAS","q","openApp","theme","apply","capabilityApisJS","capabilityApisCSS","loadCapabilityApis","paths","useXhr","utility","useApp","qApp","appProperties","getAppProperties","useLayout","setLayout","appLayout","getAppLayout","comment","numberPresentation","includeInBookmark","definition","useVariable","name","qProperties","setQProperties","qComment","qNumberPresentation","qIncludeInBookmark","qDefinition","qMetaDef","getProperties","setProperties","setValue","qLocalObject","qSessionObject","qVariableListDef","getVariableById","getVariableByName","createSessionVariable","getVaribale","qVariableList","variableList","useBookmark","bookmarks","setBookmarks","getBookmark","updateBookmarks","getBookmarks","bookmarkList","qMeta","description","modifiedDate","qBookmark","qUtcModifyTime","qOptions","qTypes","applyBookmark","appliedBookmark","bookmarkInfo","createBookmark","qDescription","bookmarkCreated","newBookmark","destroyBookmark","bookmarkDestroyed","getBookmarkLayout","bookmark","updateBookmark"],"mappings":"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"}