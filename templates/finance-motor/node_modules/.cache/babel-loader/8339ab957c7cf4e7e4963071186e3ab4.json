{"ast":null,"code":"var _jsxFileName = \"/Users/Alan_Green/Qlik Dev/motor-mono-repo/templates/finance-motor/src/components/ui/dropdown/dropdown.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport { Children, useState, useCallback, useEffect, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport { useClickOutside } from \"../../../hooks\";\nimport { Button } from \"../button/button\";\nimport { StyledDropMenu, StyledDropdown, StyledDropItem, StyledDropDivider } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dropdown = ({\n  children,\n  direction,\n  className,\n  ...restProps\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => {\n    setShow(prev => !prev);\n  };\n\n  const onClose = useCallback(() => {\n    setShow(false);\n  }, []);\n  const containerRef = useClickOutside(onClose);\n  const RenderChild = Children.map(children, el => {\n    const child = el;\n\n    if (child !== null) {\n      const childType = child.type;\n      const name = childType.displayName || childType.name;\n\n      if (name === \"DropdownToggle\") {\n        return /*#__PURE__*/_jsxDEV(child.type, { ...child.props,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this);\n      }\n\n      if (name === \"DropdownMenu\") {\n        return /*#__PURE__*/_jsxDEV(child.type, { ...child.props,\n          direction: direction,\n          show: show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(StyledDropdown, { ...restProps,\n    className: classnames(className, \"dropdown\"),\n    ref: containerRef,\n    children: RenderChild\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"3sHn6CS3/eqXLBF7hwyb1x6Mi9U=\", false, function () {\n  return [useClickOutside];\n});\n\n_c = Dropdown;\nDropdown.defaultProps = {\n  direction: \"down\"\n};\nexport const DropdownToggle = props => {\n  const {\n    children,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Button, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_c2 = DropdownToggle;\nDropdownToggle.defaultProps = {\n  label: \"DropdownToggle\"\n};\nDropdownToggle.displayName = \"DropdownToggle\";\nexport const DropdownMenu = ({\n  children,\n  show,\n  direction,\n  className,\n  ...restProps\n}) => {\n  _s2();\n\n  const [menuMeasure, setMenuMeasure] = useState({\n    clientWidth: 0,\n    clientHeight: 0,\n    clientLeft: 0,\n    clientTop: 0,\n    offsetWidth: 0,\n    offsetHeight: 0,\n    offsetLeft: 0,\n    offsetTop: 0\n  });\n  const menuRef = useRef(null);\n  useEffect(() => {\n    setMenuMeasure(prev => {\n      var _menuRef$current, _menuRef$current2, _menuRef$current3, _menuRef$current4, _menuRef$current5, _menuRef$current6, _menuRef$current7, _menuRef$current8;\n\n      return { ...prev,\n        clientWidth: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current = menuRef.current) === null || _menuRef$current === void 0 ? void 0 : _menuRef$current.clientWidth) || 0,\n        clientHeight: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current2 = menuRef.current) === null || _menuRef$current2 === void 0 ? void 0 : _menuRef$current2.clientHeight) || 0,\n        clientLeft: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current3 = menuRef.current) === null || _menuRef$current3 === void 0 ? void 0 : _menuRef$current3.clientLeft) || 0,\n        clientTop: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current4 = menuRef.current) === null || _menuRef$current4 === void 0 ? void 0 : _menuRef$current4.clientTop) || 0,\n        offsetWidth: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current5 = menuRef.current) === null || _menuRef$current5 === void 0 ? void 0 : _menuRef$current5.offsetWidth) || 0,\n        offsetHeight: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current6 = menuRef.current) === null || _menuRef$current6 === void 0 ? void 0 : _menuRef$current6.offsetHeight) || 0,\n        offsetLeft: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current7 = menuRef.current) === null || _menuRef$current7 === void 0 ? void 0 : _menuRef$current7.offsetLeft) || 0,\n        offsetTop: (menuRef === null || menuRef === void 0 ? void 0 : (_menuRef$current8 = menuRef.current) === null || _menuRef$current8 === void 0 ? void 0 : _menuRef$current8.offsetTop) || 0\n      };\n    });\n  }, [show]);\n  return /*#__PURE__*/_jsxDEV(StyledDropMenu, {\n    $menuWidth: menuMeasure.offsetWidth,\n    $show: show,\n    $direction: direction,\n    ref: menuRef,\n    className: classnames(className, \"dropdown-menu\"),\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(DropdownMenu, \"llAUm6o93RyDMiGNptWDrb2ITQo=\");\n\n_c3 = DropdownMenu;\nDropdownMenu.displayName = \"DropdownMenu\";\nexport const DropdownItem = ({\n  children,\n  path,\n  className,\n  active\n}) => /*#__PURE__*/_jsxDEV(StyledDropItem, {\n  active: active,\n  path: path,\n  className: classnames(className, \"dropdown-item\"),\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 120,\n  columnNumber: 3\n}, this);\n_c4 = DropdownItem;\nexport const DropdownDivider = ({\n  className\n}) => /*#__PURE__*/_jsxDEV(StyledDropDivider, {\n  className: classnames(className, \"dropdown-divider\")\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 130,\n  columnNumber: 3\n}, this);\n_c5 = DropdownDivider;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Dropdown\");\n$RefreshReg$(_c2, \"DropdownToggle\");\n$RefreshReg$(_c3, \"DropdownMenu\");\n$RefreshReg$(_c4, \"DropdownItem\");\n$RefreshReg$(_c5, \"DropdownDivider\");","map":{"version":3,"sources":["/Users/Alan_Green/Qlik Dev/motor-mono-repo/templates/finance-motor/src/components/ui/dropdown/dropdown.jsx"],"names":["Children","useState","useCallback","useEffect","useRef","classnames","useClickOutside","Button","StyledDropMenu","StyledDropdown","StyledDropItem","StyledDropDivider","Dropdown","children","direction","className","restProps","show","setShow","handleClick","prev","onClose","containerRef","RenderChild","map","el","child","childType","type","name","displayName","props","defaultProps","DropdownToggle","label","DropdownMenu","menuMeasure","setMenuMeasure","clientWidth","clientHeight","clientLeft","clientTop","offsetWidth","offsetHeight","offsetLeft","offsetTop","menuRef","current","DropdownItem","path","active","DropdownDivider"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/restrict-template-expressions */\n/* eslint-disable react/jsx-props-no-spreading */\nimport { Children, useState, useCallback, useEffect, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport { useClickOutside } from \"../../../hooks\";\nimport { Button } from \"../button/button\";\nimport {\n  StyledDropMenu,\n  StyledDropdown,\n  StyledDropItem,\n  StyledDropDivider,\n} from \"./style\";\n\nexport const Dropdown = ({ children, direction, className, ...restProps }) => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => {\n    setShow((prev) => !prev);\n  };\n  const onClose = useCallback(() => {\n    setShow(false);\n  }, []);\n\n  const containerRef = useClickOutside(onClose);\n\n  const RenderChild = Children.map(children, (el) => {\n    const child = el;\n    if (child !== null) {\n      const childType = child.type;\n      const name = childType.displayName || childType.name;\n      if (name === \"DropdownToggle\") {\n        return <child.type {...child.props} onClick={handleClick} />;\n      }\n      if (name === \"DropdownMenu\") {\n        return (\n          <child.type {...child.props} direction={direction} show={show} />\n        );\n      }\n    }\n    return null;\n  });\n\n  return (\n    <StyledDropdown\n      {...restProps}\n      className={classnames(className, \"dropdown\")}\n      ref={containerRef}\n    >\n      {RenderChild}\n    </StyledDropdown>\n  );\n};\n\nDropdown.defaultProps = {\n  direction: \"down\",\n};\n\nexport const DropdownToggle = (props) => {\n  const { children, ...restProps } = props;\n  return <Button {...restProps}>{children}</Button>;\n};\n\nDropdownToggle.defaultProps = {\n  label: \"DropdownToggle\",\n};\nDropdownToggle.displayName = \"DropdownToggle\";\n\nexport const DropdownMenu = ({\n  children,\n  show,\n  direction,\n  className,\n  ...restProps\n}) => {\n  const [menuMeasure, setMenuMeasure] = useState({\n    clientWidth: 0,\n    clientHeight: 0,\n    clientLeft: 0,\n    clientTop: 0,\n    offsetWidth: 0,\n    offsetHeight: 0,\n    offsetLeft: 0,\n    offsetTop: 0,\n  });\n  const menuRef = useRef(null);\n\n  useEffect(() => {\n    setMenuMeasure((prev) => {\n      return {\n        ...prev,\n        clientWidth: menuRef?.current?.clientWidth || 0,\n        clientHeight: menuRef?.current?.clientHeight || 0,\n        clientLeft: menuRef?.current?.clientLeft || 0,\n        clientTop: menuRef?.current?.clientTop || 0,\n        offsetWidth: menuRef?.current?.offsetWidth || 0,\n        offsetHeight: menuRef?.current?.offsetHeight || 0,\n        offsetLeft: menuRef?.current?.offsetLeft || 0,\n        offsetTop: menuRef?.current?.offsetTop || 0,\n      };\n    });\n  }, [show]);\n\n  return (\n    <StyledDropMenu\n      $menuWidth={menuMeasure.offsetWidth}\n      $show={show}\n      $direction={direction}\n      ref={menuRef}\n      className={classnames(className, \"dropdown-menu\")}\n      {...restProps}\n    >\n      {children}\n    </StyledDropMenu>\n  );\n};\n\nDropdownMenu.displayName = \"DropdownMenu\";\n\nexport const DropdownItem = ({ children, path, className, active }) => (\n  <StyledDropItem\n    active={active}\n    path={path}\n    className={classnames(className, \"dropdown-item\")}\n  >\n    {children}\n  </StyledDropItem>\n);\n\nexport const DropdownDivider = ({ className }) => (\n  <StyledDropDivider className={classnames(className, \"dropdown-divider\")} />\n);\n"]},"metadata":{},"sourceType":"module"}