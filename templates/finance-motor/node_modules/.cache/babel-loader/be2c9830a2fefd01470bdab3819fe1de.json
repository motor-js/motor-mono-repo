{"ast":null,"code":"var _jsxFileName = \"/Users/Alan_Green/Qlik Dev/motor-mono-repo/templates/finance-motor/src/components/search-bar/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Search, X } from \"react-feather\";\nimport { Input } from \"../forms/form-elements\";\nimport { useSearch } from \"@motor-js/engine\";\nimport { StyledSearch, StyledSearchHeader, StyledSearchBtn, StyledSearchClose, StyledSearchBody, StyledSearchTitle, StyledNavList, StyledNavBtn, StyledNavDivider, StyledNavListItem } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n\n  const [options, setOptions] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const qCount = 100;\n  const qGroupItemCount = 100;\n  const {\n    flatResults,\n    flatSelect\n  } = useSearch({\n    searchValue,\n    qCount,\n    qGroupItemCount\n  }); // Temporary Search suggestions for you to update\n\n  const searchSuggestions = [{\n    item: \"Search Term A\"\n  }, {\n    item: \"Search Term B\"\n  }, {\n    item: \"Search Term C\"\n  }];\n\n  const handleSearch = value => setSearchValue(value);\n\n  const handleSelect = (val, dim) => {\n    flatSelect(dim, val);\n    onClose();\n  };\n\n  useEffect(() => {\n    setOptions(flatResults);\n  }, [flatResults]);\n  return /*#__PURE__*/_jsxDEV(StyledSearch, {\n    $isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(StyledSearchHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"search\",\n        id: \"nav-search\",\n        name: \"nav-search\",\n        placeholder: \"Type and hit enter to search...\",\n        customStyle: \"noborder\",\n        fontSize: [\"14px\", null, null, \"16px\"],\n        onChange: e => handleSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSearchBtn, {\n        variant: \"texted\",\n        color: \"light\",\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSearchClose, {\n        variant: \"texted\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSearchBody, {\n      children: [/*#__PURE__*/_jsxDEV(StyledSearchTitle, {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledNavList, {\n        children: options && options.map((data, i) => /*#__PURE__*/_jsxDEV(StyledNavListItem, {\n          children: /*#__PURE__*/_jsxDEV(StyledNavBtn, {\n            onClick: () => handleSelect(data.value, data.dimension),\n            children: data.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSearchBody, {\n      children: [/*#__PURE__*/_jsxDEV(StyledNavDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSearchTitle, {\n        children: \"Search Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledNavList, {\n        children: searchSuggestions.map((data, i) => /*#__PURE__*/_jsxDEV(StyledNavListItem, {\n          children: /*#__PURE__*/_jsxDEV(StyledNavBtn, {\n            href: \"#\",\n            children: data.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"DpvvZYmFEUQRTCgcALNQvn/PWqI=\", false, function () {\n  return [useSearch];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/Alan_Green/Qlik Dev/motor-mono-repo/templates/finance-motor/src/components/search-bar/index.jsx"],"names":["useState","useEffect","Search","X","Input","useSearch","StyledSearch","StyledSearchHeader","StyledSearchBtn","StyledSearchClose","StyledSearchBody","StyledSearchTitle","StyledNavList","StyledNavBtn","StyledNavDivider","StyledNavListItem","SearchBar","isOpen","onClose","options","setOptions","searchValue","setSearchValue","qCount","qGroupItemCount","flatResults","flatSelect","searchSuggestions","item","handleSearch","value","handleSelect","val","dim","e","target","map","data","i","dimension"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Search, X } from \"react-feather\";\nimport { Input } from \"../forms/form-elements\";\nimport { useSearch } from \"@motor-js/engine\"\nimport {\n  StyledSearch,\n  StyledSearchHeader,\n  StyledSearchBtn,\n  StyledSearchClose,\n  StyledSearchBody,\n  StyledSearchTitle,\n  StyledNavList,\n  StyledNavBtn,\n  StyledNavDivider,\n  StyledNavListItem,\n} from \"./style\";\n\nconst SearchBar = ({ isOpen, onClose }) => {\n\n  const [options, setOptions] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const qCount = 100;\n  const qGroupItemCount = 100;\n\n  const { \n    flatResults,\n    flatSelect,\n  } = useSearch({ \n    searchValue,\n    qCount,\n    qGroupItemCount\n  })\n\n\n  // Temporary Search suggestions for you to update\n  const searchSuggestions = [\n    {\n    item: \"Search Term A\"\n    },\n    {\n      item: \"Search Term B\"\n    },\n    {\n      item: \"Search Term C\"\n    }\n  ];\n\n  const handleSearch = (value) => (\n    setSearchValue(value)\n  )\n\n  const handleSelect = (val, dim) => {\n    flatSelect(dim,val)\n    onClose()\n  };\n\n  useEffect(() => {\n    setOptions(flatResults)\n  },[flatResults])\n\n  return (\n    <StyledSearch $isOpen={isOpen}>\n      <StyledSearchHeader>\n        <Input\n          type=\"search\"\n          id=\"nav-search\"\n          name=\"nav-search\"\n          placeholder=\"Type and hit enter to search...\"\n          customStyle=\"noborder\"\n          fontSize={[\"14px\", null, null, \"16px\"]}\n          onChange={(e) => handleSearch(e.target.value)}\n        />\n        <StyledSearchBtn variant=\"texted\" color=\"light\">\n          <Search />\n        </StyledSearchBtn>\n        <StyledSearchClose variant=\"texted\" onClick={onClose}>\n          <X />\n        </StyledSearchClose>\n      </StyledSearchHeader>\n      <StyledSearchBody>\n        <StyledSearchTitle>Search Results</StyledSearchTitle>\n        <StyledNavList>\n          { options && options.map((data,i) => (\n            <StyledNavListItem key={i} >\n              <StyledNavBtn onClick={() => handleSelect(data.value, data.dimension)}>{data.value}</StyledNavBtn>\n            </StyledNavListItem>\n          ))}\n        </StyledNavList>\n      </StyledSearchBody>\n      <StyledSearchBody>\n        <StyledNavDivider />\n        <StyledSearchTitle>Search Suggestions</StyledSearchTitle>\n        <StyledNavList>\n          {searchSuggestions.map((data, i) => (\n            <StyledNavListItem key={i}>\n              <StyledNavBtn href=\"#\">{data.item}</StyledNavBtn>\n            </StyledNavListItem>\n          ))}\n        </StyledNavList>\n      </StyledSearchBody>\n    </StyledSearch>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}