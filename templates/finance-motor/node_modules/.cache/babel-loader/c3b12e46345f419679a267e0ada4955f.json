{"ast":null,"code":"var _jsxFileName = \"/Users/Alan_Green/Qlik Dev/motor-mono-repo/templates/finance-motor/src/components/ui/navbar/navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { getSiblings } from \"../../../methods\";\nimport { useClickOutside } from \"../../../hooks\";\nimport { StyledNavbar, StyledNavitem, StyledNavlink, StyledSubmenu, StyledSubNavItem, StyledSubNavlink, StyledMegaMenu, StyledMegaMenuInner, StyledMegamenuList, StyledMegamenuLabel } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Navbar = ({\n  menus\n}) => {\n  _s();\n\n  const clickHandler = (e, hasChildren) => {\n    if (hasChildren) {\n      e.preventDefault();\n      let target = e.currentTarget;\n\n      if (target.nodeName === \"A\") {\n        target = target.parentElement;\n      }\n\n      const submenu = target.querySelector(\".submenu\");\n      const siblings = getSiblings(target);\n      submenu === null || submenu === void 0 ? void 0 : submenu.classList.toggle(\"open\");\n      siblings.forEach(sib => {\n        sib.childNodes.forEach(child => {\n          var _childHT$classList;\n\n          const childHT = child;\n          childHT === null || childHT === void 0 ? void 0 : (_childHT$classList = childHT.classList) === null || _childHT$classList === void 0 ? void 0 : _childHT$classList.remove(\"open\");\n        });\n      });\n    }\n  };\n\n  const onClose = useCallback(() => {\n    const nav = document.querySelector(\".navbar\");\n    const submenu = nav === null || nav === void 0 ? void 0 : nav.querySelectorAll(\".submenu\");\n    submenu === null || submenu === void 0 ? void 0 : submenu.forEach(el => el.classList.remove(\"open\"));\n  }, []);\n  const containerRef = useClickOutside(onClose);\n  return /*#__PURE__*/_jsxDEV(StyledNavbar, {\n    ref: containerRef,\n    className: \"navbar\",\n    children: menus && menus.map(nav => {\n      const {\n        submenu,\n        megamenu,\n        id: navId,\n        Icon: NavIcon,\n        label: navLabel\n      } = nav;\n      const hasSubmenu = !!(submenu === null || submenu === void 0 ? void 0 : submenu.length);\n      const hasMegamenu = !!(megamenu === null || megamenu === void 0 ? void 0 : megamenu.length);\n      const hasChildren = hasSubmenu || hasMegamenu;\n      return /*#__PURE__*/_jsxDEV(StyledNavitem, {\n        $hasSubmenu: hasChildren,\n        onClick: e => clickHandler(e, hasChildren),\n        children: [/*#__PURE__*/_jsxDEV(StyledNavlink, {\n          path: hasChildren ? \"#!\" : nav.url,\n          children: [NavIcon && /*#__PURE__*/_jsxDEV(NavIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), navLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), hasSubmenu && /*#__PURE__*/_jsxDEV(StyledSubmenu, {\n          className: \"submenu\",\n          children: submenu === null || submenu === void 0 ? void 0 : submenu.map(({\n            id,\n            label,\n            url,\n            Icon\n          }) => /*#__PURE__*/_jsxDEV(StyledSubNavItem, {\n            children: /*#__PURE__*/_jsxDEV(StyledSubNavlink, {\n              path: url,\n              children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 34\n              }, this), label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 23\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), hasMegamenu && /*#__PURE__*/_jsxDEV(StyledMegaMenu, {\n          className: \"submenu\",\n          children: /*#__PURE__*/_jsxDEV(StyledMegaMenuInner, {\n            children: megamenu === null || megamenu === void 0 ? void 0 : megamenu.map(megaNav => {\n              var _megaNav$submenu;\n\n              return /*#__PURE__*/_jsxDEV(StyledMegamenuList, {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [(megaNav === null || megaNav === void 0 ? void 0 : megaNav.title) && /*#__PURE__*/_jsxDEV(StyledMegamenuLabel, {\n                    children: megaNav === null || megaNav === void 0 ? void 0 : megaNav.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 29\n                  }, this), megaNav === null || megaNav === void 0 ? void 0 : (_megaNav$submenu = megaNav.submenu) === null || _megaNav$submenu === void 0 ? void 0 : _megaNav$submenu.map(({\n                    id,\n                    label,\n                    url,\n                    Icon\n                  }) => /*#__PURE__*/_jsxDEV(StyledSubNavItem, {\n                    children: /*#__PURE__*/_jsxDEV(StyledSubNavlink, {\n                      path: url,\n                      children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 42\n                      }, this), label]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 31\n                    }, this)\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true)\n              }, megaNav.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, navId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"SCnTyqunlRuQslP2B1Qef/uBj4s=\", false, function () {\n  return [useClickOutside];\n});\n\n_c = Navbar;\nNavbar.defaultProps = {\n  menus: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/Alan_Green/Qlik Dev/motor-mono-repo/templates/finance-motor/src/components/ui/navbar/navbar.jsx"],"names":["React","useCallback","getSiblings","useClickOutside","StyledNavbar","StyledNavitem","StyledNavlink","StyledSubmenu","StyledSubNavItem","StyledSubNavlink","StyledMegaMenu","StyledMegaMenuInner","StyledMegamenuList","StyledMegamenuLabel","Navbar","menus","clickHandler","e","hasChildren","preventDefault","target","currentTarget","nodeName","parentElement","submenu","querySelector","siblings","classList","toggle","forEach","sib","childNodes","child","childHT","remove","onClose","nav","document","querySelectorAll","el","containerRef","map","megamenu","id","navId","Icon","NavIcon","label","navLabel","hasSubmenu","length","hasMegamenu","url","megaNav","title","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { getSiblings } from \"../../../methods\";\nimport { useClickOutside } from \"../../../hooks\";\nimport {\n  StyledNavbar,\n  StyledNavitem,\n  StyledNavlink,\n  StyledSubmenu,\n  StyledSubNavItem,\n  StyledSubNavlink,\n  StyledMegaMenu,\n  StyledMegaMenuInner,\n  StyledMegamenuList,\n  StyledMegamenuLabel,\n} from \"./style\";\n\nexport const Navbar = ({ menus }) => {\n  const clickHandler = (e, hasChildren) => {\n    if (hasChildren) {\n      e.preventDefault();\n      let target = e.currentTarget;\n      if (target.nodeName === \"A\") {\n        target = target.parentElement;\n      }\n      const submenu = target.querySelector(\".submenu\");\n      const siblings = getSiblings(target);\n      submenu?.classList.toggle(\"open\");\n      siblings.forEach((sib) => {\n        sib.childNodes.forEach((child) => {\n          const childHT = child;\n          childHT?.classList?.remove(\"open\");\n        });\n      });\n    }\n  };\n  const onClose = useCallback(() => {\n    const nav = document.querySelector(\".navbar\");\n    const submenu = nav?.querySelectorAll(\".submenu\");\n    submenu?.forEach((el) => el.classList.remove(\"open\"));\n  }, []);\n\n  const containerRef = useClickOutside(onClose);\n  return (\n    <StyledNavbar ref={containerRef} className=\"navbar\">\n      {menus &&\n        menus.map((nav) => {\n          const {\n            submenu,\n            megamenu,\n            id: navId,\n            Icon: NavIcon,\n            label: navLabel,\n          } = nav;\n          const hasSubmenu = !!submenu?.length;\n          const hasMegamenu = !!megamenu?.length;\n          const hasChildren = hasSubmenu || hasMegamenu;\n          return (\n            <StyledNavitem\n              $hasSubmenu={hasChildren}\n              key={navId}\n              onClick={(e) => clickHandler(e, hasChildren)}\n            >\n              <StyledNavlink path={hasChildren ? \"#!\" : nav.url}>\n                {NavIcon && <NavIcon />}\n                {navLabel}\n              </StyledNavlink>\n              {hasSubmenu && (\n                <StyledSubmenu className=\"submenu\">\n                  {submenu?.map(({ id, label, url, Icon }) => (\n                    <StyledSubNavItem key={id}>\n                      <StyledSubNavlink path={url}>\n                        {Icon && <Icon />}\n                        {label}\n                      </StyledSubNavlink>\n                    </StyledSubNavItem>\n                  ))}\n                </StyledSubmenu>\n              )}\n              {hasMegamenu && (\n                <StyledMegaMenu className=\"submenu\">\n                  <StyledMegaMenuInner>\n                    {megamenu?.map((megaNav) => (\n                      <StyledMegamenuList key={megaNav.id}>\n                        <>\n                          {megaNav?.title && (\n                            <StyledMegamenuLabel>\n                              {megaNav?.title}\n                            </StyledMegamenuLabel>\n                          )}\n                          {megaNav?.submenu?.map(({ id, label, url, Icon }) => (\n                            <StyledSubNavItem key={id}>\n                              <StyledSubNavlink path={url}>\n                                {Icon && <Icon />}\n                                {label}\n                              </StyledSubNavlink>\n                            </StyledSubNavItem>\n                          ))}\n                        </>\n                      </StyledMegamenuList>\n                    ))}\n                  </StyledMegaMenuInner>\n                </StyledMegaMenu>\n              )}\n            </StyledNavitem>\n          );\n        })}\n    </StyledNavbar>\n  );\n};\n\nNavbar.defaultProps = {\n  menus: [],\n};\n"]},"metadata":{},"sourceType":"module"}